var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccountDto.html",[0,0.174,1,2.102]],["body/classes/AccountDto.html",[0,0.188,1,3.786,2,2.569,3,0.188,4,0.149,5,0.168,6,3.621,7,0.61,8,1.538,9,3.851,10,5.429,11,4.458,12,6.272,13,4.127,14,6.272,15,4.458,16,1.202,17,5.576,18,1.814,19,5.576,20,1.108,21,0.016,22,0.699,23,1.242,24,1.064,25,5.576,26,3.25,27,2.741,28,4.183,29,2.587,30,4.183,31,4.183,32,7.166,33,4.183,34,4.183,35,4.183,36,0.188,37,5.576,38,4.183,39,5.576,40,4.183,41,5.576,42,4.183,43,5.576,44,4.183,45,5.576,46,4.183,47,5.576,48,4.183,49,5.576,50,4.183,51,2.151,52,2.057,53,0.008,54,0.011,55,0.008]],["title/components/AccountLoginFormComponent.html",[56,0.35,57,1.067]],["body/components/AccountLoginFormComponent.html",[0,0.125,3,0.125,4,0.099,5,0.112,7,0.405,8,1.15,16,0.798,18,1.529,20,1.104,21,0.016,22,0.997,23,0.93,24,1.06,36,0.125,51,1.428,52,1.024,53,0.005,54,0.008,55,0.005,56,0.453,57,1.534,58,0.938,59,0.866,60,1.288,61,0.866,62,0.866,63,5.046,64,1.904,65,5.046,66,1.827,67,2.034,68,3.558,69,0.831,70,1.3,71,1.3,72,1.3,73,1.3,74,2.12,75,1.603,76,3.661,77,1.934,78,3.558,79,1.354,80,2.963,81,1.197,82,3.954,83,3.954,84,2.963,85,2.743,86,1.974,87,3.954,88,3.608,89,2.963,90,3.294,91,2.404,92,1.38,93,2.412,94,2.404,95,2.963,96,3.661,97,2.777,98,3.558,99,2.404,100,0.372,101,0.866,102,2.743,103,0.866,104,0.283,105,1.827,106,1.355,107,1.705,108,2.404,109,1.428,110,0.981,111,0.798,112,1.974,113,1.974,114,1.974,115,2.963,116,2.158,117,2.158,118,2.404,119,2.404,120,2.404,121,2.158,122,0.9,123,2.158,124,1.974,125,1.974,126,2.777,127,2.963,128,1.974,129,1.827,130,2.144,131,1.705,132,2.158,133,1.705,134,1.827,135,0.6,136,1.3,137,1.247,138,0.678,139,1.734,140,0.866,141,1.734,142,0.735,143,1.858,144,0.766,145,1.15,146,0.735,147,0.706,148,0.866,149,0.735,150,0.798,151,0.575,152,1.873,153,0.866,154,0.6,155,0.6,156,0.831,157,0.866,158,0.6,159,1.438,160,0.866,161,0.6,162,0.866,163,0.6,164,0.866,165,0.766,166,1.598,167,0.866,168,0.766,169,0.831,170,1.56,171,0.735,172,0.766,173,0.831,174,0.766,175,1.534,176,0.766,177,0.766,178,0.766,179,0.735,180,0.866,181,0.831,182,0.678,183,0.798,184,0.866]],["title/components/AccountLoginRootComponent.html",[56,0.35,142,1.024]],["body/components/AccountLoginRootComponent.html",[0,0.133,3,0.133,4,0.106,5,0.119,7,0.431,8,1.205,16,0.849,18,1.268,20,1.157,21,0.016,22,1.023,23,0.73,24,1.111,36,0.133,52,1.611,53,0.006,54,0.009,55,0.006,56,0.47,57,0.815,58,0.983,59,0.922,60,1.371,61,0.922,62,0.922,64,1.862,69,0.885,70,1.362,71,1.362,72,1.362,73,1.362,74,2.135,75,1.646,77,2.026,79,1.419,81,1.255,92,0.815,93,1.683,100,0.456,101,0.922,103,0.922,104,0.301,107,3.523,108,2.559,109,2.246,110,1.045,111,0.849,122,0.638,130,1.52,133,1.815,134,1.945,135,0.638,136,1.362,137,1.307,138,0.722,139,1.788,140,0.922,141,1.788,142,1.519,143,1.908,144,0.815,145,1.582,146,0.783,147,0.752,148,0.922,149,0.783,150,0.849,151,0.612,152,1.917,153,0.922,154,0.638,155,0.638,156,0.885,157,0.922,158,0.638,159,1.492,160,0.922,161,0.638,162,0.922,163,0.638,164,0.922,165,0.815,166,1.648,167,0.922,168,0.815,169,1.307,170,1.619,171,0.783,172,0.815,173,0.885,174,0.815,175,1.582,176,0.815,177,0.815,178,0.815,179,0.783,180,1.619,181,0.885,182,0.722,183,0.849,184,0.922,185,4.458,186,4.458,187,1.704,188,4.036,189,2.682,190,5.298,191,1.442,192,2.264,193,3.781,194,4.496,195,2.559,196,1.607,197,1.371,198,3.418,199,2.874,200,1.307,201,1.607,202,1.307,203,1.442,204,2.559,205,2.559,206,2.102,207,2.102,208,2.559,209,0.922,210,2.102,211,3.781,212,2.957,213,2.957,214,2.559,215,2.297,216,2.559,217,3.394,218,3.394,219,3.394,220,2.297,221,2.957]],["title/modules/AccountModule.html",[222,1.067,223,2.75]],["body/modules/AccountModule.html",[0,0.169,3,0.169,4,0.135,5,0.152,21,0.016,36,0.233,53,0.007,54,0.01,55,0.007,58,1.337,75,0.814,100,0.572,104,0.384,106,1.838,135,0.814,151,1.327,154,1.383,155,1.383,158,1.383,161,1.383,163,1.383,222,1.039,223,5.6,224,1.276,225,1.748,226,2.972,227,1.748,228,2.627,229,1.39,230,3.262,231,3.262,232,3.262,233,4.266,234,4.005,235,2.671,236,1.937,237,1.589,238,2.928,239,2.395,240,3.19,241,2.048,242,2.19,243,4.036,244,4.036,245,3.418,246,2.679,247,3.692,248,2.928,249,4.036,250,3.262,251,3.262,252,4.036,253,3.262,254,3.262,255,2.48,256,3.426,257,3.19,258,3.262,259,3.19,260,3.262,261,2.627,262,1.917,263,2.994]],["title/components/AccountRegisterFormComponent.html",[56,0.35,144,1.067]],["body/components/AccountRegisterFormComponent.html",[0,0.119,3,0.119,4,0.095,5,0.107,7,0.387,8,1.111,13,1.746,16,0.762,18,1.502,20,1.067,21,0.016,22,1.128,23,0.909,24,1.024,36,0.119,51,1.364,52,0.979,53,0.005,54,0.008,55,0.005,56,0.441,57,0.732,58,0.906,59,0.827,60,1.231,61,0.827,62,0.827,63,4.968,64,1.189,65,4.968,66,1.746,67,1.965,68,3.461,69,0.794,70,1.256,71,1.256,72,1.256,73,1.256,74,2.108,75,1.612,76,3.589,77,1.868,78,3.461,79,1.309,80,2.863,81,1.157,82,3.864,83,3.864,84,2.863,85,2.65,86,1.886,87,3.864,89,2.863,90,3.204,92,1.343,93,2.371,95,2.863,96,3.577,98,3.461,100,0.405,101,0.827,102,2.65,103,0.827,104,0.27,105,2.65,106,1.294,109,1.364,110,0.938,111,0.762,112,1.886,113,1.886,114,1.886,115,3.461,116,3.13,117,3.13,118,2.296,119,2.296,120,2.296,121,2.062,122,0.87,123,3.13,124,2.863,125,1.886,127,2.863,128,1.886,129,1.746,130,2.071,131,1.629,132,2.062,133,1.629,134,1.746,135,0.573,136,1.256,137,1.205,138,0.648,139,1.694,140,0.827,141,1.694,142,0.703,143,1.822,144,1.499,145,2.135,146,0.703,147,0.675,148,0.827,149,0.703,150,0.762,151,0.55,152,1.841,153,0.827,154,0.573,155,0.573,156,0.794,157,0.827,158,0.573,159,1.398,160,0.827,161,0.573,162,0.827,163,0.573,164,0.827,165,0.732,166,1.561,167,0.827,168,0.732,169,0.794,170,1.518,171,0.703,172,0.732,173,0.794,174,0.732,175,1.499,176,0.732,177,0.732,178,0.732,179,0.703,180,0.827,181,0.794,182,0.648,183,0.762,184,0.827,264,3.486,265,2.296,266,2.296,267,2.653,268,2.296,269,1.529,270,2.062,271,1.746,272,2.296,273,1.529,274,2.296,275,1.746,276,2.296,277,2.296,278,2.653,279,2.65]],["title/components/AccountRegisterRootComponent.html",[56,0.35,146,1.024]],["body/components/AccountRegisterRootComponent.html",[0,0.132,3,0.132,4,0.105,5,0.119,7,0.43,8,1.202,16,0.846,18,1.266,20,1.154,21,0.016,22,1.022,23,0.728,24,1.108,36,0.132,52,1.607,53,0.006,54,0.009,55,0.006,56,0.469,57,0.813,58,0.98,59,0.919,60,1.367,61,0.919,62,0.919,64,1.064,69,0.882,70,1.358,71,1.358,72,1.358,73,1.358,74,2.134,75,1.646,77,2.021,79,1.416,81,1.251,92,0.813,93,1.679,100,0.455,101,0.919,103,0.919,104,0.3,109,2.24,110,1.041,111,0.846,122,0.636,130,1.515,133,1.809,134,1.939,135,0.636,136,1.358,137,1.304,138,0.719,139,1.786,140,0.919,141,1.786,142,0.78,143,1.906,144,0.813,145,2.102,146,1.517,147,0.749,148,0.919,149,0.78,150,0.846,151,0.61,152,1.915,153,0.919,154,0.636,155,0.636,156,0.882,157,0.919,158,0.636,159,1.489,160,0.919,161,0.636,162,0.919,163,0.636,164,0.919,165,0.813,166,1.645,167,0.919,168,0.813,169,1.304,170,1.616,171,0.78,172,0.813,173,0.882,174,0.813,175,1.58,176,0.813,177,0.813,178,0.813,179,0.78,180,1.616,181,0.882,182,0.719,183,0.846,184,0.919,185,4.451,186,4.451,187,1.698,188,4.028,189,2.676,190,5.291,191,1.437,192,2.261,193,3.771,195,2.551,196,1.601,197,1.367,198,3.412,199,2.867,200,1.302,201,1.601,202,1.302,203,1.437,204,2.551,205,2.551,206,2.095,207,2.095,208,2.551,209,0.919,210,2.095,211,3.771,214,2.551,215,2.29,216,2.551,217,3.386,218,3.386,219,3.386,220,2.29,269,3.302,270,2.29,280,4.488,281,4.357,282,4.357,283,3.097,284,2.947]],["title/modules/AccountRoutingModule.html",[222,1.067,233,2.375]],["body/modules/AccountRoutingModule.html",[0,0.223,3,0.223,4,0.178,5,0.2,21,0.016,36,0.223,53,0.01,54,0.012,55,0.01,56,0.565,64,1.215,100,0.548,104,0.507,142,1.652,145,1.372,146,1.652,224,1.686,229,1.836,233,3.831,239,2.005,242,2.631,257,3.831,258,4.308,259,3.831,260,4.308,261,2.199,262,1.489,285,4.977,286,3.275,287,4.105,288,3.703,289,2.309,290,4.118,291,4.105,292,4.308,293,3.867,294,3.538]],["title/injectables/AccountService.html",[192,1.367,295,1.427]],["body/injectables/AccountService.html",[0,0.111,3,0.209,4,0.088,5,0.1,7,0.361,8,1.054,16,1.097,18,1.745,20,1.5,21,0.016,22,0.947,23,1.077,24,1.441,27,1.409,36,0.111,52,2.09,53,0.005,54,0.008,55,0.005,64,1.28,75,0.825,81,1.097,92,1.563,93,2.021,100,0.492,104,0.252,107,3.22,109,2.696,111,2.072,122,0.535,145,1.054,192,1.35,194,3.307,196,2.535,197,2.164,200,1.094,201,1.346,202,1.094,207,1.76,209,1.867,269,3.023,273,1.427,280,3.307,289,1.149,290,2.689,293,4.075,295,1.409,296,1.63,297,2.143,298,3.207,299,4.665,300,5.988,301,3.316,302,4.665,303,3.821,304,3.821,305,2.346,306,5.173,307,4.665,308,2.143,309,3.728,310,4.665,311,5.244,312,4.107,313,3.821,314,2.514,315,3.821,316,2.476,317,2.476,318,2.476,319,3.67,320,2.476,321,2.476,322,3.821,323,4.256,324,2.476,325,4.665,326,2.476,327,2.476,328,2.476,329,3.307,330,2.476,331,3.821,332,3.821,333,2.476,334,2.476,335,2.476,336,2.476,337,1.346,338,1.63,339,1.208,340,1.427,341,2.476,342,2.476,343,2.476,344,2.476,345,5.667,346,2.476,347,2.476,348,2.476,349,1.273,350,2.476,351,2.476,352,3.307,353,2.143,354,3.316,355,3.307,356,2.476,357,3.821,358,2.476,359,2.476,360,2.143,361,2.476,362,2.476,363,2.476,364,3.821,365,3.307,366,3.821,367,3.821,368,3.821,369,1.346,370,2.476,371,2.476,372,2.476,373,2.476,374,2.476,375,2.476,376,2.476,377,1.76,378,2.476,379,2.476,380,2.476,381,2.476,382,2.476,383,2.143,384,2.476,385,2.476,386,2.476]],["title/components/AppComponent.html",[56,0.35,147,0.984]],["body/components/AppComponent.html",[0,0.181,3,0.181,4,0.144,5,0.163,21,0.015,22,1.03,36,0.181,53,0.008,54,0.011,55,0.008,56,0.558,57,1.114,58,1.226,59,1.698,61,1.26,62,1.26,64,1.33,69,1.209,70,1.698,71,1.698,72,1.698,73,1.698,74,2.203,75,1.566,100,0.301,101,1.26,103,1.26,104,0.412,122,0.873,135,0.873,136,1.698,137,1.63,138,0.987,139,2.056,140,1.26,141,2.056,142,1.07,143,2.147,144,1.114,145,1.502,146,1.07,147,1.677,148,1.26,149,1.07,150,1.161,151,0.837,152,2.123,153,1.26,154,0.873,155,0.873,156,1.209,157,1.26,158,0.873,159,1.77,160,1.26,161,0.873,162,1.26,163,0.873,164,1.26,165,1.114,166,1.895,167,1.26,168,1.114,169,1.209,170,1.921,171,1.07,172,1.114,173,1.209,174,1.114,175,1.819,176,1.114,177,1.114,178,1.114,179,1.07,180,1.26,181,1.209,182,0.987,183,1.161,184,1.26,387,3.498,388,4.716]],["title/modules/AppModule.html",[222,1.067,389,2.75]],["body/modules/AppModule.html",[0,0.197,3,0.197,4,0.157,5,0.177,21,0.016,36,0.197,53,0.009,54,0.011,55,0.009,100,0.559,104,0.448,135,0.95,147,1.977,222,1.213,224,1.49,225,2.041,226,3.165,227,3.165,228,1.944,229,1.623,235,2.964,236,2.262,237,1.855,239,2.59,242,2.431,262,1.924,337,2.391,389,5.492,390,3.808,391,3.808,392,3.808,393,3.808,394,4.463,395,4.463,396,3.419,397,4.99,398,4.4,399,4.99,400,4.99,401,4.99,402,3.128,403,4.99,404,4.4,405,4.4,406,4.4,407,4.4]],["title/classes/AppPage.html",[0,0.174,408,3.005]],["body/classes/AppPage.html",[0,0.234,2,3.208,3,0.234,4,0.187,5,0.21,7,0.762,18,1.57,21,0.016,36,0.234,53,0.01,54,0.013,55,0.01,74,1.441,81,1.847,92,1.773,100,0.389,137,1.563,159,1.501,209,2.004,262,1.563,402,3.714,408,4.996,409,4.522,410,7.268,411,7.268,412,5.225,413,7.599,414,5.225,415,5.225,416,5.225,417,4.522,418,5.225,419,5.225,420,5.225]],["title/guards/AuthGuard.html",[421,2.75,422,2.375]],["body/guards/AuthGuard.html",[0,0.208,3,0.208,4,0.165,5,0.186,7,0.675,16,1.329,18,1.455,20,1.578,21,0.016,22,0.996,23,0.996,24,1.515,36,0.208,53,0.009,54,0.012,55,0.009,67,2.258,81,1.711,92,1.276,100,0.49,104,0.471,110,1.635,111,1.711,191,2.258,192,2.604,203,2.258,209,1.857,289,2.147,291,4.578,295,2.197,298,1.952,312,4.932,349,3.063,422,3.658,423,3.29,424,4.006,425,4.628,426,4.629,427,5.405,428,6.588,429,5.405,430,4.628,431,3.596,432,3.29,433,2.842,434,4.628,435,4.006,436,4.006,437,4.628,438,2.668]],["title/classes/AuthInfo.html",[0,0.174,306,2.75]],["body/classes/AuthInfo.html",[0,0.199,1,3.722,2,2.729,3,0.29,4,0.159,5,0.179,7,0.648,8,1.6,16,1.276,18,1.735,20,1.177,21,0.016,22,0.743,23,1.188,24,1.13,26,3.453,27,2.527,29,2.692,36,0.199,51,2.285,52,1.639,53,0.009,54,0.011,55,0.009,67,2.831,100,0.432,279,4.252,306,5.051,314,2.924,439,6.308,440,3.846,441,4.593,442,5.592,443,5.592,444,5.02,445,5.803,446,5.803,447,4.444,448,4.444,449,4.444,450,4.444,451,4.444,452,5.803,453,4.444,454,5.803,455,4.444,456,5.803,457,4.444,458,5.803,459,4.444]],["title/interceptors/AuthInterceptor.html",[460,3.005,461,2.545]],["body/interceptors/AuthInterceptor.html",[0,0.18,3,0.18,4,0.143,5,0.162,7,0.585,16,1.153,18,1.324,20,1.436,21,0.016,22,0.907,23,0.907,24,1.379,36,0.18,53,0.008,54,0.011,55,0.008,67,1.958,81,1.558,92,1.107,100,0.511,104,0.409,110,1.418,111,1.558,191,1.958,192,2.502,200,1.774,201,2.181,202,1.774,209,1.251,262,1.838,295,2,298,1.693,319,3.338,337,2.181,338,2.641,354,3.855,365,5.317,369,2.181,432,2.853,442,4.694,461,3.569,462,4.014,463,3.474,464,5.423,465,5.146,466,4.014,467,5.423,468,6.578,469,6.578,470,4.014,471,4.014,472,4.014,473,5.423,474,4.014,475,4.014,476,4.014,477,3.474,478,5.423,479,4.694,480,4.214,481,4.014,482,4.014,483,4.014,484,4.014,485,4.014,486,4.014,487,4.014,488,4.014,489,4.014,490,4.014,491,3.474,492,4.014,493,4.014,494,4.014,495,4.014,496,4.014]],["title/interfaces/AuthorizeAccountCommand.html",[107,2.375,497,1.111]],["body/interfaces/AuthorizeAccountCommand.html",[3,0.252,4,0.201,5,0.226,7,0.819,8,1.853,21,0.015,23,1.124,27,2.851,36,0.252,53,0.011,54,0.013,55,0.011,64,1.819,75,1.213,107,4.127,122,1.609,497,1.614,498,2.741,499,4.864,500,3.698]],["title/interfaces/CacheContent.html",[497,1.111,501,2.75]],["body/interfaces/CacheContent.html",[0,0.152,3,0.152,4,0.121,5,0.137,7,0.495,8,1.332,21,0.016,23,0.807,27,2.386,29,3,36,0.152,52,2.258,53,0.011,54,0.01,55,0.007,93,1.861,100,0.359,111,1.614,197,3.335,198,3.178,200,1.5,202,1.5,209,2.203,224,1.15,262,2.069,295,1.252,298,2.834,301,3.995,319,3.652,338,2.234,349,2.483,497,0.975,498,1.656,501,3.433,502,2.414,503,5.598,504,5.598,505,2.939,506,2.939,507,2.414,508,2.939,509,4.351,510,2.939,511,4.18,512,3.752,513,2.939,514,2.939,515,4.351,516,4.756,517,2.939,518,2.939,519,2.939,520,4.18,521,2.939,522,4.864,523,4.18,524,2.939,525,2.939,526,4.18,527,4.18,528,2.234,529,2.939,530,2.939,531,2.939,532,2.939,533,4.18,534,2.638,535,2.939,536,4.18,537,2.939,538,4.18,539,2.939,540,2.939,541,2.939,542,2.939,543,2.939,544,4.18,545,2.939,546,2.939,547,2.939,548,2.939,549,2.939,550,2.939,551,4.18,552,2.939,553,2.939,554,2.939,555,2.939,556,4.18,557,2.414,558,2.939,559,4.18,560,2.939,561,2.939,562,2.939,563,2.939]],["title/classes/CacheService.html",[0,0.174,509,2.75]],["body/classes/CacheService.html",[0,0.115,2,1.571,3,0.115,4,0.091,5,0.103,7,0.373,8,1.08,18,1.663,20,1.724,21,0.016,22,0.961,23,1.139,24,1.462,26,1.988,27,2.678,29,3.021,36,0.115,52,2.237,53,0.009,54,0.008,55,0.005,81,1.125,92,1.586,93,2.055,100,0.292,111,1.918,196,3.125,197,3.368,198,2.578,200,1.13,202,1.13,209,2.03,224,0.867,262,1.889,295,0.944,298,3.13,301,4.488,305,2.405,319,3.628,338,1.683,349,2.743,497,0.735,501,1.818,502,1.818,503,3.391,504,5.897,505,2.214,506,2.214,507,1.818,508,2.214,509,4.312,510,2.214,511,4.617,512,4.145,513,4.12,514,2.214,515,4.629,516,5.06,517,3.391,518,4.12,519,4.12,520,3.391,521,3.391,522,4.977,523,4.617,524,2.214,525,2.214,526,3.391,527,3.391,528,1.683,529,2.214,530,2.214,531,2.214,532,2.214,533,5.464,534,1.988,535,3.391,536,3.391,537,3.391,538,4.617,539,2.214,540,2.214,541,2.214,542,3.391,543,2.214,544,3.391,545,2.214,546,2.214,547,2.214,548,2.214,549,3.391,550,2.214,551,3.391,552,2.214,553,2.214,554,2.214,555,2.214,556,3.391,557,1.818,558,2.214,559,3.391,560,2.214,561,2.214,562,2.214,563,2.214,564,3.917,565,3.917,566,3.044,567,2.558,568,2.558,569,2.558,570,2.558,571,2.558,572,2.558,573,2.558,574,2.558,575,2.558,576,2.558,577,2.558]],["title/modules/CoreModule.html",[222,1.067,394,2.375]],["body/modules/CoreModule.html",[0,0.207,3,0.207,4,0.165,5,0.186,21,0.016,36,0.207,53,0.009,54,0.012,55,0.009,100,0.548,104,0.47,135,0.997,192,2.602,222,1.273,224,1.564,225,2.141,226,2.141,227,2.141,228,3.071,229,1.703,235,3.058,236,2.374,237,1.947,242,2.508,262,1.969,337,2.509,394,4.66,433,2.835,461,4.573,465,4.228,507,4.228,578,3.996,579,3.996,580,4.002,581,3.587,582,5.148,583,4.616,584,4.616,585,4.573,586,5.948,587,4.616,588,3.996,589,3.996,590,5.148]],["title/classes/CustomValidators.html",[0,0.174,271,2.545]],["body/classes/CustomValidators.html",[0,0.225,2,3.073,3,0.225,4,0.179,5,0.201,7,0.73,18,1.222,20,1.325,21,0.016,22,0.837,23,0.837,24,1.273,36,0.225,53,0.01,54,0.012,55,0.01,76,3.073,81,1.798,92,1.38,100,0.372,106,2.441,122,1.352,209,1.952,262,1.873,271,4.12,273,3.938,275,4.12,301,4.857,323,4.857,433,3.073,515,3.558,591,5.419,592,4.332,593,5.309,594,6.261,595,7.159,596,5.005,597,5.005,598,5.005,599,5.005]],["title/interfaces/ErrorWithContext.html",[497,1.111,600,2.75]],["body/interfaces/ErrorWithContext.html",[0,0.162,1,3.42,3,0.162,4,0.129,5,0.146,7,0.527,8,1.392,16,1.038,21,0.016,23,1.052,27,2.53,29,2.698,36,0.226,53,0.011,54,0.01,55,0.007,100,0.534,104,0.368,111,1.67,192,2.055,199,3.321,200,1.598,201,1.965,202,1.598,203,1.764,209,1.813,241,1.965,262,1.74,273,3.628,279,4.142,283,2.57,295,1.862,298,2.654,309,3.588,314,2.379,319,2.743,323,4.134,337,1.965,339,1.764,340,2.084,369,3.902,497,1.038,498,1.764,528,2.379,580,1.965,600,5.004,601,2.57,602,2.809,603,4.369,604,5.448,605,5.448,606,5.448,607,5.034,608,4.369,609,2.809,610,2.57,611,2.809,612,3.129,613,2.809,614,3.129,615,3.129,616,3.129,617,3.129,618,3.129,619,3.129,620,3.129,621,4.369,622,3.129,623,3.129,624,3.129,625,3.129,626,3.129,627,3.129,628,3.129,629,3.129,630,3.129,631,3.129,632,3.129,633,3.129,634,3.129,635,3.129,636,3.129]],["title/injectables/ErrorsHandler.html",[295,1.427,585,2.545]],["body/injectables/ErrorsHandler.html",[0,0.155,3,0.155,4,0.124,5,0.139,7,0.505,16,0.994,18,1.507,20,1.635,21,0.016,22,1.032,23,1.032,24,1.57,36,0.155,51,1.78,53,0.007,54,0.01,55,0.007,67,1.688,81,1.406,92,1.566,93,2.606,100,0.503,104,0.353,110,1.223,111,0.994,202,1.53,206,2.46,210,2.46,228,1.53,262,1.949,289,1.606,295,1.806,296,2.278,298,2.852,312,3.737,337,1.881,338,2.278,339,1.688,340,1.995,360,2.996,369,3.979,435,2.996,436,4.237,465,3.48,491,4.916,528,2.278,580,1.881,585,3.737,588,2.996,601,4.631,609,5.518,611,4.413,613,2.689,637,2.996,638,4.895,639,4.895,640,4.237,641,3.461,642,6.953,643,3.461,644,4.895,645,3.461,646,4.895,647,3.461,648,3.461,649,3.461,650,2.46,651,3.461,652,3.461,653,3.461,654,2.689,655,2.996,656,3.461,657,2.996,658,3.461,659,4.895,660,3.461,661,3.461,662,4.895,663,3.461,664,3.461,665,3.461,666,3.461,667,3.461,668,4.895,669,3.461,670,3.461,671,3.461,672,3.461]],["title/injectables/ErrorsLogger.html",[295,1.427,580,2.102]],["body/injectables/ErrorsLogger.html",[0,0.156,1,2.671,3,0.156,4,0.124,5,0.14,7,0.508,16,1.412,18,1.391,20,1.509,21,0.016,22,0.953,23,0.953,24,1.449,27,1.813,29,1.615,36,0.221,53,0.011,54,0.01,55,0.007,81,1.412,92,1.356,100,0.529,104,0.355,111,1.636,191,1.698,192,2.394,199,3.234,200,1.539,201,1.892,202,1.539,203,1.698,209,1.776,241,1.892,262,1.705,273,2.833,279,2.291,283,2.475,295,1.813,296,2.291,298,2.857,309,4.4,314,3.749,319,3.096,323,2.475,337,1.892,339,1.698,340,2.007,369,4.1,497,1,528,2.291,580,2.671,600,4.951,601,4.4,602,2.705,603,3.013,604,3.013,605,3.013,606,3.013,607,6.028,608,4.255,609,2.705,610,2.475,611,3.819,612,3.013,613,2.705,614,3.013,615,3.013,616,3.013,617,3.013,618,3.013,619,3.013,620,4.255,621,4.255,622,3.013,623,3.013,624,3.013,625,3.013,626,3.013,627,3.013,628,3.013,629,3.013,630,3.013,631,3.013,632,3.013,633,3.013,634,3.013,635,3.013,636,3.013,640,4.255,673,4.916,674,3.481,675,3.481,676,3.481]],["title/interfaces/FormControlError.html",[497,1.111,677,2.545]],["body/interfaces/FormControlError.html",[0,0.175,3,0.175,4,0.139,5,0.157,7,0.569,8,1.467,21,0.016,23,1.284,24,1.907,27,1.962,29,2.467,36,0.175,53,0.008,54,0.01,55,0.008,74,1.075,100,0.396,104,0.397,106,1.902,110,1.378,111,1.12,122,0.842,138,1.298,182,0.952,183,1.12,197,1.809,209,2.24,273,2.248,298,1.644,349,3.112,377,3.781,497,1.12,498,1.902,566,3.03,593,5.051,650,2.772,677,4.277,678,2.772,679,3.781,680,3.03,681,3.03,682,5.626,683,5.626,684,5.888,685,5.888,686,7.313,687,4.603,688,4.603,689,4.603,690,3.376,691,3.376,692,3.376,693,3.376,694,3.376,695,3.376,696,3.376,697,3.376,698,3.376,699,4.603,700,3.376,701,3.376,702,3.376,703,3.376,704,3.376,705,3.376,706,3.376,707,3.376,708,3.376]],["title/modules/GeneralModule.html",[222,1.067,709,2.75]],["body/modules/GeneralModule.html",[0,0.195,3,0.195,4,0.155,5,0.175,21,0.016,36,0.256,53,0.009,54,0.011,55,0.009,58,1.436,100,0.539,104,0.442,135,0.936,150,1.245,151,1.405,154,1.465,155,1.465,158,1.465,161,1.465,163,1.465,222,1.196,224,1.469,225,2.011,226,3.147,227,2.011,228,1.916,229,1.599,235,2.936,236,2.229,237,1.828,239,2.572,242,2.408,247,4.059,248,3.369,255,2.853,256,3.68,261,2.821,262,1.91,263,3.291,709,5.65,710,3.753,711,4.336,712,3.753,713,4.445,714,3.369]],["title/components/GeneralRootComponent.html",[56,0.35,149,1.024]],["body/components/GeneralRootComponent.html",[0,0.172,3,0.172,4,0.137,5,0.155,21,0.015,22,1.004,36,0.172,53,0.008,54,0.01,55,0.008,56,0.544,57,1.059,58,1.184,59,1.197,61,1.197,62,1.197,64,1.285,69,1.149,70,1.641,71,1.641,72,1.641,73,1.641,74,2.193,75,1.545,79,1.71,100,0.286,101,1.197,103,1.197,104,0.391,122,0.829,135,0.829,136,1.641,137,1.575,138,0.938,139,2.013,140,1.197,141,2.013,142,1.017,143,2.109,144,1.059,145,1.451,146,1.017,147,0.977,148,1.197,149,1.71,150,1.944,151,0.796,152,2.091,153,1.197,154,0.829,155,0.829,156,1.149,157,1.197,158,0.829,159,1.725,160,1.197,161,0.829,162,1.197,163,0.829,164,1.197,165,1.059,166,1.855,167,1.197,168,1.059,169,1.149,170,1.872,171,1.017,172,1.059,173,1.149,174,1.059,175,1.781,176,1.059,177,1.059,178,1.059,179,1.017,180,1.872,181,1.149,182,0.938,183,1.103,184,1.197,187,2.214,189,3.232,715,3.325,716,3.325,717,5.264,718,5.264,719,5.264,720,6.459,721,3.741,722,4.556]],["title/modules/GeneralRoutingModule.html",[222,1.067,713,2.375]],["body/modules/GeneralRoutingModule.html",[0,0.245,3,0.245,4,0.195,5,0.22,21,0.016,36,0.245,53,0.011,54,0.013,55,0.011,56,0.495,100,0.529,104,0.557,149,1.75,224,1.851,229,2.016,239,2.201,242,2.787,261,2.415,262,1.635,286,3.596,287,4.349,288,3.861,289,2.535,290,3.15,294,3.884,713,4.058,723,5.465]],["title/interfaces/HttpError.html",[441,2.75,497,1.111]],["body/interfaces/HttpError.html",[3,0.253,4,0.201,5,0.227,7,0.822,8,1.857,21,0.015,23,1.126,27,2.656,29,3.34,36,0.253,53,0.011,54,0.013,55,0.011,441,4.786,443,6.455,444,5.795,497,1.619,498,2.75,724,4.879,725,4.879]],["title/interfaces/IEnvironment.html",[497,1.111,726,2.75]],["body/interfaces/IEnvironment.html",[3,0.2,4,0.159,5,0.234,7,0.651,8,1.605,21,0.016,23,1.19,27,2.874,36,0.2,53,0.009,54,0.011,55,0.009,100,0.433,237,1.883,262,1.336,339,2.179,349,3.33,354,3.175,369,3.52,438,2.574,480,3.47,497,1.283,498,2.179,655,3.866,657,3.866,726,4.604,727,3.47,728,6.161,729,6.161,730,6.161,731,6.317,732,6.161,733,3.866,734,3.47,735,3.866,736,3.866,737,3.866,738,3.866,739,5.822,740,4.466,741,4.466,742,4.466,743,3.866,744,4.466,745,4.466,746,4.466,747,3.866,748,4.466,749,4.466,750,4.466,751,4.466,752,4.466,753,4.466,754,3.47,755,3.866]],["title/guards/LogoutGuard.html",[257,2.375,421,2.75]],["body/guards/LogoutGuard.html",[0,0.211,3,0.211,4,0.168,5,0.189,7,0.686,16,1.35,18,1.469,20,1.594,21,0.016,22,1.006,23,1.006,24,1.53,36,0.211,53,0.009,54,0.012,55,0.009,67,2.293,81,1.728,92,1.297,100,0.494,104,0.479,110,1.661,111,1.728,191,2.293,192,2.615,203,2.293,209,1.466,257,3.695,289,2.181,291,4.605,295,2.22,298,1.982,312,4.95,349,3.094,423,3.342,426,4.676,427,5.437,429,5.437,431,3.653,432,3.342,438,2.71,756,4.069,757,4.702,758,5.745,759,4.702,760,4.702,761,4.702,762,4.702]],["title/components/MainErrorComponent.html",[56,0.35,151,0.801]],["body/components/MainErrorComponent.html",[0,0.161,3,0.161,4,0.128,5,0.144,21,0.015,22,0.967,36,0.161,51,2.577,53,0.007,54,0.01,55,0.007,56,0.524,57,0.987,58,1.128,59,1.116,60,1.66,61,1.116,62,1.116,64,1.224,69,1.071,70,1.562,71,1.562,72,1.562,73,1.562,74,2.178,75,1.516,77,2.325,79,1.628,100,0.266,101,1.116,103,1.116,104,0.365,122,0.773,133,2.198,135,0.773,136,1.562,137,1.5,138,0.874,139,1.953,140,1.116,141,1.953,142,0.948,143,2.056,144,0.987,145,1.382,146,0.948,147,0.91,148,1.116,149,0.948,150,1.028,151,1.298,152,2.283,153,1.116,154,0.773,155,0.773,156,1.071,157,1.116,158,0.773,159,1.661,160,1.116,161,0.773,162,1.116,163,0.773,164,1.116,165,0.987,166,1.8,167,1.116,168,0.987,169,1.071,170,1.803,171,0.948,172,0.987,173,1.071,174,0.987,175,1.728,176,0.987,177,0.987,178,0.987,179,0.948,180,1.116,181,1.071,182,0.874,183,1.028,184,1.116,217,2.781,218,2.781,219,2.781,369,3.143,417,3.098,763,2.781,764,3.098,765,3.098,766,5.784,767,5.012,768,5.012,769,5.012,770,5.012,771,5.012,772,5.012,773,6.267,774,4.338,775,4.338,776,5.012,777,4.338,778,3.579,779,3.098,780,3.579,781,3.579]],["title/modules/MainModule.html",[222,1.067,395,2.375]],["body/modules/MainModule.html",[0,0.169,3,0.169,4,0.135,5,0.152,21,0.016,36,0.233,53,0.007,54,0.01,55,0.007,58,1.339,100,0.569,104,0.385,135,0.815,151,1.328,152,1.13,154,1.625,155,1.385,158,1.385,161,1.385,163,1.385,222,1.041,224,1.279,225,1.752,226,2.975,227,1.752,228,2.63,229,2.365,235,2.675,236,1.942,237,1.592,239,2.397,240,3.194,241,2.052,242,2.194,245,3.423,246,2.684,255,2.485,256,3.43,261,2.63,262,2.012,263,2.998,395,4.824,422,3.194,782,3.268,783,3.268,784,3.776,785,3.268,786,4.269,787,2.934,788,4.503,789,3.776,790,4.503,791,3.776,792,4.503,793,3.776,794,4.503,795,3.776,796,4.503,797,3.776,798,3.268]],["title/components/MainRootComponent.html",[56,0.35,154,0.835]],["body/components/MainRootComponent.html",[0,0.151,3,0.151,4,0.12,5,0.135,7,0.49,8,1.321,16,0.964,18,1.169,20,0.889,21,0.016,22,1.018,23,0.801,24,0.854,36,0.151,51,2.872,53,0.007,54,0.009,55,0.007,56,0.506,57,0.926,58,1.078,59,1.046,60,1.557,61,1.046,62,1.046,64,1.169,69,1.004,70,1.493,71,1.493,72,1.493,73,1.493,74,2.165,75,1.488,77,2.222,79,1.556,100,0.356,101,1.046,103,1.046,104,0.342,122,0.725,133,2.061,134,2.209,135,0.725,136,1.493,137,1.433,138,0.82,139,1.898,140,1.046,141,1.898,142,0.889,143,2.007,144,0.926,145,1.321,146,0.889,147,0.854,148,1.046,149,0.889,150,0.964,151,0.695,152,2.244,153,1.046,154,1.315,155,0.725,156,1.004,157,1.046,158,0.725,159,1.749,160,1.046,161,0.725,162,1.046,163,0.725,164,1.046,165,0.926,166,1.749,167,1.046,168,0.926,169,1.004,170,1.741,171,0.889,172,0.926,173,1.004,174,0.926,175,1.679,176,0.926,177,0.926,178,0.926,179,0.889,180,1.741,181,1.004,182,0.82,183,0.964,184,1.046,187,1.935,188,4.339,189,2.941,191,1.638,192,2.534,203,1.638,515,3.405,721,3.405,763,4.339,779,2.906,799,4.834,800,3.357,801,3.357,802,3.357,803,2.906,804,2.906,805,3.357,806,3.357,807,3.357,808,3.357,809,3.357,810,3.357,811,3.357,812,3.357,813,3.357,814,3.357,815,3.357,816,3.722]],["title/modules/MainRoutingModule.html",[222,1.067,786,2.375]],["body/modules/MainRoutingModule.html",[0,0.2,3,0.2,4,0.159,5,0.179,21,0.016,36,0.2,53,0.009,54,0.011,55,0.009,56,0.403,75,0.962,100,0.51,104,0.454,129,2.931,150,1.669,151,1.204,175,1.229,224,1.509,229,1.643,239,1.795,242,2.451,261,1.969,262,1.333,286,2.931,287,3.824,288,3.515,289,2.067,290,4.342,291,2.931,292,3.856,369,3.159,422,3.569,438,2.568,786,3.569,798,3.856,817,4.455,818,4.455,819,5.812,820,6.856,821,4.455,822,4.455,823,4.455,824,4.455,825,4.455,826,4.455,827,4.455,828,4.455,829,4.455,830,4.455,831,4.455]],["title/components/MainScrollToTopComponent.html",[56,0.35,155,0.835]],["body/components/MainScrollToTopComponent.html",[0,0.13,3,0.13,4,0.103,5,0.116,7,0.626,8,1.184,18,1.251,21,0.016,22,0.857,36,0.13,51,2.917,53,0.006,54,0.008,55,0.006,56,0.464,57,0.797,58,0.966,59,0.901,60,1.34,61,0.901,62,0.901,64,1.048,69,0.864,70,1.339,71,1.339,72,1.339,73,1.339,74,2.13,75,1.421,77,1.992,79,1.395,81,1.233,92,0.797,93,1.655,100,0.215,101,0.901,103,0.901,104,0.294,122,0.624,130,2.208,131,1.774,135,0.624,136,1.339,137,1.285,138,0.705,139,1.769,140,0.901,141,1.769,142,0.765,143,1.89,144,0.797,145,1.184,146,0.765,147,0.735,148,0.901,149,0.765,150,0.83,151,0.599,152,2.183,153,0.901,154,0.624,155,1.225,156,2.263,157,0.901,158,0.624,159,1.472,160,0.901,161,0.624,162,0.901,163,0.624,164,0.901,165,0.797,166,1.63,167,0.901,168,0.797,169,0.864,170,1.598,171,0.765,172,0.797,173,0.864,174,0.797,175,1.565,176,0.797,177,0.797,178,0.797,179,0.765,180,0.901,181,0.864,182,0.705,183,0.83,184,0.901,196,1.57,197,1.34,237,2.161,433,1.774,438,2.475,803,3.717,804,2.501,816,2.245,832,3.733,833,4.911,834,2.501,835,5.674,836,5.125,837,4.294,838,5.125,839,5.125,840,4.294,841,5.125,842,2.89,843,2.89,844,2.89,845,2.89,846,2.89,847,2.89,848,4.294,849,4.294,850,4.294,851,2.89,852,2.89,853,2.89,854,4.294,855,2.501,856,4.294,857,2.89,858,2.245,859,2.245,860,2.89,861,5.125,862,2.89,863,2.89,864,3.337,865,4.294,866,5.674,867,4.294,868,2.89,869,4.294,870,2.89,871,2.89,872,5.125,873,4.294,874,2.89,875,2.89,876,2.89,877,2.89,878,2.89,879,5.674,880,2.89,881,2.89,882,4.294,883,2.89,884,2.89]],["title/components/MainToolbarAvatarComponent.html",[56,0.35,158,0.835]],["body/components/MainToolbarAvatarComponent.html",[0,0.139,3,0.139,4,0.111,5,0.125,7,0.452,9,3.279,16,0.89,18,1.304,20,0.821,21,0.016,22,0.981,23,0.518,24,0.788,29,1.438,36,0.139,53,0.006,54,0.009,55,0.006,56,0.483,57,0.855,58,1.018,59,0.966,60,1.438,61,0.966,62,0.966,64,1.104,69,0.928,70,1.41,71,1.41,72,1.41,73,1.41,74,2.147,75,1.453,77,2.098,79,1.469,100,0.464,101,0.966,103,0.966,104,0.316,110,1.096,111,0.89,122,0.669,130,1.594,135,0.669,136,1.41,137,1.353,138,0.757,139,1.83,140,0.966,141,1.83,142,0.821,143,1.946,144,0.855,145,1.247,146,0.821,147,0.788,148,0.966,149,0.821,150,0.89,151,0.642,152,2.212,153,0.966,154,0.669,155,0.669,156,0.928,157,0.966,158,1.267,159,2.204,160,0.966,161,0.669,162,0.966,163,0.669,164,0.966,165,0.855,166,1.872,167,0.966,168,0.855,169,0.928,170,1.664,171,0.821,172,0.855,173,0.928,174,0.855,175,1.797,176,0.855,177,0.855,178,0.855,179,0.821,180,0.966,181,0.928,182,0.757,183,0.89,184,0.966,191,1.512,192,2.303,200,1.37,202,1.37,203,1.512,209,1.41,293,3.514,305,2.777,319,2.458,339,1.512,340,1.787,479,2.684,480,2.409,512,2.409,832,3.862,858,2.409,859,2.409,864,2.409,885,5.08,886,2.684,887,5.34,888,4.523,889,4.622,890,5.34,891,3.1,892,2.684,893,3.1,894,3.1,895,3.1,896,3.1,897,3.1,898,3.1,899,3.1,900,3.1,901,2.684,902,3.1,903,3.1,904,4.523,905,5.34]],["title/components/MainToolbarMailComponent.html",[56,0.35,161,0.835]],["body/components/MainToolbarMailComponent.html",[0,0.175,3,0.175,4,0.139,5,0.157,21,0.015,22,1.012,36,0.175,53,0.008,54,0.01,55,0.008,56,0.548,57,1.075,58,1.197,59,1.216,61,1.216,62,1.216,64,1.298,69,1.167,70,1.658,71,1.658,72,1.658,73,1.658,74,2.196,75,1.551,79,1.728,100,0.29,101,1.216,103,1.216,104,0.397,122,0.842,135,0.842,136,1.658,137,1.591,138,0.952,139,2.026,140,1.216,141,2.026,142,1.033,143,2.121,144,1.075,145,1.467,146,1.033,147,0.992,148,1.216,149,1.033,150,1.12,151,0.808,152,2.244,153,1.216,154,0.842,155,0.842,156,1.167,157,1.216,158,0.842,159,2.13,160,1.216,161,1.404,162,1.216,163,0.842,164,1.216,165,1.075,166,1.867,167,1.216,168,1.075,169,1.167,170,1.887,171,1.033,172,1.075,173,1.167,174,1.075,175,1.793,176,1.075,177,1.075,178,1.075,179,1.033,180,1.216,181,1.167,182,0.952,183,1.12,184,1.216,775,5.626,832,2.566,906,3.376,907,3.376,908,5.318]],["title/components/MainToolbarNotificationsComponent.html",[56,0.35,163,0.835]],["body/components/MainToolbarNotificationsComponent.html",[0,0.175,3,0.175,4,0.139,5,0.157,21,0.015,22,1.012,36,0.175,53,0.008,54,0.01,55,0.008,56,0.548,57,1.075,58,1.197,59,1.216,61,1.216,62,1.216,64,1.298,69,1.167,70,1.658,71,1.658,72,1.658,73,1.658,74,2.196,75,1.551,79,1.728,100,0.29,101,1.216,103,1.216,104,0.397,122,0.842,135,0.842,136,1.658,137,1.591,138,0.952,139,2.026,140,1.216,141,2.026,142,1.033,143,2.121,144,1.075,145,1.467,146,1.033,147,0.992,148,1.216,149,1.033,150,1.12,151,0.808,152,2.244,153,1.216,154,0.842,155,0.842,156,1.167,157,1.216,158,0.842,159,2.13,160,1.216,161,0.842,162,1.216,163,1.404,164,1.216,165,1.075,166,1.867,167,1.216,168,1.075,169,1.167,170,1.887,171,1.033,172,1.075,173,1.167,174,1.075,175,1.793,176,1.075,177,1.075,178,1.075,179,1.033,180,1.216,181,1.167,182,0.952,183,1.12,184,1.216,832,2.566,909,3.376,910,3.376,911,6.501,912,5.318]],["title/injectables/ManageService.html",[295,1.427,913,2.229]],["body/injectables/ManageService.html",[0,0.182,3,0.182,4,0.145,5,0.163,7,0.591,8,1.505,16,1.163,18,1.612,20,1.634,21,0.016,22,1.032,23,1.032,24,1.569,36,0.182,52,2.013,53,0.008,54,0.011,55,0.008,75,0.875,81,1.567,92,1.505,100,0.54,104,0.413,109,3.395,110,1.431,111,1.896,122,0.875,177,1.505,196,2.201,197,1.879,200,1.79,201,2.201,202,1.79,209,1.701,290,3.557,295,2.013,296,2.665,298,2.602,308,3.506,309,4.693,314,3.591,319,3.745,337,2.201,339,1.976,340,2.335,352,4.723,353,4.723,354,3.879,355,4.723,913,3.145,914,3.506,915,4.24,916,4.723,917,5.457,918,4.723,919,4.345,920,4.051,921,4.723,922,4.054,923,4.051,924,5.457,925,4.24,926,4.051,927,4.051,928,4.051]],["title/directives/MpgpFormControlErrorDirective.html",[138,0.944,182,0.944]],["body/directives/MpgpFormControlErrorDirective.html",[0,0.169,3,0.169,4,0.134,5,0.151,7,0.548,16,1.08,18,1.563,20,1.572,21,0.016,22,0.993,23,0.867,24,1.51,27,2.19,29,2.406,36,0.169,53,0.007,54,0.01,55,0.007,69,1.125,74,1.43,81,1.49,92,1.43,93,1.449,100,0.386,104,0.383,106,1.834,110,1.329,111,1.08,122,0.812,138,1.266,181,1.125,182,1.266,183,1.994,197,1.744,209,2.218,273,2.167,298,2.504,305,3.185,349,1.933,377,3.687,497,1.08,566,2.922,593,2.922,650,4.221,677,4.419,678,4.774,679,5.294,680,5.218,681,2.922,682,3.255,683,3.255,684,4.49,685,4.49,687,5.541,688,4.49,689,4.49,690,3.255,691,4.49,692,3.255,693,3.255,694,3.255,695,4.49,696,3.255,697,3.255,698,3.255,699,4.49,700,3.255,701,3.255,702,3.255,703,3.255,704,3.255,705,3.255,706,3.255,707,3.255,708,3.255,929,5.187,930,4.49,931,3.76,932,3.76,933,5.187,934,3.76,935,3.76]],["title/modules/MpgpFormControlErrorModule.html",[222,1.067,234,2.229]],["body/modules/MpgpFormControlErrorModule.html",[0,0.227,3,0.227,4,0.181,5,0.204,21,0.016,36,0.227,53,0.01,54,0.012,55,0.01,100,0.511,104,0.516,135,1.093,182,1.936,222,1.396,224,1.715,225,2.348,226,3.186,227,2.348,228,2.237,229,2.533,234,4.407,235,3.242,236,2.602,237,2.134,239,2.039,240,3.872,241,2.751,242,2.659,678,3.598,679,4.482,721,3.598,936,4.381,937,4.381,938,4.381,939,5.062,940,5.062]],["title/components/ProfileCardComponent.html",[56,0.35,165,1.067]],["body/components/ProfileCardComponent.html",[0,0.132,1,2.82,3,0.132,4,0.105,5,0.119,7,0.43,9,1.812,18,1.563,21,0.016,22,0.868,23,0.868,27,1.089,36,0.132,52,1.609,53,0.006,54,0.009,55,0.006,56,0.47,57,0.814,58,0.982,59,0.92,60,1.369,61,0.92,62,0.92,64,1.065,69,0.883,70,1.36,71,1.36,72,1.36,73,1.36,74,2.135,75,1.525,77,2.024,79,1.417,81,1.253,85,2.871,90,4.359,92,1.203,93,2.209,100,0.386,101,0.92,102,3.415,103,0.92,104,0.301,122,0.637,130,2.243,131,2.679,135,0.637,136,1.36,137,1.305,138,0.721,139,1.787,140,0.92,141,1.787,142,0.782,143,1.907,144,0.814,145,1.203,146,0.782,147,0.751,148,0.92,149,0.782,150,0.848,151,0.611,152,1.916,153,0.92,154,0.637,155,0.637,156,0.883,157,0.92,158,0.637,159,1.491,160,0.92,161,0.637,162,0.92,163,0.637,164,0.92,165,1.581,166,2.083,167,0.92,168,0.814,169,1.715,170,1.618,171,0.782,172,0.814,173,0.883,174,0.814,175,1.581,176,0.814,177,0.814,178,0.814,179,0.782,180,0.92,181,0.883,182,0.721,183,0.848,184,0.92,209,0.92,215,2.293,305,2.679,339,1.44,340,1.701,377,3.101,444,3.39,610,2.098,858,2.293,859,2.293,864,2.293,889,4.492,892,2.555,901,2.555,930,3.776,941,5.734,942,5.734,943,2.555,944,5.19,945,4.363,946,4.962,947,4.962,948,5.19,949,5.19,950,2.952,951,2.952,952,2.952,953,2.952,954,2.952,955,2.952,956,2.952,957,2.952,958,2.952,959,4.363,960,4.363,961,4.363,962,3.39,963,4.363,964,4.363,965,2.952,966,2.952]],["title/components/ProfileCardContainerComponent.html",[56,0.35,168,1.067]],["body/components/ProfileCardContainerComponent.html",[0,0.142,1,2.493,3,0.142,4,0.113,5,0.127,7,0.461,10,5.127,16,0.908,18,1.446,20,1.43,21,0.016,22,1.097,23,0.903,24,1.373,29,3.043,36,0.142,53,0.006,54,0.009,55,0.006,56,0.489,57,0.872,58,1.032,59,0.985,61,0.985,62,0.985,64,1.12,69,0.946,70,1.43,71,1.43,72,1.43,73,1.43,74,2.151,75,1.55,79,1.49,81,1.317,92,1.265,93,2.282,100,0.402,101,0.985,103,0.985,104,0.322,110,1.117,111,0.908,122,0.682,135,0.682,136,1.43,137,1.372,138,0.772,139,1.846,140,0.985,141,1.846,142,0.837,143,1.961,144,0.872,145,1.265,146,0.837,147,0.804,148,0.985,149,0.837,150,0.908,151,0.655,152,1.963,153,0.985,154,0.682,155,0.682,156,0.946,157,0.985,158,0.682,159,1.551,160,0.985,161,0.682,162,0.985,163,0.682,164,0.985,165,0.872,166,1.991,167,0.985,168,1.633,169,2.254,170,1.683,171,0.837,172,0.872,173,0.946,174,0.872,175,1.633,176,0.872,177,0.872,178,0.872,179,0.837,180,0.985,181,0.946,182,0.772,183,0.908,184,0.985,191,1.542,192,2.318,203,1.542,209,0.985,305,2.817,610,2.247,946,3.97,947,3.97,967,4.887,968,4.887,969,2.247,970,3.261,971,3.564,972,3.161,973,4.587,974,3.161,975,4.587,976,3.161,977,3.161,978,3.161,979,3.161,980,4.587]],["title/modules/ProfileModule.html",[222,1.067,981,2.75]],["body/modules/ProfileModule.html",[0,0.189,3,0.189,4,0.15,5,0.17,21,0.016,36,0.251,53,0.008,54,0.011,55,0.008,58,1.416,100,0.554,104,0.429,135,0.91,151,1.39,154,1.448,155,1.448,158,1.448,161,1.448,163,1.448,166,1.21,222,1.162,224,1.427,225,1.954,226,3.112,227,1.954,228,1.862,229,1.554,235,2.88,236,2.166,237,1.777,239,2.536,240,3.44,241,2.29,242,2.362,245,3.686,246,2.995,247,3.982,248,3.273,255,2.772,256,3.628,261,2.781,262,1.883,263,3.229,981,5.633,982,3.647,983,4.213,984,3.647,985,4.409,986,3.273]],["title/components/ProfileRootComponent.html",[56,0.35,171,1.024]],["body/components/ProfileRootComponent.html",[0,0.178,3,0.178,4,0.142,5,0.16,21,0.015,22,1.021,36,0.178,53,0.008,54,0.011,55,0.008,56,0.553,57,1.095,58,1.211,59,1.237,61,1.237,62,1.237,64,1.314,69,1.188,70,1.678,71,1.678,72,1.678,73,1.678,74,2.199,75,1.558,79,1.749,100,0.295,101,1.237,103,1.237,104,0.404,122,0.857,135,0.857,136,1.678,137,1.61,138,0.969,139,2.041,140,1.237,141,2.041,142,1.051,143,2.134,144,1.095,145,1.484,146,1.051,147,1.009,148,1.237,149,1.051,150,1.14,151,0.822,152,2.112,153,1.237,154,0.857,155,0.857,156,1.188,157,1.237,158,0.857,159,1.754,160,1.237,161,0.857,162,1.237,163,0.857,164,1.237,165,1.095,166,2.109,167,1.237,168,1.095,169,1.188,170,1.904,171,1.734,172,1.095,173,1.188,174,1.095,175,1.806,176,1.095,177,1.095,178,1.095,179,1.051,180,1.904,181,1.188,182,0.969,183,1.14,184,1.237,187,2.288,189,3.305,987,3.436,988,3.436]],["title/modules/ProfileRoutingModule.html",[222,1.067,985,2.375]],["body/modules/ProfileRoutingModule.html",[0,0.245,3,0.245,4,0.195,5,0.22,21,0.016,36,0.245,53,0.011,54,0.013,55,0.011,56,0.495,100,0.529,104,0.557,171,1.75,224,1.851,229,2.016,239,2.201,242,2.787,261,2.415,262,1.635,286,3.596,287,4.349,288,3.861,289,2.535,290,3.15,294,3.884,985,4.058,989,5.465]],["title/components/ProfileWallContainerComponent.html",[56,0.35,172,1.067]],["body/components/ProfileWallContainerComponent.html",[0,0.175,3,0.175,4,0.14,5,0.157,21,0.015,22,1.013,36,0.175,53,0.008,54,0.011,55,0.008,56,0.549,57,1.078,58,1.198,59,1.218,61,1.218,62,1.218,64,1.3,69,1.169,70,1.66,71,1.66,72,1.66,73,1.66,74,2.196,75,1.552,79,1.73,100,0.291,101,1.218,103,1.218,104,0.398,122,0.844,135,0.844,136,1.66,137,1.594,138,0.954,139,2.028,140,1.218,141,2.028,142,1.035,143,2.122,144,1.078,145,1.469,146,1.035,147,0.994,148,1.218,149,1.035,150,1.123,151,0.81,152,2.102,153,1.218,154,0.844,155,0.844,156,1.169,157,1.218,158,0.844,159,1.74,160,1.218,161,0.844,162,1.218,163,0.844,164,1.218,165,1.078,166,2.102,167,1.218,168,1.078,169,1.169,170,1.889,171,1.035,172,1.794,173,2.151,174,1.078,175,1.794,176,1.078,177,1.078,178,1.078,179,1.035,180,1.218,181,1.169,182,0.954,183,1.123,184,1.218,967,3.037,968,3.037,969,2.778,970,3.786,971,4.138]],["title/interfaces/RegisterAccountCommand.html",[269,2.229,497,1.111]],["body/interfaces/RegisterAccountCommand.html",[3,0.221,4,0.176,5,0.198,7,0.718,8,1.709,9,4.37,11,5.058,13,4.683,15,5.058,21,0.015,23,1.271,27,2.984,36,0.221,53,0.01,54,0.012,55,0.01,64,1.737,75,1.063,122,1.536,269,3.571,275,4.683,497,1.414,498,2.401,500,3.239,990,4.26]],["title/components/SettingsAccountContainerComponent.html",[56,0.35,174,1.067]],["body/components/SettingsAccountContainerComponent.html",[0,0.127,3,0.127,4,0.101,5,0.114,7,0.413,8,1.166,16,0.813,18,1.467,20,1.34,21,0.016,22,1.054,23,0.846,24,1.287,36,0.127,52,2.071,53,0.006,54,0.008,55,0.006,56,0.458,57,0.78,58,0.951,59,0.882,61,0.882,62,0.882,64,1.032,69,0.847,70,1.318,71,1.318,72,1.318,73,1.318,74,2.124,75,1.669,79,1.374,81,1.214,92,1.166,93,2.164,100,0.469,101,0.882,103,0.882,104,0.288,109,2.887,110,1,111,0.813,122,1.093,135,0.611,136,1.318,137,1.265,138,0.691,139,1.75,140,0.882,141,1.75,142,0.749,143,1.873,144,0.78,145,1.166,146,0.749,147,0.72,148,0.882,149,0.749,150,0.813,151,0.586,152,1.886,153,0.882,154,0.611,155,0.611,156,0.847,157,0.882,158,0.611,159,1.454,160,0.882,161,0.611,162,0.882,163,0.611,164,0.882,165,0.78,166,1.811,167,0.882,168,0.78,169,0.847,170,1.578,171,0.749,172,0.78,173,0.847,174,1.549,175,1.853,176,0.78,177,0.78,178,0.78,179,0.749,180,0.882,181,0.847,182,0.691,183,0.813,184,0.882,196,2.298,197,1.961,198,3.955,199,3.331,200,1.251,201,1.538,202,1.251,206,3.006,207,3.006,209,1.318,210,3.006,913,3.634,915,3.285,916,3.66,918,4.381,919,3.695,921,4.381,922,3.448,925,3.285,969,2.012,970,3.006,971,3.285,991,5.458,992,5.458,993,5.616,994,5.616,995,2.83,996,4.228,997,2.83,998,2.83,999,2.83,1000,1.862,1001,2.83,1002,4.228,1003,2.83,1004,2.83,1005,2.83,1006,2.83,1007,2.449,1008,2.83,1009,2.83]],["title/components/SettingsAccountDataFormComponent.html",[56,0.35,176,1.067]],["body/components/SettingsAccountDataFormComponent.html",[0,0.12,3,0.12,4,0.095,5,0.107,7,0.389,8,1.115,9,1.636,11,1.894,13,1.754,15,1.894,16,0.765,18,1.505,20,1.07,21,0.016,22,1.071,23,0.911,24,1.028,36,0.12,52,0.983,53,0.005,54,0.008,55,0.005,56,0.442,57,0.735,58,0.909,59,0.831,60,1.236,61,0.831,62,0.831,64,0.987,66,1.754,67,1.972,68,3.47,69,0.797,70,1.26,71,1.26,72,1.26,73,1.26,74,2.109,75,1.681,76,3.596,77,1.875,78,3.47,79,1.313,80,2.873,81,1.161,82,3.873,83,3.873,84,2.873,85,2.659,86,1.894,87,3.873,88,3.498,89,2.873,90,3.212,91,2.307,92,1.346,93,2.375,94,2.307,95,2.873,96,3.585,98,3.47,99,2.307,100,0.363,101,0.831,102,2.659,103,0.831,104,0.271,105,1.754,106,1.3,109,1.37,110,0.942,111,0.765,112,1.894,113,1.894,114,1.894,115,3.873,116,2.071,117,2.071,122,0.575,124,3.47,125,1.894,127,2.873,128,1.894,129,1.754,130,2.078,131,1.636,135,0.575,136,1.26,137,1.209,138,0.651,139,1.698,140,0.831,141,1.698,142,0.706,143,1.825,144,0.735,145,1.115,146,0.706,147,0.678,148,0.831,149,0.706,150,0.765,151,0.552,152,1.844,153,0.831,154,0.575,155,0.575,156,0.797,157,0.831,158,0.575,159,1.402,160,0.831,161,0.575,162,0.831,163,0.575,164,0.831,165,0.735,166,1.565,167,0.831,168,0.735,169,0.797,170,1.522,171,0.706,172,0.735,173,0.797,174,0.735,175,1.93,176,1.503,177,2.101,178,0.735,179,0.706,180,0.831,181,0.797,182,0.651,183,0.765,184,0.831,269,1.536,270,2.071,274,2.307,279,2.659,915,3.793,1010,4.976,1011,4.976,1012,2.665,1013,2.665,1014,4.042,1015,4.042,1016,4.042]],["title/components/SettingsAccountPasswordFormComponent.html",[56,0.35,178,1.067]],["body/components/SettingsAccountPasswordFormComponent.html",[0,0.12,3,0.12,4,0.095,5,0.107,7,0.389,8,1.116,16,0.767,18,1.506,20,1.071,21,0.016,22,0.98,23,0.912,24,1.029,36,0.12,52,0.984,53,0.005,54,0.008,55,0.005,56,0.442,57,0.736,58,0.91,59,0.832,60,1.238,61,0.832,62,0.832,64,0.988,66,1.756,67,1.974,68,3.473,69,0.799,70,1.261,71,1.261,72,1.261,73,1.261,74,2.109,75,1.677,76,3.598,77,1.877,78,3.473,79,1.314,80,2.876,81,1.162,82,3.876,83,3.876,84,2.876,85,2.662,86,1.897,87,3.876,89,2.876,90,3.215,92,1.348,93,2.376,95,2.876,96,3.588,98,3.473,100,0.406,101,0.832,102,2.662,103,0.832,104,0.272,105,2.662,106,1.302,109,1.372,110,0.943,111,0.767,112,1.897,113,1.897,114,1.897,115,3.473,122,1.657,123,3.797,124,3.473,125,1.897,127,2.876,128,1.897,129,1.756,130,2.08,131,1.639,135,0.576,136,1.261,137,1.211,138,0.652,139,1.7,140,0.832,141,1.7,142,0.707,143,1.827,144,0.736,145,1.116,146,0.707,147,0.679,148,0.832,149,0.707,150,0.767,151,0.553,152,1.845,153,0.832,154,0.576,155,0.576,156,0.799,157,0.832,158,0.576,159,1.403,160,0.832,161,0.576,162,0.832,163,0.576,164,0.832,165,0.736,166,1.566,167,0.832,168,0.736,169,0.799,170,1.523,171,0.707,172,0.736,173,0.799,174,0.736,175,1.931,176,0.736,177,0.736,178,1.504,179,0.707,180,0.832,181,0.799,182,0.652,183,0.767,184,0.832,264,3.502,265,2.31,266,2.31,268,2.31,271,1.756,272,2.31,275,1.756,276,2.31,277,2.31,922,1.639,925,2.074,1010,4.978,1011,4.978,1017,4.886,1018,2.669,1019,2.31,1020,2.669]],["title/modules/SettingsModule.html",[222,1.067,1021,2.75]],["body/modules/SettingsModule.html",[0,0.168,3,0.168,4,0.134,5,0.151,21,0.016,36,0.232,53,0.007,54,0.01,55,0.007,58,1.333,100,0.568,104,0.381,106,1.827,135,0.808,151,1.324,154,1.38,155,1.38,158,1.38,161,1.38,163,1.38,175,1.033,222,1.033,224,1.268,225,1.737,226,2.964,227,1.737,228,2.824,229,1.381,234,3.997,235,2.659,236,1.925,237,1.579,239,2.387,240,3.176,241,2.035,242,2.181,243,4.019,244,4.019,245,3.403,246,2.662,249,4.019,250,3.241,251,3.241,252,4.019,253,3.241,254,3.241,255,2.464,256,3.415,261,2.618,262,1.912,263,2.981,913,3.683,1000,3.899,1021,5.626,1022,3.241,1023,3.241,1024,3.241,1025,3.745,1026,4.258,1027,2.909,1028,4.477,1029,3.745]],["title/components/SettingsRootComponent.html",[56,0.35,179,1.024]],["body/components/SettingsRootComponent.html",[0,0.177,3,0.177,4,0.141,5,0.159,21,0.015,22,1.018,36,0.177,53,0.008,54,0.011,55,0.008,56,0.551,57,1.087,58,1.206,59,1.229,61,1.229,62,1.229,64,1.308,69,1.18,70,1.67,71,1.67,72,1.67,73,1.67,74,2.198,75,1.556,79,1.741,100,0.293,101,1.229,103,1.229,104,0.402,122,0.851,135,0.851,136,1.67,137,1.603,138,0.963,139,2.036,140,1.229,141,2.036,142,1.044,143,2.129,144,1.087,145,1.478,146,1.044,147,1.003,148,1.229,149,1.044,150,1.132,151,0.817,152,2.107,153,1.229,154,0.851,155,0.851,156,1.18,157,1.229,158,0.851,159,1.748,160,1.229,161,0.851,162,1.229,163,0.851,164,1.229,165,1.087,166,1.876,167,1.229,168,1.087,169,1.18,170,1.897,171,1.044,172,1.087,173,1.18,174,1.087,175,2.022,176,1.087,177,1.087,178,1.087,179,1.729,180,1.897,181,1.18,182,0.963,183,1.132,184,1.229,187,2.273,189,3.29,1030,3.413,1031,3.413,1032,5.358]],["title/modules/SettingsRoutingModule.html",[222,1.067,1026,2.375]],["body/modules/SettingsRoutingModule.html",[0,0.245,3,0.245,4,0.195,5,0.22,21,0.016,36,0.245,53,0.011,54,0.013,55,0.011,56,0.495,100,0.529,104,0.557,179,1.75,224,1.851,229,2.016,239,2.201,242,2.787,261,2.415,262,1.635,286,3.596,287,4.349,288,3.861,289,2.535,290,3.15,294,3.884,1026,4.058,1033,5.465]],["title/guards/UnauthorizedGuard.html",[259,2.375,421,2.75]],["body/guards/UnauthorizedGuard.html",[0,0.211,3,0.211,4,0.168,5,0.19,7,0.687,16,1.354,18,1.472,20,1.596,21,0.016,22,1.008,23,1.008,24,1.533,36,0.211,53,0.009,54,0.012,55,0.009,67,2.3,81,1.731,92,1.3,100,0.495,104,0.48,110,1.666,111,1.731,191,2.3,192,2.616,203,2.3,209,1.879,259,3.702,289,2.187,291,4.609,295,2.223,298,1.988,312,4.953,349,3.099,383,4.08,423,3.351,426,4.684,427,5.442,429,5.442,431,3.663,432,3.351,433,2.895,438,2.717,758,5.752,1034,4.08,1035,4.714,1036,4.714]],["title/interfaces/UpdateAccountCommand.html",[497,1.111,919,2.545]],["body/interfaces/UpdateAccountCommand.html",[3,0.232,4,0.185,5,0.208,7,0.755,8,1.764,9,4.45,11,5.151,13,4.768,15,5.151,21,0.015,23,1.245,27,2.962,36,0.232,53,0.01,54,0.013,55,0.01,64,1.769,75,1.118,497,1.488,498,2.526,500,3.408,919,4.208,1037,4.024]],["title/interfaces/UpdatePasswordCommand.html",[497,1.111,922,2.375]],["body/interfaces/UpdatePasswordCommand.html",[3,0.245,4,0.195,5,0.22,7,0.797,8,1.822,21,0.015,23,1.188,27,2.912,36,0.245,53,0.011,54,0.013,55,0.011,122,1.632,275,4.857,497,1.57,498,2.666,500,3.596,922,4.058,1019,6.389,1037,4.246]],["title/changelog.html",[1038,2.506,1039,2.506,1040,3.226]],["body/changelog.html",[21,0.012,53,0.009,54,0.012,55,0.009,75,1.428,105,3.069,138,1.139,166,1.72,175,1.651,222,1.824,283,3.316,329,4.037,460,3.624,477,4.037,650,3.316,677,3.069,754,3.624,962,5.834,1041,4.665,1042,5.988,1043,5.988,1044,6.613,1045,6.613,1046,6.613,1047,6.977,1048,4.665,1049,4.665,1050,4.665,1051,4.665,1052,4.665,1053,5.988,1054,4.665,1055,4.665,1056,4.665,1057,4.665,1058,4.665,1059,4.665,1060,4.665,1061,5.988,1062,6.613,1063,4.665,1064,5.988,1065,4.665,1066,4.665,1067,5.724,1068,6.613,1069,4.665,1070,5.183,1071,4.665,1072,4.665,1073,4.665,1074,4.665,1075,4.665,1076,5.988,1077,4.665,1078,4.665,1079,4.665,1080,4.665,1081,4.665,1082,4.665,1083,4.037,1084,4.665,1085,4.665,1086,4.665,1087,4.665,1088,4.665,1089,4.665,1090,4.665,1091,4.665]],["title/coverage.html",[1092,4.578]],["body/coverage.html",[0,0.226,1,1.058,5,0.078,6,1.685,21,0.016,23,0.325,51,4.144,52,0.718,53,0.004,54,0.006,55,0.004,56,0.65,57,0.537,58,1.134,63,2.454,64,1.119,65,2.454,66,3.016,75,1.321,107,1.195,122,0.86,132,1.513,138,0.475,142,0.516,144,0.537,145,1.264,146,0.516,147,0.495,149,0.516,151,0.403,154,0.42,155,0.42,156,0.945,158,0.42,159,1.55,161,0.42,163,0.42,165,0.537,168,0.537,169,0.945,171,0.516,172,0.537,173,0.945,174,0.537,176,0.537,177,0.871,178,0.537,179,0.516,182,0.475,185,2.454,186,2.454,187,3.11,192,0.688,226,2.503,227,0.903,228,2.026,229,0.718,238,3.562,239,2.174,256,2.905,257,1.195,259,1.195,261,2.227,263,2.905,269,1.122,271,1.281,295,1.691,297,1.685,306,1.384,339,1.541,387,1.685,396,3.096,408,1.513,409,1.685,421,2.832,422,1.195,424,1.685,439,1.685,440,1.685,441,1.384,460,1.513,461,2.078,463,1.685,497,1.758,499,1.685,500,3.016,501,1.384,502,2.832,509,1.384,557,1.384,580,1.058,581,3.096,585,2.078,591,1.685,592,1.685,600,1.384,601,2.832,602,2.454,637,1.685,677,1.281,678,2.245,679,3.259,680,2.454,681,2.454,714,3.096,715,1.685,716,1.685,724,1.685,725,1.685,726,1.384,727,2.454,756,1.685,763,2.454,764,1.685,765,1.685,787,3.915,799,1.685,832,3.016,833,1.685,834,1.685,885,1.685,886,1.685,906,1.685,907,1.685,909,1.685,910,1.685,913,1.122,914,1.685,919,1.281,922,1.195,941,1.685,942,1.685,943,1.685,967,2.454,968,2.454,969,2.832,986,3.096,987,1.685,988,1.685,990,1.685,991,1.685,992,1.685,1000,1.281,1010,2.454,1011,2.454,1027,3.562,1030,1.685,1031,1.685,1034,1.685,1037,2.454,1092,1.685,1093,1.685,1094,1.947,1095,1.947,1096,6.119,1097,7.878,1098,7.788,1099,1.947,1100,5.396,1101,1.947,1102,5.684,1103,1.947,1104,1.947,1105,1.685,1106,3.984,1107,4.584,1108,1.685,1109,1.685,1110,1.685,1111,1.685,1112,1.685,1113,1.685,1114,1.685,1115,1.685,1116,1.685,1117,1.685,1118,1.685,1119,1.685,1120,1.685,1121,1.685,1122,1.685,1123,3.158,1124,1.685,1125,1.685,1126,2.734,1127,1.685,1128,1.685,1129,1.947]],["title/dependencies.html",[225,2.159,1130,3.226]],["body/dependencies.html",[21,0.016,53,0.01,54,0.013,55,0.01,104,0.524,106,2.512,200,2.816,225,2.389,241,2.798,289,2.389,401,5.516,402,4.53,1070,4.457,1083,5.516,1131,5.149,1132,7.754,1133,5.149,1134,6.373,1135,5.149,1136,5.149,1137,5.149,1138,5.149,1139,5.149,1140,5.149,1141,5.149,1142,5.149,1143,5.149,1144,5.149,1145,5.149,1146,6.373,1147,5.149,1148,5.149,1149,5.149,1150,5.149,1151,5.149,1152,5.149]],["title/miscellaneous/functions.html",[1153,2.293,1154,4.029]],["body/miscellaneous/functions.html",[7,0.869,20,1.577,21,0.015,22,0.996,24,1.515,53,0.012,54,0.014,55,0.012,92,1.643,502,4.235,516,4.629,557,4.235,1105,6.021,1153,4.235,1154,5.156,1155,5.957,1156,5.957]],["title/index.html",[7,0.47,1038,2.506,1039,2.506]],["body/index.html",[4,0.168,21,0.012,22,1.008,52,1.739,53,0.009,54,0.012,55,0.009,56,0.602,237,1.988,388,4.08,654,4.684,722,4.08,734,3.663,738,4.08,754,5.164,755,5.752,774,4.08,962,3.663,970,3.351,1007,4.08,1157,4.714,1158,6.028,1159,4.714,1160,4.714,1161,4.714,1162,6.028,1163,7.005,1164,4.714,1165,4.714,1166,7.527,1167,4.714,1168,4.714,1169,4.714,1170,4.714,1171,4.714,1172,4.714,1173,6.028,1174,4.714,1175,7.005,1176,4.714,1177,4.714,1178,4.714,1179,4.714,1180,6.028,1181,4.714,1182,4.714,1183,4.714,1184,4.714,1185,4.714,1186,4.714,1187,4.714,1188,4.08,1189,4.714,1190,6.646,1191,6.646,1192,4.714,1193,7.005,1194,4.714,1195,4.714,1196,4.714,1197,4.714,1198,4.714,1199,6.646,1200,4.714,1201,4.714,1202,4.714]],["title/license.html",[1038,2.506,1039,2.506,1203,2.792]],["body/license.html",[4,0.209,21,0.012,53,0.009,54,0.012,55,0.009,76,2.763,96,2.961,177,1.241,220,4.546,237,1.897,654,5.051,721,3.199,743,3.895,747,5.626,1000,2.961,1067,3.895,1093,3.895,1188,3.895,1203,3.895,1204,4.5,1205,4.5,1206,4.5,1207,4.5,1208,7.135,1209,4.5,1210,4.5,1211,4.5,1212,4.5,1213,5.85,1214,4.5,1215,4.5,1216,4.5,1217,4.5,1218,6.5,1219,6.5,1220,4.5,1221,5.85,1222,4.5,1223,5.85,1224,5.85,1225,5.85,1226,4.5,1227,4.5,1228,4.5,1229,4.5,1230,5.85,1231,4.5,1232,5.85,1233,4.5,1234,5.85,1235,5.85,1236,6.5,1237,5.85,1238,4.5,1239,4.5,1240,4.5,1241,4.5,1242,4.5,1243,4.5,1244,4.5,1245,4.5,1246,4.5,1247,4.5,1248,4.5,1249,4.5,1250,4.5,1251,4.5,1252,4.5,1253,4.5,1254,4.5,1255,4.5,1256,4.5,1257,4.5,1258,4.5,1259,4.5,1260,4.5,1261,4.5,1262,5.85,1263,4.5,1264,4.5,1265,4.5,1266,4.5,1267,4.5,1268,4.5,1269,4.5,1270,4.5,1271,4.5,1272,4.5,1273,4.5,1274,4.5]],["title/modules.html",[224,1.791]],["body/modules.html",[21,0.013,53,0.01,54,0.013,55,0.01,223,3.682,224,1.754,233,3.18,234,2.985,389,3.682,394,3.18,395,3.18,402,5.518,534,5.784,709,3.682,713,3.18,777,6.719,786,3.18,981,3.682,985,3.18,1021,3.682,1026,3.18,1275,7.763,1276,7.981,1277,7.444]],["title/overview.html",[1278,4.578]],["body/overview.html",[2,1.904,21,0.016,53,0.006,54,0.009,55,0.006,58,0.698,121,2.409,135,0.669,138,0.757,147,1.711,151,1.394,154,1.564,155,1.453,158,1.453,161,1.453,163,1.453,182,1.643,192,1.887,222,0.855,223,5.43,224,1.05,225,1.438,226,1.438,227,1.438,228,1.37,229,1.144,230,2.684,231,2.684,232,2.684,233,3.279,234,3.878,235,2.326,236,1.594,237,1.307,288,1.685,296,2.04,389,4.999,390,2.684,391,2.684,392,2.684,393,2.684,394,4.131,395,4.69,423,2.204,498,1.512,578,2.684,579,2.684,580,2.902,709,5.372,710,2.684,712,2.684,713,3.279,782,2.684,783,2.684,785,2.684,786,3.279,816,2.409,855,2.684,913,3.078,936,2.684,937,2.684,938,2.684,981,5.372,982,2.684,984,2.684,985,3.279,1021,5.477,1022,2.684,1023,2.684,1024,2.684,1026,3.279,1278,2.684,1279,3.1,1280,3.1,1281,3.1,1282,3.1,1283,3.1]],["title/routes.html",[288,2.874]],["body/routes.html",[21,0.014,53,0.012,54,0.014,55,0.012,288,3.408]],["title/miscellaneous/variables.html",[1153,2.293,1284,4.029]],["body/miscellaneous/variables.html",[7,0.307,21,0.016,23,1.309,53,0.004,54,0.007,55,0.004,57,0.58,58,1.569,142,0.557,144,0.58,146,0.557,147,0.854,149,0.557,151,0.436,154,0.726,155,0.454,158,0.454,161,0.454,163,0.454,165,0.58,168,0.58,171,0.557,172,0.58,174,0.58,176,0.58,178,0.58,179,0.557,192,0.743,196,4.255,197,3.632,226,3.107,227,1.559,228,2.693,229,1.239,233,1.291,234,1.937,238,1.634,239,2.698,240,2.943,243,2.611,244,2.611,245,3.154,247,2.983,249,2.611,252,2.611,256,4.02,257,1.291,259,1.291,261,3.082,263,4.02,339,2.338,394,1.291,395,1.291,396,1.634,397,1.82,399,1.82,400,1.82,403,1.82,422,1.291,433,2.577,438,1.212,461,3.154,465,1.495,507,2.389,580,1.143,581,1.634,582,1.82,585,3.154,589,1.82,590,2.909,713,1.291,714,1.634,726,1.495,727,1.634,728,2.909,729,2.909,730,2.909,731,2.909,732,2.909,733,2.909,734,2.611,735,2.909,736,2.909,737,2.909,786,1.291,787,1.634,788,1.82,790,1.82,792,1.82,794,1.82,796,1.82,913,1.212,985,1.291,986,1.634,1000,2.762,1026,1.291,1027,1.634,1028,1.82,1108,1.82,1109,1.82,1110,1.82,1111,1.82,1112,1.82,1113,1.82,1114,1.82,1115,1.82,1116,1.82,1117,1.82,1118,1.82,1119,1.82,1120,1.82,1121,1.82,1122,1.82,1124,1.82,1125,1.82,1126,1.82,1127,2.909,1128,2.909,1153,1.495,1284,1.82,1285,4.197,1286,4.197,1287,7.048,1288,3.36,1289,5.241,1290,4.794,1291,4.197,1292,4.197,1293,4.794,1294,2.103,1295,2.103,1296,4.197,1297,2.103,1298,2.103]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":51,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"classes/AuthInfo.html":{},"injectables/ErrorsHandler.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"coverage.html":{}}}],["0).pipe",{"_index":359,"title":{},"body":{"injectables/AccountService.html":{}}}],["0.11.2",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":873,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["0.5s",{"_index":871,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["0/1",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["0a06e52",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":816,"title":{},"body":{"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["1.2.2",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["10.0.0",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":131,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["10px",{"_index":860,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["13",{"_index":1279,"title":{},"body":{"overview.html":{}}}],["13.7.2",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":810,"title":{},"body":{"components/MainRootComponent.html":{}}}],["15px",{"_index":879,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["16px",{"_index":882,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["17",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["1bb74e1",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1205,"title":{},"body":{"license.html":{}}}],["20",{"_index":1280,"title":{},"body":{"overview.html":{}}}],["2018",{"_index":1067,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1283,"title":{},"body":{"overview.html":{}}}],["23",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["25px",{"_index":905,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["2em",{"_index":214,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["3",{"_index":1282,"title":{},"body":{"overview.html":{}}}],["3.6.5",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["300",{"_index":875,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["300000",{"_index":517,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["3bae2ff",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1281,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":966,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["401",{"_index":660,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["403",{"_index":666,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["409",{"_index":372,"title":{},"body":{"injectables/AccountService.html":{}}}],["45px",{"_index":865,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["480px",{"_index":216,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["4dc560d",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":780,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["5",{"_index":855,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"overview.html":{}}}],["50",{"_index":965,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["500",{"_index":667,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["503",{"_index":492,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["51d26ba",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["5px",{"_index":808,"title":{},"body":{"components/MainRootComponent.html":{}}}],["6",{"_index":1161,"title":{},"body":{"index.html":{}}}],["6.6.3",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["6089ca9",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["6355a61",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["7.2.16",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["76f936e",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["8080:8080",{"_index":1171,"title":{},"body":{"index.html":{}}}],["82ab05e",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["82da58a",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":781,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["9",{"_index":121,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"overview.html":{}}}],["999",{"_index":877,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["_",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["__",{"_index":758,"title":{},"body":{"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["__icon",{"_index":880,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["a6fda0a",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1223,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":884,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["abstractcontrol",{"_index":595,"title":{},"body":{"classes/CustomValidators.html":{}}}],["accessors",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{},"classes/CacheService.html":{},"components/MainToolbarAvatarComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{}}}],["account",{"_index":75,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"interfaces/AuthorizeAccountCommand.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"interfaces/UpdateAccountCommand.html":{},"changelog.html":{},"coverage.html":{}}}],["account.dto",{"_index":450,"title":{},"body":{"classes/AuthInfo.html":{}}}],["account.languages",{"_index":960,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["account.nickname",{"_index":959,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["account.service",{"_index":477,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"changelog.html":{}}}],["account.statusinfo",{"_index":961,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["accountdto",{"_index":1,"title":{"classes/AccountDto.html":{}},"body":{"classes/AccountDto.html":{},"classes/AuthInfo.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"coverage.html":{}}}],["accounterorr",{"_index":993,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["accountloginformcomponent",{"_index":57,"title":{"components/AccountLoginFormComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountloginrootcomponent",{"_index":142,"title":{"components/AccountLoginRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountmodule",{"_index":223,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules.html":{},"overview.html":{}}}],["accountregisterformcomponent",{"_index":144,"title":{"components/AccountRegisterFormComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountregisterrootcomponent",{"_index":146,"title":{"components/AccountRegisterRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountroutingmodule",{"_index":233,"title":{"modules/AccountRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accountservice",{"_index":192,"title":{"injectables/AccountService.html":{}},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardContainerComponent.html":{},"guards/UnauthorizedGuard.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{}}}],["activatedroutesnapshot",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["actual_component",{"_index":184,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["add",{"_index":962,"title":{},"body":{"components/ProfileCardComponent.html":{},"changelog.html":{},"index.html":{}}}],["addcontextinfo",{"_index":673,"title":{},"body":{"injectables/ErrorsLogger.html":{}}}],["addcontextinfo(error",{"_index":620,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["addedfriend",{"_index":948,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["addfriend",{"_index":946,"title":{},"body":{"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{}}}],["addfriend(id",{"_index":973,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["advised",{"_index":1272,"title":{},"body":{"license.html":{}}}],["align",{"_index":218,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{}}}],["already",{"_index":282,"title":{},"body":{"components/AccountRegisterRootComponent.html":{}}}],["and/or",{"_index":1227,"title":{},"body":{"license.html":{}}}],["angular",{"_index":754,"title":{},"body":{"interfaces/IEnvironment.html":{},"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cli",{"_index":1177,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":241,"title":{},"body":{"modules/AccountModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":337,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{}}}],["angular/compiler",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":104,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":106,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"classes/CustomValidators.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["angular/material/badge",{"_index":789,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/button",{"_index":246,"title":{},"body":{"modules/AccountModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{}}}],["angular/material/card",{"_index":248,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/ProfileModule.html":{}}}],["angular/material/form",{"_index":250,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{}}}],["angular/material/icon",{"_index":791,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/input",{"_index":253,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{}}}],["angular/material/list",{"_index":793,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/menu",{"_index":795,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tabs",{"_index":1029,"title":{},"body":{"modules/SettingsModule.html":{}}}],["angular/material/toolbar",{"_index":797,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/platform",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":289,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/ErrorsHandler.html":{},"modules/GeneralRoutingModule.html":{},"guards/LogoutGuard.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"dependencies.html":{}}}],["another",{"_index":376,"title":{},"body":{"injectables/AccountService.html":{}}}],["apiurl",{"_index":728,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":148,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["app.component",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":147,"title":{"components/AppComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":604,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["appmodule",{"_index":389,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":408,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["args",{"_index":559,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["arising",{"_index":1269,"title":{},"body":{"license.html":{}}}],["array.from(arguments",{"_index":560,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["arrow_drop_down",{"_index":904,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["artifacts",{"_index":1194,"title":{},"body":{"index.html":{}}}],["auth",{"_index":329,"title":{},"body":{"injectables/AccountService.html":{},"changelog.html":{}}}],["authguard",{"_index":422,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinfo",{"_index":306,"title":{"classes/AuthInfo.html":{}},"body":{"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"coverage.html":{}}}],["authinfosubject",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{}}}],["authinfovalue",{"_index":300,"title":{},"body":{"injectables/AccountService.html":{}}}],["authinterceptor",{"_index":461,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationheader",{"_index":478,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authorizationheader['authorization",{"_index":482,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authorizeaccountcommand",{"_index":107,"title":{"interfaces/AuthorizeAccountCommand.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/AuthorizeAccountCommand.html":{},"coverage.html":{}}}],["authtoken",{"_index":442,"title":{},"body":{"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":134,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainRootComponent.html":{}}}],["automatically",{"_index":1185,"title":{},"body":{"index.html":{}}}],["available",{"_index":534,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules.html":{}}}],["avatar",{"_index":9,"title":{},"body":{"classes/AccountDto.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{}}}],["avatar'},{'name",{"_index":160,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["avatar.component.html",{"_index":888,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar.component.scss",{"_index":887,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar.component.ts",{"_index":886,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"coverage.html":{}}}],["avatar.component.ts:15",{"_index":891,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar.component.ts:18",{"_index":893,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar.component.ts:25",{"_index":895,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar/main",{"_index":885,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"coverage.html":{}}}],["background",{"_index":856,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["bearer",{"_index":483,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":652,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["beta.32",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["binary",{"_index":1213,"title":{},"body":{"license.html":{}}}],["block",{"_index":807,"title":{},"body":{"components/MainRootComponent.html":{}}}],["boolean",{"_index":349,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/FormControlError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"directives/MpgpFormControlErrorDirective.html":{},"guards/UnauthorizedGuard.html":{}}}],["bootstrap",{"_index":227,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["border",{"_index":858,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["bottom",{"_index":861,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["breaking",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1276,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":416,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["browserclient",{"_index":722,"title":{},"body":{"components/GeneralRootComponent.html":{},"index.html":{}}}],["browsermodule",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["bsd",{"_index":1204,"title":{},"body":{"license.html":{}}}],["bug",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1193,"title":{},"body":{"index.html":{}}}],["business",{"_index":1258,"title":{},"body":{"license.html":{}}}],["button",{"_index":779,"title":{},"body":{"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{}}}],["c",{"_index":1209,"title":{},"body":{"license.html":{}}}],["cache",{"_index":511,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["cacheable",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cacheable(cachetime",{"_index":1156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cachecontent",{"_index":501,"title":{"interfaces/CacheContent.html":{}},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"coverage.html":{}}}],["cacheservice",{"_index":509,"title":{"classes/CacheService.html":{}},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"coverage.html":{}}}],["cacheservice.cachetime",{"_index":523,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["cacheservice.instance.get(key",{"_index":563,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["cacheservice.instancevalue",{"_index":520,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["cachetime",{"_index":516,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"miscellaneous/functions.html":{}}}],["canactivate",{"_index":291,"title":{},"body":{"modules/AccountRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"modules/MainRoutingModule.html":{},"guards/UnauthorizedGuard.html":{}}}],["canactivate(_",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["card",{"_index":169,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["card'},{'name",{"_index":167,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["card.component.html",{"_index":945,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.scss",{"_index":944,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts",{"_index":943,"title":{},"body":{"components/ProfileCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":950,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:15",{"_index":951,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:16",{"_index":952,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:18",{"_index":955,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:22",{"_index":953,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:26",{"_index":954,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card/profile",{"_index":942,"title":{},"body":{"components/ProfileCardComponent.html":{},"coverage.html":{}}}],["catcherror",{"_index":201,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["catcherror(_",{"_index":353,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ManageService.html":{}}}],["catcherror(err",{"_index":617,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["catcherror(error",{"_index":207,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["caused",{"_index":1260,"title":{},"body":{"license.html":{}}}],["ccc",{"_index":857,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["center",{"_index":219,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{}}}],["change",{"_index":1007,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{},"index.html":{}}}],["changedetection",{"_index":70,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["changedetectionstrategy",{"_index":101,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":71,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["changelog",{"_index":1040,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":1201,"title":{},"body":{"index.html":{}}}],["children",{"_index":292,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/MainRoutingModule.html":{}}}],["ci",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":0,"title":{"classes/AccountDto.html":{},"classes/AppPage.html":{},"classes/AuthInfo.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{}},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccountDto.html":{},"classes/AppPage.html":{},"classes/AuthInfo.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"overview.html":{}}}],["clause",{"_index":1206,"title":{},"body":{"license.html":{}}}],["cli",{"_index":755,"title":{},"body":{"interfaces/IEnvironment.html":{},"index.html":{}}}],["clientid",{"_index":729,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["cluster_accountmodule",{"_index":230,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_declarations",{"_index":231,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":232,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":578,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":579,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_generalmodule",{"_index":710,"title":{},"body":{"modules/GeneralModule.html":{},"overview.html":{}}}],["cluster_generalmodule_declarations",{"_index":711,"title":{},"body":{"modules/GeneralModule.html":{}}}],["cluster_generalmodule_imports",{"_index":712,"title":{},"body":{"modules/GeneralModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":782,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declarations",{"_index":784,"title":{},"body":{"modules/MainModule.html":{}}}],["cluster_mainmodule_exports",{"_index":785,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_imports",{"_index":783,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mpgpformcontrolerrormodule",{"_index":936,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{},"overview.html":{}}}],["cluster_mpgpformcontrolerrormodule_declarations",{"_index":938,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{},"overview.html":{}}}],["cluster_mpgpformcontrolerrormodule_exports",{"_index":937,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":982,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":983,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_imports",{"_index":984,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":1022,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":1025,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_settingsmodule_imports",{"_index":1024,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_providers",{"_index":1023,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["code",{"_index":1188,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":803,"title":{},"body":{"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{}}}],["command",{"_index":109,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["command).pipe",{"_index":352,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ManageService.html":{}}}],["command.ts",{"_index":500,"title":{},"body":{"interfaces/AuthorizeAccountCommand.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["comment",{"_index":749,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["commit",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":240,"title":{},"body":{"modules/AccountModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["compat",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":56,"title":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":140,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["components",{"_index":58,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":1219,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1251,"title":{},"body":{"license.html":{}}}],["console.error",{"_index":614,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["console.error('can",{"_index":618,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["console.error('todo",{"_index":980,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["console.error(_",{"_index":928,"title":{},"body":{"injectables/ManageService.html":{}}}],["const",{"_index":262,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/IEnvironment.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["constructor(accountservice",{"_index":191,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardContainerComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["constructor(dto",{"_index":17,"title":{},"body":{"classes/AccountDto.html":{}}}],["constructor(el",{"_index":931,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["constructor(fb",{"_index":86,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["constructor(http",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ManageService.html":{}}}],["constructor(info",{"_index":445,"title":{},"body":{"classes/AuthInfo.html":{}}}],["constructor(injector",{"_index":641,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["constructor(manageservice",{"_index":995,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["constructor(private",{"_index":110,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ErrorsHandler.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["constructor(public",{"_index":802,"title":{},"body":{"components/MainRootComponent.html":{}}}],["contact",{"_index":776,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["container",{"_index":970,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"index.html":{}}}],["container'},{'name",{"_index":170,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["container.component.html",{"_index":971,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["container.component.ts",{"_index":969,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:12",{"_index":972,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["container.component.ts:15",{"_index":978,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["container.component.ts:17",{"_index":999,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["container.component.ts:18",{"_index":996,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["container.component.ts:19",{"_index":974,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["container.component.ts:22",{"_index":997,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["container.component.ts:23",{"_index":976,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["container.component.ts:36",{"_index":998,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["container/profile",{"_index":968,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"coverage.html":{}}}],["container/settings",{"_index":992,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{},"coverage.html":{}}}],["containers",{"_index":256,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1264,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1232,"title":{},"body":{"license.html":{}}}],["control",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["copyright",{"_index":1208,"title":{},"body":{"license.html":{}}}],["core",{"_index":1070,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["core/core.module",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interfaces/account.dto",{"_index":610,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{}}}],["core/interfaces/authorize",{"_index":108,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{}}}],["core/interfaces/register",{"_index":270,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["core/interfaces/update",{"_index":925,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["core/services/account.service",{"_index":203,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"guards/AuthGuard.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardContainerComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["coremodule",{"_index":394,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":1092,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":651,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["createform",{"_index":82,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["crew",{"_index":737,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["currentscroll",{"_index":854,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["cursor",{"_index":862,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["custom",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["customvalidators",{"_index":271,"title":{"classes/CustomValidators.html":{}},"body":{"components/AccountRegisterFormComponent.html":{},"classes/CustomValidators.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["customvalidators.matchpassword",{"_index":277,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["da2bfce",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["damage",{"_index":1274,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1252,"title":{},"body":{"license.html":{}}}],["data",{"_index":177,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"license.html":{}}}],["date",{"_index":32,"title":{},"body":{"classes/AccountDto.html":{}}}],["date.now",{"_index":540,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["debugging",{"_index":746,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["declarations",{"_index":226,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":196,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/CacheService.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["delay",{"_index":474,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["demo",{"_index":128,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["dependencies",{"_index":225,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descriptor",{"_index":551,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["descriptor.value",{"_index":556,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["deutsch",{"_index":1016,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["dev",{"_index":1182,"title":{},"body":{"index.html":{}}}],["development",{"_index":738,"title":{},"body":{"interfaces/IEnvironment.html":{},"index.html":{}}}],["direct",{"_index":1246,"title":{},"body":{"license.html":{}}}],["directive",{"_index":138,"title":{"directives/MpgpFormControlErrorDirective.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":181,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1192,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1197,"title":{},"body":{"index.html":{}}}],["disclaimed",{"_index":1242,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":220,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"license.html":{}}}],["display",{"_index":805,"title":{},"body":{"components/MainRootComponent.html":{}}}],["dist",{"_index":1196,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1229,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1163,"title":{},"body":{"index.html":{}}}],["document.body.click",{"_index":671,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["document.body.scrolltop",{"_index":850,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["document.documentelement.scrolltop",{"_index":849,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["documentation",{"_index":1093,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":61,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["don't",{"_index":212,"title":{},"body":{"components/AccountLoginRootComponent.html":{}}}],["don\\'t",{"_index":221,"title":{},"body":{"components/AccountLoginRootComponent.html":{}}}],["dto",{"_index":25,"title":{},"body":{"classes/AccountDto.html":{}}}],["dto.avatar",{"_index":40,"title":{},"body":{"classes/AccountDto.html":{}}}],["dto.id",{"_index":38,"title":{},"body":{"classes/AccountDto.html":{}}}],["dto.languages",{"_index":42,"title":{},"body":{"classes/AccountDto.html":{}}}],["dto.lastonline",{"_index":44,"title":{},"body":{"classes/AccountDto.html":{}}}],["dto.nickname",{"_index":46,"title":{},"body":{"classes/AccountDto.html":{}}}],["dto.registerdate",{"_index":48,"title":{},"body":{"classes/AccountDto.html":{}}}],["dto.statusinfo",{"_index":50,"title":{},"body":{"classes/AccountDto.html":{}}}],["dynamic",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["e04326c",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["e20b1cc",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["e2e/src/app.po.ts",{"_index":409,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":414,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":412,"title":{},"body":{"classes/AppPage.html":{}}}],["ease",{"_index":872,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["easier",{"_index":745,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["el",{"_index":691,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["element",{"_index":137,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["element(by.css(selector)).gettext",{"_index":420,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":687,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["empty",{"_index":199,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["encapsulation",{"_index":72,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["english",{"_index":1015,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["env/environment",{"_index":340,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{}}}],["environment",{"_index":339,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/IEnvironment.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}account",{"_index":331,"title":{},"body":{"injectables/AccountService.html":{}}}],["environment.apiurl}manage",{"_index":924,"title":{},"body":{"injectables/ManageService.html":{}}}],["environment.clientid",{"_index":624,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["environment.imageurl",{"_index":901,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["environment.production",{"_index":613,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["err",{"_index":619,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["err.pipe",{"_index":489,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["error",{"_index":369,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/IEnvironment.html":{},"components/MainErrorComponent.html":{},"modules/MainRoutingModule.html":{}}}],["error'},{'name",{"_index":153,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["error('invalid",{"_index":355,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ManageService.html":{}}}],["error('that",{"_index":373,"title":{},"body":{"injectables/AccountService.html":{}}}],["error.component.html",{"_index":767,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["error.component.scss",{"_index":766,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["error.component.ts",{"_index":765,"title":{},"body":{"components/MainErrorComponent.html":{},"coverage.html":{}}}],["error.directive",{"_index":940,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{}}}],["error.directive.ts",{"_index":681,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"coverage.html":{}}}],["error.directive.ts:15",{"_index":932,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["error.directive.ts:19",{"_index":933,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["error.directive.ts:27",{"_index":934,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["error.dto",{"_index":451,"title":{},"body":{"classes/AuthInfo.html":{}}}],["error.dto.ts",{"_index":725,"title":{},"body":{"interfaces/HttpError.html":{},"coverage.html":{}}}],["error.message",{"_index":626,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["error.stack",{"_index":634,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["error.status",{"_index":491,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ErrorsHandler.html":{}}}],["error.tostring",{"_index":627,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["error.value",{"_index":370,"title":{},"body":{"injectables/AccountService.html":{}}}],["error.value.status",{"_index":371,"title":{},"body":{"injectables/AccountService.html":{}}}],["error/index.ts",{"_index":939,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{}}}],["error/main",{"_index":764,"title":{},"body":{"components/MainErrorComponent.html":{},"coverage.html":{}}}],["error/mpgp",{"_index":680,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"coverage.html":{}}}],["errorcode",{"_index":443,"title":{},"body":{"classes/AuthInfo.html":{},"interfaces/HttpError.html":{}}}],["errorhandler",{"_index":465,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorsHandler.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":650,"title":{},"body":{"injectables/ErrorsHandler.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"changelog.html":{}}}],["errors.matchpassword",{"_index":706,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.maxlength",{"_index":701,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.maxlength.requiredlength",{"_index":703,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.minlength",{"_index":697,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.minlength.requiredlength",{"_index":700,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.pattern",{"_index":704,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.pattern.requiredpattern",{"_index":705,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.required",{"_index":696,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errorshandler",{"_index":585,"title":{"injectables/ErrorsHandler.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ErrorsHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorslogger",{"_index":580,"title":{"injectables/ErrorsLogger.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["errorwithcontext",{"_index":600,"title":{"interfaces/ErrorWithContext.html":{}},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"coverage.html":{}}}],["errorwithcontext).pipe",{"_index":616,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["even",{"_index":1271,"title":{},"body":{"license.html":{}}}],["event",{"_index":96,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":125,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["eventemitter",{"_index":90,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["example",{"_index":1014,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["exemplary",{"_index":1250,"title":{},"body":{"license.html":{}}}],["expiry",{"_index":503,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["exports",{"_index":229,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":1233,"title":{},"body":{"license.html":{}}}],["expression",{"_index":368,"title":{},"body":{"injectables/AccountService.html":{}}}],["extends",{"_index":603,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["f3dcfcc",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["fallback",{"_index":522,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["fallback.pipe(tap(value",{"_index":530,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["false",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":89,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["fe62a3f",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["fff",{"_index":804,"title":{},"body":{"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{}}}],["field",{"_index":251,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["files",{"_index":1187,"title":{},"body":{"index.html":{}}}],["fill",{"_index":881,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["filter",{"_index":896,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["filter((x",{"_index":898,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["fitness",{"_index":1239,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":868,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["fixes",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":815,"title":{},"body":{"components/MainRootComponent.html":{}}}],["focus",{"_index":811,"title":{},"body":{"components/MainRootComponent.html":{}}}],["following",{"_index":747,"title":{},"body":{"interfaces/IEnvironment.html":{},"license.html":{}}}],["form",{"_index":76,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"classes/CustomValidators.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"license.html":{}}}],["form'},{'name",{"_index":141,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["form.component.html",{"_index":80,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.scss",{"_index":78,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts",{"_index":66,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:14",{"_index":99,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:15",{"_index":268,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:16",{"_index":88,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:17",{"_index":264,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:20",{"_index":94,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:21",{"_index":266,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:24",{"_index":91,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:25",{"_index":265,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:31",{"_index":97,"title":{},"body":{"components/AccountLoginFormComponent.html":{}}}],["form.component.ts:33",{"_index":1012,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:36",{"_index":1018,"title":{},"body":{"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:37",{"_index":267,"title":{},"body":{"components/AccountRegisterFormComponent.html":{}}}],["form.get('password')!.value",{"_index":597,"title":{},"body":{"classes/CustomValidators.html":{}}}],["form.get('passwordrepeat')!.seterrors",{"_index":599,"title":{},"body":{"classes/CustomValidators.html":{}}}],["form.get('passwordrepeat')!.value",{"_index":598,"title":{},"body":{"classes/CustomValidators.html":{}}}],["form/account",{"_index":65,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"coverage.html":{}}}],["form/settings",{"_index":1011,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":87,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["formcontrol",{"_index":679,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"coverage.html":{}}}],["formcontrolerror",{"_index":677,"title":{"interfaces/FormControlError.html":{}},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["formerorr",{"_index":190,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["formgroup",{"_index":98,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["forms",{"_index":1214,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":243,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["frames",{"_index":742,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["friends",{"_index":963,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["full",{"_index":129,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"modules/MainRoutingModule.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["function",{"_index":557,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1154,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1198,"title":{},"body":{"index.html":{}}}],["game",{"_index":718,"title":{},"body":{"components/GeneralRootComponent.html":{}}}],["general",{"_index":150,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["generalmodule",{"_index":709,"title":{"modules/GeneralModule.html":{}},"body":{"modules/GeneralModule.html":{},"modules.html":{},"overview.html":{}}}],["generalrootcomponent",{"_index":149,"title":{"components/GeneralRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generalroutingmodule",{"_index":713,"title":{"modules/GeneralRoutingModule.html":{}},"body":{"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1191,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1159,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":521,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["getaccount",{"_index":977,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["getauthinfo",{"_index":332,"title":{},"body":{"injectables/AccountService.html":{}}}],["geterrormessage",{"_index":929,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["geterrormessage(errors",{"_index":695,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["getinstance",{"_index":576,"title":{},"body":{"classes/CacheService.html":{}}}],["getisloggedin",{"_index":335,"title":{},"body":{"injectables/AccountService.html":{}}}],["getparagraphtext",{"_index":410,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":1038,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getuseravatar",{"_index":892,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["getuserid",{"_index":894,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["global",{"_index":1176,"title":{},"body":{"index.html":{}}}],["go",{"_index":774,"title":{},"body":{"components/MainErrorComponent.html":{},"index.html":{}}}],["goods",{"_index":1255,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1277,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":421,"title":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":798,"title":{},"body":{"modules/MainModule.html":{},"modules/MainRoutingModule.html":{}}}],["guards/logout.guard",{"_index":258,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["guards/unauthorized.guard",{"_index":260,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["handle",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["handleauthorizationresponse",{"_index":303,"title":{},"body":{"injectables/AccountService.html":{}}}],["handleauthorizationresponse(response",{"_index":315,"title":{},"body":{"injectables/AccountService.html":{}}}],["handleerror",{"_index":638,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handleerror(error",{"_index":644,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handlehttperror",{"_index":639,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handlehttperror(error",{"_index":646,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handler.service",{"_index":587,"title":{},"body":{"modules/CoreModule.html":{}}}],["handler.service.ts",{"_index":637,"title":{},"body":{"injectables/ErrorsHandler.html":{},"coverage.html":{}}}],["handler.service.ts:11",{"_index":643,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handler.service.ts:16",{"_index":645,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handler.service.ts:27",{"_index":647,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handler.service.ts:38",{"_index":648,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["has(key",{"_index":535,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["hasvalidcachedvalue",{"_index":564,"title":{},"body":{"classes/CacheService.html":{}}}],["hasvalidcachedvalue(key",{"_index":549,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["height",{"_index":864,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["help",{"_index":1199,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1244,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1231,"title":{},"body":{"license.html":{}}}],["home",{"_index":773,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["hostlistener",{"_index":845,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["hostlistener('window:scroll",{"_index":846,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["hostlisteners",{"_index":840,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["hostname",{"_index":1168,"title":{},"body":{"index.html":{}}}],["hover",{"_index":876,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["html",{"_index":136,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["http",{"_index":314,"title":{},"body":{"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{}}}],["http://localhost:4200",{"_index":1184,"title":{},"body":{"index.html":{}}}],["http://localhost:5000/api",{"_index":733,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:5000/images/avatars",{"_index":735,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":582,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{}}}],["httpclientmodule",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["httperror",{"_index":441,"title":{"interfaces/HttpError.html":{}},"body":{"classes/AuthInfo.html":{},"interfaces/HttpError.html":{},"coverage.html":{}}}],["httperrorresponse",{"_index":609,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["httperrorresponse).status",{"_index":636,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["httpevent",{"_index":472,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":469,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":473,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":468,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://mpgp.github.io/browserclient",{"_index":1157,"title":{},"body":{"index.html":{}}}],["id",{"_index":10,"title":{},"body":{"classes/AccountDto.html":{},"components/ProfileCardContainerComponent.html":{}}}],["identifier",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["ienvironment",{"_index":726,"title":{"interfaces/IEnvironment.html":{}},"body":{"interfaces/IEnvironment.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ignore",{"_index":480,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/IEnvironment.html":{},"components/MainToolbarAvatarComponent.html":{}}}],["image",{"_index":1164,"title":{},"body":{"index.html":{}}}],["imageurl",{"_index":730,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["impact",{"_index":751,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["implements",{"_index":67,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ErrorsHandler.html":{},"guards/LogoutGuard.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["implied",{"_index":1234,"title":{},"body":{"license.html":{}}}],["import",{"_index":100,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{}}}],["import('../features/account/account.module').then(m",{"_index":828,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["import('../features/general/general.module').then(m",{"_index":821,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["import('../features/profile/profile.module').then(m",{"_index":824,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["import('../features/settings/settings.module').then(m",{"_index":826,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["imports",{"_index":239,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["incidental",{"_index":1248,"title":{},"body":{"license.html":{}}}],["included",{"_index":753,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["including",{"_index":1236,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1247,"title":{},"body":{"license.html":{}}}],["inflight",{"_index":543,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["inflight.complete",{"_index":547,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["inflight.next(value",{"_index":546,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["inflight.observers.length",{"_index":545,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["inflightobservables",{"_index":513,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["info.authtoken",{"_index":453,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.dto",{"_index":342,"title":{},"body":{"injectables/AccountService.html":{}}}],["info.dto.ts",{"_index":440,"title":{},"body":{"classes/AuthInfo.html":{},"coverage.html":{}}}],["info.dto.ts:5",{"_index":447,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.dto.ts:6",{"_index":449,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.dto.ts:7",{"_index":448,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.dto.ts:8",{"_index":446,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.errorcode",{"_index":457,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.message",{"_index":459,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.user",{"_index":455,"title":{},"body":{"classes/AuthInfo.html":{}}}],["information",{"_index":1006,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["information{{accounterorr}}change",{"_index":1008,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["initial",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":295,"title":{"injectables/AccountService.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{}},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"injectables/ManageService.html":{},"guards/UnauthorizedGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{},"overview.html":{}}}],["injector",{"_index":642,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["inline",{"_index":806,"title":{},"body":{"components/MainRootComponent.html":{}}}],["input",{"_index":377,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{}}}],["inputs",{"_index":930,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{}}}],["install",{"_index":1173,"title":{},"body":{"index.html":{}}}],["instance",{"_index":519,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["instanceof",{"_index":528,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["instancevalue",{"_index":518,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["intercept",{"_index":464,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(request",{"_index":467,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":460,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["interceptors",{"_index":462,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":497,"title":{"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"interfaces/ErrorWithContext.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}},"body":{"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"directives/MpgpFormControlErrorDirective.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["interfaces",{"_index":498,"title":{},"body":{"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"interfaces/ErrorWithContext.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"overview.html":{}}}],["interfaces/auth",{"_index":341,"title":{},"body":{"injectables/AccountService.html":{}}}],["interfaces/authorize",{"_index":343,"title":{},"body":{"injectables/AccountService.html":{}}}],["interfaces/register",{"_index":344,"title":{},"body":{"injectables/AccountService.html":{}}}],["interruption",{"_index":1259,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":708,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["isloggedin",{"_index":307,"title":{},"body":{"injectables/AccountService.html":{}}}],["js",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem(accountservice.localstoragekey",{"_index":346,"title":{},"body":{"injectables/AccountService.html":{}}}],["json.stringify(info",{"_index":385,"title":{},"body":{"injectables/AccountService.html":{}}}],["key",{"_index":533,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["languages",{"_index":11,"title":{},"body":{"classes/AccountDto.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{}}}],["lastonline",{"_index":12,"title":{},"body":{"classes/AccountDto.html":{}}}],["layout",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["layoutmodule",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":883,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["legend",{"_index":135,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"overview.html":{}}}],["length",{"_index":699,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["liability",{"_index":1262,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1245,"title":{},"body":{"license.html":{}}}],["license",{"_index":1203,"title":{"license.html":{}},"body":{"license.html":{}}}],["limited",{"_index":1237,"title":{},"body":{"license.html":{}}}],["line:no",{"_index":366,"title":{},"body":{"injectables/AccountService.html":{}}}],["linting",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":1225,"title":{},"body":{"license.html":{}}}],["literal",{"_index":686,"title":{},"body":{"interfaces/FormControlError.html":{}}}],["loadchildren",{"_index":820,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["localhost",{"_index":1169,"title":{},"body":{"index.html":{}}}],["localstorage.removeitem('auth",{"_index":661,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["localstorage.removeitem(accountservice.localstoragekey",{"_index":362,"title":{},"body":{"injectables/AccountService.html":{}}}],["localstorage.setitem(accountservice.localstoragekey",{"_index":384,"title":{},"body":{"injectables/AccountService.html":{}}}],["localstoragekey",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{}}}],["location",{"_index":621,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["location.path",{"_index":629,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["location.reload",{"_index":762,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["locationstrategy",{"_index":607,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["log",{"_index":283,"title":{},"body":{"components/AccountRegisterRootComponent.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"changelog.html":{}}}],["logerror",{"_index":640,"title":{},"body":{"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["logerror(error",{"_index":611,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["logger",{"_index":668,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["logger.service",{"_index":588,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorsHandler.html":{}}}],["logger.service.ts",{"_index":602,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"coverage.html":{}}}],["logger.service.ts:19",{"_index":674,"title":{},"body":{"injectables/ErrorsLogger.html":{}}}],["logger.service.ts:26",{"_index":676,"title":{},"body":{"injectables/ErrorsLogger.html":{}}}],["logger.service.ts:41",{"_index":675,"title":{},"body":{"injectables/ErrorsLogger.html":{}}}],["login",{"_index":64,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"interfaces/AuthorizeAccountCommand.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"interfaces/UpdateAccountCommand.html":{},"coverage.html":{}}}],["login(command",{"_index":194,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"injectables/AccountService.html":{}}}],["login.mat",{"_index":213,"title":{},"body":{"components/AccountLoginRootComponent.html":{}}}],["logout",{"_index":293,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/MainToolbarAvatarComponent.html":{}}}],["logoutguard",{"_index":257,"title":{"guards/LogoutGuard.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"guards/LogoutGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loss",{"_index":1256,"title":{},"body":{"license.html":{}}}],["m.accountmodule",{"_index":829,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["m.generalmodule",{"_index":822,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["m.profilemodule",{"_index":825,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["m.settingsmodule",{"_index":827,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["mail",{"_index":775,"title":{},"body":{"components/MainErrorComponent.html":{},"components/MainToolbarMailComponent.html":{}}}],["mail'},{'name",{"_index":162,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["mail.component.html",{"_index":908,"title":{},"body":{"components/MainToolbarMailComponent.html":{}}}],["mail.component.ts",{"_index":907,"title":{},"body":{"components/MainToolbarMailComponent.html":{},"coverage.html":{}}}],["mail/main",{"_index":906,"title":{},"body":{"components/MainToolbarMailComponent.html":{},"coverage.html":{}}}],["main",{"_index":152,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["main/main.module",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["mainerrorcomponent",{"_index":151,"title":{"components/MainErrorComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mainmodule",{"_index":395,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mainrootcomponent",{"_index":154,"title":{"components/MainRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mainroutingmodule",{"_index":786,"title":{"modules/MainRoutingModule.html":{}},"body":{"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mainscrolltotopcomponent",{"_index":155,"title":{"components/MainScrollToTopComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbaravatarcomponent",{"_index":158,"title":{"components/MainToolbarAvatarComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbarmailcomponent",{"_index":161,"title":{"components/MainToolbarMailComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbarnotificationscomponent",{"_index":163,"title":{"components/MainToolbarNotificationsComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["manageservice",{"_index":913,"title":{"injectables/ManageService.html":{}},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["many",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":512,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"components/MainToolbarAvatarComponent.html":{}}}],["map((x",{"_index":900,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["margin",{"_index":133,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{}}}],["mat",{"_index":417,"title":{},"body":{"classes/AppPage.html":{},"components/MainErrorComponent.html":{}}}],["matbadgemodule",{"_index":788,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":245,"title":{},"body":{"modules/AccountModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":247,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/ProfileModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":707,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":593,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["matchpassword(form",{"_index":594,"title":{},"body":{"classes/CustomValidators.html":{}}}],["materials",{"_index":1228,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":249,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":790,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":252,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":792,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":794,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":1028,"title":{},"body":{"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":796,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":215,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/ProfileCardComponent.html":{}}}],["maxage",{"_index":538,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["maximum",{"_index":702,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["maxlength",{"_index":682,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["merchantability",{"_index":1238,"title":{},"body":{"license.html":{}}}],["message",{"_index":444,"title":{},"body":{"classes/AuthInfo.html":{},"interfaces/HttpError.html":{},"components/ProfileCardComponent.html":{}}}],["met",{"_index":1220,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":69,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["methodname",{"_index":554,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["methods",{"_index":81,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["migrate",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":698,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["minlength",{"_index":683,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["miscellaneous",{"_index":1153,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":739,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["modification",{"_index":1216,"title":{},"body":{"license.html":{}}}],["module",{"_index":222,"title":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"changelog.html":{},"overview.html":{}}}],["modules",{"_index":224,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1200,"title":{},"body":{"index.html":{}}}],["mpgp",{"_index":721,"title":{},"body":{"components/GeneralRootComponent.html":{},"components/MainRootComponent.html":{},"modules/MpgpFormControlErrorModule.html":{},"license.html":{}}}],["mpgp129/mpgpclient",{"_index":1165,"title":{},"body":{"index.html":{}}}],["mpgp129/mpgpclient:latest",{"_index":1172,"title":{},"body":{"index.html":{}}}],["mpgpclient",{"_index":734,"title":{},"body":{"interfaces/IEnvironment.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mpgpformcontrolerror",{"_index":183,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["mpgpformcontrolerror(errors",{"_index":692,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["mpgpformcontrolerrordirective",{"_index":182,"title":{"directives/MpgpFormControlErrorDirective.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mpgpformcontrolerrormodule",{"_index":234,"title":{"modules/MpgpFormControlErrorModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":589,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["multiplayer",{"_index":717,"title":{},"body":{"components/GeneralRootComponent.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"components/GeneralRootComponent.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1183,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":411,"title":{},"body":{"classes/AppPage.html":{}}}],["negligence",{"_index":1267,"title":{},"body":{"license.html":{}}}],["new",{"_index":52,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["newmethod",{"_index":558,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["newrequest",{"_index":484,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next",{"_index":365,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{}}}],["next.handle(newrequest).pipe",{"_index":487,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":1190,"title":{},"body":{"index.html":{}}}],["ng10",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["ng8",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":242,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["ngoninit",{"_index":83,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["ngzone",{"_index":649,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["nickname",{"_index":13,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountRegisterFormComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{}}}],["non",{"_index":506,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["none",{"_index":813,"title":{},"body":{"components/MainRootComponent.html":{}}}],["notice",{"_index":1224,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":911,"title":{},"body":{"components/MainToolbarNotificationsComponent.html":{}}}],["notifications'},{'name",{"_index":164,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["notifications.component.html",{"_index":912,"title":{},"body":{"components/MainToolbarNotificationsComponent.html":{}}}],["notifications.component.ts",{"_index":910,"title":{},"body":{"components/MainToolbarNotificationsComponent.html":{},"coverage.html":{}}}],["notifications/main",{"_index":909,"title":{},"body":{"components/MainToolbarNotificationsComponent.html":{},"coverage.html":{}}}],["notifyinflightobservers",{"_index":565,"title":{},"body":{"classes/CacheService.html":{}}}],["notifyinflightobservers(key",{"_index":542,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["null",{"_index":273,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"injectables/AccountService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/AccountDto.html":{},"classes/AuthInfo.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"components/MainToolbarAvatarComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{}}}],["object",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(target",{"_index":553,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["observable",{"_index":319,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{}}}],["observerscount",{"_index":544,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["of(error",{"_index":496,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["of(this.cache.get(key).value",{"_index":525,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["of(void",{"_index":358,"title":{},"body":{"injectables/AccountService.html":{}}}],["oldpassword",{"_index":1019,"title":{},"body":{"components/SettingsAccountPasswordFormComponent.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["oninit",{"_index":68,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["onsubmit",{"_index":84,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["onsubmit(event",{"_index":95,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["onwindowscroll",{"_index":847,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["oops",{"_index":768,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["opacity",{"_index":866,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["opendialog",{"_index":947,"title":{},"body":{"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{}}}],["opendialog(id",{"_index":975,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["openeddialog",{"_index":949,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["originalmethod",{"_index":555,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["originalmethod.apply(this",{"_index":562,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["otherwise",{"_index":1268,"title":{},"body":{"license.html":{}}}],["out",{"_index":237,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"interfaces/IEnvironment.html":{},"modules/MainModule.html":{},"components/MainScrollToTopComponent.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":812,"title":{},"body":{"components/MainRootComponent.html":{}}}],["output",{"_index":102,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["outputs",{"_index":85,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["overview",{"_index":1278,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1170,"title":{},"body":{"index.html":{}}}],["package",{"_index":1130,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1174,"title":{},"body":{"index.html":{}}}],["padding",{"_index":809,"title":{},"body":{"components/MainRootComponent.html":{}}}],["pages",{"_index":261,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1240,"title":{},"body":{"license.html":{}}}],["password",{"_index":122,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"interfaces/AuthorizeAccountCommand.html":{},"classes/CustomValidators.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["passworderorr",{"_index":994,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["passwordrepeat",{"_index":275,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"classes/CustomValidators.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["password{{passworderorr",{"_index":1009,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["path",{"_index":290,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainRoutingModule.html":{},"injectables/ManageService.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pathlocationstrategy",{"_index":608,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["pathmatch",{"_index":818,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["pattern",{"_index":684,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["performance",{"_index":750,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["permitted",{"_index":1217,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":206,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/ErrorsHandler.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["platform",{"_index":719,"title":{},"body":{"components/GeneralRootComponent.html":{}}}],["please",{"_index":748,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["pointer",{"_index":863,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["position",{"_index":867,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["possibility",{"_index":1273,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1178,"title":{},"body":{"index.html":{}}}],["private",{"_index":298,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"guards/UnauthorizedGuard.html":{}}}],["procurement",{"_index":1253,"title":{},"body":{"license.html":{}}}],["production",{"_index":731,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":166,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"changelog.html":{}}}],["profile/:id",{"_index":823,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["profilecardcomponent",{"_index":165,"title":{"components/ProfileCardComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profilecardcontainercomponent",{"_index":168,"title":{"components/ProfileCardContainerComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profilemodule",{"_index":981,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerootcomponent",{"_index":171,"title":{"components/ProfileRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profileroutingmodule",{"_index":985,"title":{"modules/ProfileRoutingModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["profilewallcontainercomponent",{"_index":172,"title":{"components/ProfileWallContainerComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profits",{"_index":1257,"title":{},"body":{"license.html":{}}}],["project",{"_index":1158,"title":{},"body":{"index.html":{}}}],["promise",{"_index":413,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["propertydescriptor",{"_index":552,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["protractor",{"_index":415,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":507,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1218,"title":{},"body":{"license.html":{}}}],["providers",{"_index":228,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/ErrorsHandler.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":515,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"components/MainRootComponent.html":{}}}],["pull",{"_index":1162,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1241,"title":{},"body":{"license.html":{}}}],["queryparams",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorsHandler.html":{}}}],["radius",{"_index":859,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["raised",{"_index":778,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["react",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["reactiveformsmodule",{"_index":244,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1202,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":111,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["redirectto",{"_index":819,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["redistribution",{"_index":1212,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":1221,"title":{},"body":{"license.html":{}}}],["register",{"_index":145,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["register(command",{"_index":280,"title":{},"body":{"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{}}}],["register.mat",{"_index":284,"title":{},"body":{"components/AccountRegisterRootComponent.html":{}}}],["registeraccountcommand",{"_index":269,"title":{"interfaces/RegisterAccountCommand.html":{}},"body":{"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"coverage.html":{}}}],["registerdate",{"_index":14,"title":{},"body":{"classes/AccountDto.html":{}}}],["related",{"_index":740,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["reload",{"_index":1186,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":325,"title":{},"body":{"injectables/AccountService.html":{}}}],["reproduce",{"_index":1226,"title":{},"body":{"license.html":{}}}],["request",{"_index":471,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone",{"_index":485,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["require",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":685,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["requiredlength",{"_index":689,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["requiredpattern",{"_index":690,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["reserved",{"_index":1211,"title":{},"body":{"license.html":{}}}],["reset",{"_index":236,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["response",{"_index":317,"title":{},"body":{"injectables/AccountService.html":{}}}],["response.errorcode",{"_index":379,"title":{},"body":{"injectables/AccountService.html":{}}}],["result",{"_index":53,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.appid",{"_index":623,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.message",{"_index":625,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.stack",{"_index":633,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.status",{"_index":635,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.url",{"_index":628,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.user",{"_index":630,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["results",{"_index":55,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1222,"title":{},"body":{"license.html":{}}}],["retrycount",{"_index":494,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["retrywhen",{"_index":475,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["retrywhen((err",{"_index":488,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["return",{"_index":209,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["returns",{"_index":92,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorsHandler.html":{}}}],["right",{"_index":869,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["rights",{"_index":1210,"title":{},"body":{"license.html":{}}}],["rm",{"_index":1167,"title":{},"body":{"index.html":{}}}],["root",{"_index":180,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["root.component.html",{"_index":189,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainRootComponent.html":{},"components/ProfileRootComponent.html":{},"components/SettingsRootComponent.html":{}}}],["root.component.scss",{"_index":188,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainRootComponent.html":{}}}],["root.component.ts",{"_index":187,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainRootComponent.html":{},"components/ProfileRootComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["root.component.ts:12",{"_index":800,"title":{},"body":{"components/MainRootComponent.html":{}}}],["root.component.ts:13",{"_index":801,"title":{},"body":{"components/MainRootComponent.html":{}}}],["root.component.ts:16",{"_index":193,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["root.component.ts:20",{"_index":195,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["root/account",{"_index":186,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"coverage.html":{}}}],["root/general",{"_index":716,"title":{},"body":{"components/GeneralRootComponent.html":{},"coverage.html":{}}}],["root/main",{"_index":799,"title":{},"body":{"components/MainRootComponent.html":{},"coverage.html":{}}}],["root/profile",{"_index":988,"title":{},"body":{"components/ProfileRootComponent.html":{},"coverage.html":{}}}],["root/settings",{"_index":1031,"title":{},"body":{"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["route",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{}}}],["router",{"_index":312,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/ErrorsHandler.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["router.navigatebyurl('/account/login",{"_index":665,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["router.navigatebyurl('/error",{"_index":672,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["routermodule",{"_index":287,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":294,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":830,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["routes",{"_index":288,"title":{"routes.html":{}},"body":{"modules/AccountRoutingModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":255,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{}}}],["routing.module.ts",{"_index":286,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["row",{"_index":418,"title":{},"body":{"classes/AppPage.html":{}}}],["run",{"_index":1166,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":200,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":202,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["saveauthinfo",{"_index":304,"title":{},"body":{"injectables/AccountService.html":{}}}],["saveauthinfo(info",{"_index":322,"title":{},"body":{"injectables/AccountService.html":{}}}],["scaffolding",{"_index":1189,"title":{},"body":{"index.html":{}}}],["scan",{"_index":476,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["scan((retrycount",{"_index":493,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["scroll",{"_index":156,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["scrolltotop",{"_index":839,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["selector",{"_index":74,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["server",{"_index":1180,"title":{},"body":{"index.html":{}}}],["service",{"_index":508,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["services",{"_index":1000,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["services/account.service",{"_index":583,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/auth.interceptor",{"_index":584,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/errors",{"_index":586,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":566,"title":{},"body":{"classes/CacheService.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["set(key",{"_index":537,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["setheaders",{"_index":486,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["setmpgpformcontrolerror(errors",{"_index":935,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["settimeout",{"_index":670,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["settings",{"_index":175,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"changelog.html":{}}}],["settingsaccountcontainercomponent",{"_index":174,"title":{"components/SettingsAccountContainerComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsaccountdataformcomponent",{"_index":176,"title":{"components/SettingsAccountDataFormComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsaccountpasswordformcomponent",{"_index":178,"title":{"components/SettingsAccountPasswordFormComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsmodule",{"_index":1021,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsrootcomponent",{"_index":179,"title":{"components/SettingsRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsroutingmodule",{"_index":1026,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":1243,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["shared/custom",{"_index":272,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["shared/directives",{"_index":254,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{}}}],["show",{"_index":878,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["showscroll",{"_index":838,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["sign",{"_index":211,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["simplified",{"_index":1207,"title":{},"body":{"license.html":{}}}],["software",{"_index":1230,"title":{},"body":{"license.html":{}}}],["something",{"_index":770,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["soon",{"_index":1032,"title":{},"body":{"components/SettingsRootComponent.html":{}}}],["sorry",{"_index":769,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"index.html":{},"license.html":{}}}],["spacer",{"_index":814,"title":{},"body":{"components/MainRootComponent.html":{}}}],["span",{"_index":419,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1249,"title":{},"body":{"license.html":{}}}],["src/.../account.module.ts",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cache.service.ts",{"_index":1155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../core.module.ts",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../general.module.ts",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.module.ts",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profile.module.ts",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.module.ts",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.ts",{"_index":581,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interfaces/account.dto.ts",{"_index":6,"title":{},"body":{"classes/AccountDto.html":{},"coverage.html":{}}}],["src/app/core/interfaces/account.dto.ts:2",{"_index":30,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:3",{"_index":28,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:4",{"_index":31,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:5",{"_index":33,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:6",{"_index":34,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:7",{"_index":35,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:8",{"_index":19,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/auth",{"_index":439,"title":{},"body":{"classes/AuthInfo.html":{},"coverage.html":{}}}],["src/app/core/interfaces/authorize",{"_index":499,"title":{},"body":{"interfaces/AuthorizeAccountCommand.html":{},"coverage.html":{}}}],["src/app/core/interfaces/http",{"_index":724,"title":{},"body":{"interfaces/HttpError.html":{},"coverage.html":{}}}],["src/app/core/interfaces/register",{"_index":990,"title":{},"body":{"interfaces/RegisterAccountCommand.html":{},"coverage.html":{}}}],["src/app/core/interfaces/update",{"_index":1037,"title":{},"body":{"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts",{"_index":297,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:15",{"_index":330,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:16",{"_index":327,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:17",{"_index":326,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:18",{"_index":328,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:19",{"_index":313,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:31",{"_index":333,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:35",{"_index":334,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:39",{"_index":336,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:43",{"_index":318,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:52",{"_index":320,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:61",{"_index":321,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:74",{"_index":316,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:87",{"_index":324,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/auth.interceptor.ts",{"_index":463,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/core/services/auth.interceptor.ts:12",{"_index":470,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/services/auth.interceptor.ts:9",{"_index":466,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/services/cache.service.ts",{"_index":502,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/services/cache.service.ts:13",{"_index":567,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:14",{"_index":569,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:16",{"_index":568,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:17",{"_index":570,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:19",{"_index":577,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:23",{"_index":571,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:41",{"_index":572,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:45",{"_index":575,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:50",{"_index":574,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:64",{"_index":573,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/errors",{"_index":601,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"coverage.html":{}}}],["src/app/features/account/account",{"_index":285,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["src/app/features/account/account.module.ts",{"_index":238,"title":{},"body":{"modules/AccountModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/account/components/account",{"_index":63,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/features/account/components/index.ts",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/account/containers/index.ts",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/account/guards/logout.guard.ts",{"_index":756,"title":{},"body":{"guards/LogoutGuard.html":{},"coverage.html":{}}}],["src/app/features/account/guards/logout.guard.ts:10",{"_index":759,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["src/app/features/account/guards/logout.guard.ts:7",{"_index":757,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["src/app/features/account/guards/unauthorized.guard.ts",{"_index":1034,"title":{},"body":{"guards/UnauthorizedGuard.html":{},"coverage.html":{}}}],["src/app/features/account/guards/unauthorized.guard.ts:10",{"_index":1036,"title":{},"body":{"guards/UnauthorizedGuard.html":{}}}],["src/app/features/account/guards/unauthorized.guard.ts:7",{"_index":1035,"title":{},"body":{"guards/UnauthorizedGuard.html":{}}}],["src/app/features/account/pages/account",{"_index":185,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"coverage.html":{}}}],["src/app/features/account/pages/index.ts",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/general/components/index.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/general/containers/index.ts",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/general/general",{"_index":723,"title":{},"body":{"modules/GeneralRoutingModule.html":{}}}],["src/app/features/general/general.module.ts",{"_index":714,"title":{},"body":{"modules/GeneralModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/general/pages/general",{"_index":715,"title":{},"body":{"components/GeneralRootComponent.html":{},"coverage.html":{}}}],["src/app/features/general/pages/index.ts",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/profile/components/index.ts",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/profile/components/profile",{"_index":941,"title":{},"body":{"components/ProfileCardComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/containers/index.ts",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/profile/containers/profile",{"_index":967,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/pages/index.ts",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/profile/pages/profile",{"_index":987,"title":{},"body":{"components/ProfileRootComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/profile",{"_index":989,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["src/app/features/profile/profile.module.ts",{"_index":986,"title":{},"body":{"modules/ProfileModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/components/index.ts",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/components/settings",{"_index":1010,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/containers/index.ts",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/containers/settings",{"_index":991,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/pages/index.ts",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/pages/settings",{"_index":1030,"title":{},"body":{"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/services/index.ts",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/services/manage.service.ts",{"_index":914,"title":{},"body":{"injectables/ManageService.html":{},"coverage.html":{}}}],["src/app/features/settings/services/manage.service.ts:12",{"_index":917,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/app/features/settings/services/manage.service.ts:16",{"_index":920,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/app/features/settings/services/manage.service.ts:24",{"_index":923,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/app/features/settings/settings",{"_index":1033,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/features/settings/settings.module.ts",{"_index":1027,"title":{},"body":{"modules/SettingsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/components/index.ts",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/containers/index.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/containers/main",{"_index":832,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"coverage.html":{}}}],["src/app/main/guards/auth.guard.ts",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/main/guards/auth.guard.ts:10",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/main/guards/auth.guard.ts:7",{"_index":425,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/main/main",{"_index":817,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["src/app/main/main.module.ts",{"_index":787,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/pages/index.ts",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/pages/main",{"_index":763,"title":{},"body":{"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"coverage.html":{}}}],["src/app/shared/custom",{"_index":591,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["src/app/shared/directives/mpgp",{"_index":678,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":727,"title":{},"body":{"interfaces/IEnvironment.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":741,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["start",{"_index":1181,"title":{},"body":{"index.html":{}}}],["started",{"_index":1039,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{}}}],["status",{"_index":605,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["statusinfo",{"_index":15,"title":{},"body":{"classes/AccountDto.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{}}}],["stored",{"_index":1195,"title":{},"body":{"index.html":{}}}],["strict",{"_index":1265,"title":{},"body":{"license.html":{}}}],["string",{"_index":27,"title":{},"body":{"classes/AccountDto.html":{},"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["stylelint",{"_index":1083,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["styles",{"_index":60,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["styleurls",{"_index":77,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["subject",{"_index":198,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["submit",{"_index":127,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["substitute",{"_index":1254,"title":{},"body":{"license.html":{}}}],["such",{"_index":743,"title":{},"body":{"interfaces/IEnvironment.html":{},"license.html":{}}}],["support",{"_index":777,"title":{},"body":{"components/MainErrorComponent.html":{},"modules.html":{}}}],["svg",{"_index":1275,"title":{},"body":{"modules.html":{}}}],["t",{"_index":504,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["table",{"_index":132,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":374,"title":{},"body":{"injectables/AccountService.html":{}}}],["tap",{"_index":338,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"injectables/ErrorsHandler.html":{}}}],["tap((error",{"_index":490,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tap((response",{"_index":356,"title":{},"body":{"injectables/AccountService.html":{}}}],["tap(_",{"_index":360,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ErrorsHandler.html":{}}}],["tap(response",{"_index":378,"title":{},"body":{"injectables/AccountService.html":{}}}],["target.constructor.name}.${methodname}:${args.join",{"_index":561,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["template",{"_index":59,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["templateurl",{"_index":79,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["text",{"_index":217,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{}}}],["theory",{"_index":1261,"title":{},"body":{"license.html":{}}}],["this.account.avatar",{"_index":956,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["this.accounterorr$.next",{"_index":1001,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.accounterorr$.next(error.tostring",{"_index":1003,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.accountservice",{"_index":205,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["this.accountservice.authinfo",{"_index":631,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.accountservice.authinfo!.user",{"_index":979,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["this.accountservice.authinfo$.pipe",{"_index":897,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["this.accountservice.authinfo.authtoken",{"_index":481,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.accountservice.authinfo.user",{"_index":632,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.accountservice.authinfo.user.id",{"_index":903,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["this.accountservice.isloggedin",{"_index":432,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["this.accountservice.logout().topromise",{"_index":760,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["this.addcontextinfo(error",{"_index":612,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.addedfriend.emit(this.account.id",{"_index":957,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["this.authinfo",{"_index":350,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authinfosubject$.asobservable",{"_index":347,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authinfosubject$.next(info",{"_index":386,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authinfosubject$.next(this.authinfo",{"_index":348,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authinfovalue",{"_index":345,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authtoken",{"_index":452,"title":{},"body":{"classes/AuthInfo.html":{}}}],["this.avatar",{"_index":39,"title":{},"body":{"classes/AccountDto.html":{}}}],["this.cache.get(key).expiry",{"_index":550,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.cache.has(key",{"_index":536,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.cache.set(key",{"_index":539,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.createform",{"_index":112,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["this.el.nativeelement.textcontent",{"_index":693,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["this.errorcode",{"_index":456,"title":{},"body":{"classes/AuthInfo.html":{}}}],["this.errorhandler.handleerror(error",{"_index":495,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.fb.group",{"_index":114,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["this.form",{"_index":113,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["this.formerorr$.next",{"_index":204,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["this.formerorr$.next(error.tostring",{"_index":208,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["this.geterrormessage(errors",{"_index":694,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["this.handleauthorizationresponse(response",{"_index":357,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.handlehttperror(error",{"_index":658,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.hasvalidcachedvalue(key",{"_index":524,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.http.patch(`${this.path}/password",{"_index":927,"title":{},"body":{"injectables/ManageService.html":{}}}],["this.http.patch(this.path",{"_index":926,"title":{},"body":{"injectables/ManageService.html":{}}}],["this.http.post(`${environment.apiurl}exception",{"_index":615,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.http.post(this.path",{"_index":351,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.put(this.path",{"_index":363,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.id",{"_index":37,"title":{},"body":{"classes/AccountDto.html":{}}}],["this.inflightobservables.delete(key",{"_index":548,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.inflightobservables.get(key",{"_index":527,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.inflightobservables.has(key",{"_index":526,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.inflightobservables.set(key",{"_index":529,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.injector.get(errorslogger",{"_index":669,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.injector.get(ngzone",{"_index":656,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.injector.get(router",{"_index":662,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.languages",{"_index":41,"title":{},"body":{"classes/AccountDto.html":{}}}],["this.lastonline",{"_index":43,"title":{},"body":{"classes/AccountDto.html":{}}}],["this.locationstrategy",{"_index":622,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.logerror(error",{"_index":659,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.login.emit(this.form.value",{"_index":126,"title":{},"body":{"components/AccountLoginFormComponent.html":{}}}],["this.manageservice",{"_index":1002,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.message",{"_index":458,"title":{},"body":{"classes/AuthInfo.html":{}}}],["this.nickname",{"_index":45,"title":{},"body":{"classes/AccountDto.html":{}}}],["this.notifyinflightobservers(key",{"_index":541,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.openeddialog.emit(this.account.id",{"_index":958,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["this.passworderorr$.next",{"_index":1004,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.passworderorr$.next(error.tostring",{"_index":1005,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.register.emit(this.form.value",{"_index":278,"title":{},"body":{"components/AccountRegisterFormComponent.html":{}}}],["this.registerdate",{"_index":47,"title":{},"body":{"classes/AccountDto.html":{}}}],["this.route.snapshot.queryparams.returnurl",{"_index":381,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.router.navigate(['/account/login",{"_index":434,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":383,"title":{},"body":{"injectables/AccountService.html":{},"guards/UnauthorizedGuard.html":{}}}],["this.router.navigatebyurl('/').then",{"_index":761,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["this.router.navigatebyurl(this.route.snapshot.queryparams.returnurl",{"_index":382,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.saveauthinfo(response",{"_index":380,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.saveauthinfo(undefined",{"_index":361,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.set(key",{"_index":531,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.showscroll",{"_index":851,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["this.statusinfo",{"_index":49,"title":{},"body":{"classes/AccountDto.html":{}}}],["this.update.emit(this.form.value",{"_index":1020,"title":{},"body":{"components/SettingsAccountPasswordFormComponent.html":{}}}],["this.updateaccount.emit(this.form.value",{"_index":1013,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["this.user",{"_index":454,"title":{},"body":{"classes/AuthInfo.html":{}}}],["throw",{"_index":354,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/IEnvironment.html":{},"injectables/ManageService.html":{}}}],["throwerror",{"_index":505,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["throwerror('requested",{"_index":532,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["toolbar",{"_index":159,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["top",{"_index":835,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top'},{'name",{"_index":157,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["top.component.html",{"_index":837,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top.component.scss",{"_index":836,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top.component.ts",{"_index":834,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"coverage.html":{}}}],["top.component.ts:11",{"_index":844,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top.component.ts:14",{"_index":842,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top.component.ts:22",{"_index":843,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top/main",{"_index":833,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"coverage.html":{}}}],["topromise",{"_index":210,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/ErrorsHandler.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["tort",{"_index":1266,"title":{},"body":{"license.html":{}}}],["transition",{"_index":870,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["tree",{"_index":62,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["true",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"components/MainScrollToTopComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":375,"title":{},"body":{"injectables/AccountService.html":{}}}],["ts",{"_index":479,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MainToolbarAvatarComponent.html":{}}}],["tslint:disable",{"_index":364,"title":{},"body":{"injectables/AccountService.html":{}}}],["tslint:disable:no",{"_index":510,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["tslint:enable:no",{"_index":514,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/IEnvironment.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedguard",{"_index":259,"title":{"guards/UnauthorizedGuard.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":323,"title":{},"body":{"injectables/AccountService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["unused",{"_index":367,"title":{},"body":{"injectables/AccountService.html":{}}}],["up",{"_index":281,"title":{},"body":{"components/AccountRegisterRootComponent.html":{}}}],["update",{"_index":1017,"title":{},"body":{"components/SettingsAccountPasswordFormComponent.html":{}}}],["updateaccount",{"_index":915,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["updateaccount(command",{"_index":918,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["updateaccountcommand",{"_index":919,"title":{"interfaces/UpdateAccountCommand.html":{}},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"interfaces/UpdateAccountCommand.html":{},"coverage.html":{}}}],["updatepassword",{"_index":916,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["updatepassword(command",{"_index":921,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["updatepasswordcommand",{"_index":922,"title":{"interfaces/UpdatePasswordCommand.html":{}},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["url",{"_index":606,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["use",{"_index":654,"title":{},"body":{"injectables/ErrorsHandler.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":590,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["usehash",{"_index":831,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["user",{"_index":279,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"classes/AuthInfo.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["useravatar",{"_index":889,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["userid",{"_index":890,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["usr/local",{"_index":1179,"title":{},"body":{"index.html":{}}}],["validationerrors",{"_index":688,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["validator",{"_index":276,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["validators",{"_index":105,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"changelog.html":{}}}],["validators.maxlength(20",{"_index":117,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["validators.maxlength(249",{"_index":124,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["validators.minlength(3",{"_index":116,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["validators.minlength(8",{"_index":123,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["validators.pattern(/^[^\\s].{1,18}[^\\s",{"_index":274,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["validators.pattern(/^[a",{"_index":118,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{}}}],["validators.required",{"_index":115,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["validators.ts",{"_index":592,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["validators.ts:4",{"_index":596,"title":{},"body":{"classes/CustomValidators.html":{}}}],["value",{"_index":197,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/FormControlError.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/SettingsAccountContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":139,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["variable",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1284,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendorimports",{"_index":263,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1160,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":103,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["viewencapsulation.none",{"_index":73,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["void",{"_index":93,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"injectables/ErrorsHandler.html":{},"components/MainScrollToTopComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["wall",{"_index":173,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["warranties",{"_index":1235,"title":{},"body":{"license.html":{}}}],["way",{"_index":1270,"title":{},"body":{"license.html":{}}}],["websocketpath",{"_index":732,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["welcome",{"_index":720,"title":{},"body":{"components/GeneralRootComponent.html":{}}}],["went",{"_index":771,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["we’ll",{"_index":653,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["whether",{"_index":1263,"title":{},"body":{"license.html":{}}}],["width",{"_index":130,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["window.location.pathname",{"_index":663,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["window.location.search",{"_index":664,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["window.pageyoffset",{"_index":848,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["window.requestanimationframe(smoothscroll",{"_index":852,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["window.scrollto(0",{"_index":853,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["window:scroll",{"_index":841,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["without",{"_index":1215,"title":{},"body":{"license.html":{}}}],["write",{"_index":964,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["wrong",{"_index":772,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["ws://localhost:5000/elite",{"_index":736,"title":{},"body":{"interfaces/IEnvironment.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":899,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["x.user.avatar",{"_index":902,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["yarn",{"_index":1175,"title":{},"body":{"index.html":{}}}],["yes",{"_index":26,"title":{},"body":{"classes/AccountDto.html":{},"classes/AuthInfo.html":{},"classes/CacheService.html":{}}}],["z",{"_index":874,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["z0",{"_index":120,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{}}}],["za",{"_index":119,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{}}}],["zone",{"_index":655,"title":{},"body":{"injectables/ErrorsHandler.html":{},"interfaces/IEnvironment.html":{}}}],["zone.js",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["zone.js/dist/zone",{"_index":752,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["zone.run",{"_index":657,"title":{},"body":{"injectables/ErrorsHandler.html":{},"interfaces/IEnvironment.html":{}}}],["zonedelegate.invoketask",{"_index":744,"title":{},"body":{"interfaces/IEnvironment.html":{}}}],["zoom",{"_index":235,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccountDto.html":{"url":"classes/AccountDto.html","title":"class - AccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/account.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                id\n                            \n                            \n                                languages\n                            \n                            \n                                lastOnline\n                            \n                            \n                                nickname\n                            \n                            \n                                registerDate\n                            \n                            \n                                statusInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto?: AccountDto)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interfaces/account.dto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                        AccountDto\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastOnline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nickname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statusInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AccountDto {\n  id: number;\n  avatar: string;\n  languages: string;\n  lastOnline: Date;\n  nickname: string;\n  registerDate: Date;\n  statusInfo: string;\n\n  constructor(dto?: AccountDto) {\n    if (dto) {\n      this.id = dto.id;\n      this.avatar = dto.avatar;\n      this.languages = dto.languages;\n      this.lastOnline = dto.lastOnline;\n      this.nickname = dto.nickname;\n      this.registerDate = dto.registerDate;\n      this.statusInfo = dto.statusInfo;\n    } else {\n      this.id = 0;\n      this.avatar = '';\n      this.languages = '';\n      this.lastOnline = new Date();\n      this.nickname = '';\n      this.registerDate = new Date();\n      this.statusInfo = '';\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountLoginFormComponent.html":{"url":"components/AccountLoginFormComponent.html","title":"component - AccountLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/account/components/account-login-form/account-login-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                account-login-form\n            \n\n            \n                styleUrls\n                ./account-login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        login\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthorizeAccountCommand } from '~/core/interfaces/authorize-account-command';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'account-login-form',\n  styleUrls: ['./account-login-form.component.scss'],\n  templateUrl: './account-login-form.component.html',\n})\nexport class AccountLoginFormComponent implements OnInit {\n  form!: FormGroup;\n\n  @Output() login = new EventEmitter();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.fb.group({\n      login: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[a-zA-Z0-9]+$/)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n    });\n  }\n\n  onSubmit(event: Event): void {\n    event.stopPropagation();\n    this.login.emit(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n            \n        \n      \n    \n    \n      \n        Submit\n      \n    \n  \n\n    \n\n    \n                \n                    ./account-login-form.component.scss\n                \n                .demo-full-width {\n  width: 100%;\n}\n\n.account-login-table {\n  margin: 0 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      Submit            '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountLoginRootComponent.html":{"url":"components/AccountLoginRootComponent.html","title":"component - AccountLoginRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountLoginRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/account/pages/account-login-root/account-login-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                account-login-root\n            \n\n            \n                styleUrls\n                ./account-login-root.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-login-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formErorr$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/pages/account-login-root/account-login-root.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(command: AuthorizeAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/pages/account-login-root/account-login-root.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                AuthorizeAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formErorr$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/account/pages/account-login-root/account-login-root.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthorizeAccountCommand } from '~/core/interfaces/authorize-account-command';\nimport { AccountService } from '~/core/services/account.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'account-login-root',\n  styleUrls: ['./account-login-root.component.scss'],\n  templateUrl: './account-login-root.component.html',\n})\nexport class AccountLoginRootComponent {\n  formErorr$ = new Subject();\n\n  constructor(private readonly accountService: AccountService) {}\n\n  login(command: AuthorizeAccountCommand): void {\n    this.formErorr$.next('');\n    this.accountService\n      .login(command)\n      .pipe(\n        catchError(error => {\n          this.formErorr$.next(error.toString());\n\n          return EMPTY;\n        }),\n      )\n      .toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign In\n  \n  \n    {{formErorr}}\n    \n  \n\n\n  Don't have an account?\n  Register\n\n\n    \n\n    \n                \n                    ./account-login-root.component.scss\n                \n                .account-login.mat-card {\n  margin: 2em auto;\n  max-width: 480px;\n  text-align: center;\n}\n\n.account-disclaimer {\n  text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign In        {{formErorr}}        Don\\'t have an account?  Register'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountLoginRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nMainErrorComponent->AccountModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nAccountModule -->\n\nMainRootComponent->AccountModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nAccountModule -->\n\nMainScrollToTopComponent->AccountModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nAccountModule -->\n\nMainToolbarAvatarComponent->AccountModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nAccountModule -->\n\nMainToolbarMailComponent->AccountModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nAccountModule -->\n\nMainToolbarNotificationsComponent->AccountModule\n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule\n\nAccountModule -->\n\nMpgpFormControlErrorModule->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/account/account.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountRoutingModule\n                        \n                        \n                            MpgpFormControlErrorModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { MpgpFormControlErrorModule } from '~/shared/directives';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { components } from './components';\nimport { containers } from './containers';\nimport { LogoutGuard } from './guards/logout.guard';\nimport { UnauthorizedGuard } from './guards/unauthorized.guard';\nimport { pages } from './pages';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatButtonModule, MatCardModule, MatFormFieldModule, MatInputModule];\n\nconst imports = [AccountRoutingModule, CommonModule, FormsModule, MpgpFormControlErrorModule, ReactiveFormsModule, ...vendorImports];\nconst providers = [LogoutGuard, UnauthorizedGuard];\n\n@NgModule({\n            declarations,\n            imports,\n            providers,\n          })\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountRegisterFormComponent.html":{"url":"components/AccountRegisterFormComponent.html","title":"component - AccountRegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountRegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/account/components/account-register-form/account-register-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                account-register-form\n            \n\n            \n                styleUrls\n                ./account-register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        register\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { RegisterAccountCommand } from '~/core/interfaces/register-account-command';\nimport { CustomValidators } from '~/shared/custom-validators';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'account-register-form',\n  styleUrls: ['./account-register-form.component.scss'],\n  templateUrl: './account-register-form.component.html',\n})\nexport class AccountRegisterFormComponent implements OnInit {\n  form!: FormGroup;\n\n  @Output() register = new EventEmitter();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.fb.group(\n      {\n        login: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[a-zA-Z0-9]+$/)]],\n        nickname: [null, [Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[^\\s].{1,18}[^\\s]$/)]],\n        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n        passwordRepeat: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n      },\n      { validator: CustomValidators.matchPassword },\n    );\n  }\n\n  onSubmit(event: Event): void {\n    event.stopPropagation();\n    this.register.emit(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n          Your account name\n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n          Your user name\n        \n      \n    \n    \n      \n        Submit\n      \n    \n  \n\n    \n\n    \n                \n                    ./account-register-form.component.scss\n                \n                .demo-full-width {\n  width: 100%;\n}\n\n.account-register-table {\n  margin: 0 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Your account name                                                                                                                                                                                  Your user name                                    Submit            '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountRegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountRegisterRootComponent.html":{"url":"components/AccountRegisterRootComponent.html","title":"component - AccountRegisterRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountRegisterRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/account/pages/account-register-root/account-register-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                account-register-root\n            \n\n            \n                styleUrls\n                ./account-register-root.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-register-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formErorr$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/pages/account-register-root/account-register-root.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(command: RegisterAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/pages/account-register-root/account-register-root.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formErorr$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/account/pages/account-register-root/account-register-root.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { RegisterAccountCommand } from '~/core/interfaces/register-account-command';\nimport { AccountService } from '~/core/services/account.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'account-register-root',\n  styleUrls: ['./account-register-root.component.scss'],\n  templateUrl: './account-register-root.component.html',\n})\nexport class AccountRegisterRootComponent {\n  formErorr$ = new Subject();\n\n  constructor(private readonly accountService: AccountService) {}\n\n  register(command: RegisterAccountCommand): void {\n    this.formErorr$.next('');\n    this.accountService\n      .register(command)\n      .pipe(\n        catchError(error => {\n          this.formErorr$.next(error.toString());\n\n          return EMPTY;\n        }),\n      )\n      .toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up\n  \n  \n    {{formErorr}}\n    \n  \n\n\n  Already have an account?\n  Log In\n\n\n    \n\n    \n                \n                    ./account-register-root.component.scss\n                \n                .account-register.mat-card {\n  margin: 2em auto;\n  max-width: 480px;\n  text-align: center;\n}\n\n.account-disclaimer {\n  text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up        {{formErorr}}        Already have an account?  Log In'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountRegisterRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountRoutingModule.html":{"url":"modules/AccountRoutingModule.html","title":"module - AccountRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/account/account-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LogoutGuard } from './guards/logout.guard';\nimport { UnauthorizedGuard } from './guards/unauthorized.guard';\nimport { AccountLoginRootComponent, AccountRegisterRootComponent } from './pages';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [UnauthorizedGuard],\n    children: [{ path: 'login', component: AccountLoginRootComponent }, { path: 'register', component: AccountRegisterRootComponent }],\n  },\n  { path: 'logout', canActivate: [LogoutGuard] },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class AccountRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authInfoSubject$\n                            \n                            \n                                    Private\n                                authInfoValue\n                            \n                            \n                                    Private\n                                    Readonly\n                                authInfoValue$\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                localStorageKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleAuthorizationResponse\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                saveAuthInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authInfo\n                                \n                                \n                                    authInfo$\n                                \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/account.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleAuthorizationResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthorizationResponse(response: AuthInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                AuthInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(command: AuthorizeAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                AuthorizeAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(command: RegisterAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthInfo(info: AuthInfo | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                AuthInfo | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            authInfoSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authInfoValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthInfo | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            authInfoValue$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            localStorageKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}account`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authInfo\n                    \n                \n\n                \n                    \n                        getauthInfo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/account.service.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authInfo$\n                    \n                \n\n                \n                    \n                        getauthInfo$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/account.service.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/account.service.ts:39\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { environment } from '~/env/environment';\n\nimport { AuthInfo } from '../interfaces/auth-info.dto';\nimport { AuthorizeAccountCommand } from '../interfaces/authorize-account-command';\nimport { RegisterAccountCommand } from '../interfaces/register-account-command';\n\n@Injectable()\nexport class AccountService {\n  private static readonly localStorageKey = 'auth';\n  private authInfoValue: AuthInfo | undefined;\n  private readonly authInfoSubject$ = new ReplaySubject();\n  private readonly authInfoValue$: Observable;\n  private readonly path = `${environment.apiUrl}account`;\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router\n  ) {\n    this.authInfoValue = JSON.parse(localStorage.getItem(AccountService.localStorageKey) as string);\n    this.authInfoValue$ = this.authInfoSubject$.asObservable();\n    this.authInfoSubject$.next(this.authInfo);\n  }\n\n  get authInfo(): AuthInfo | undefined {\n    return this.authInfoValue;\n  }\n\n  get authInfo$(): Observable {\n    return this.authInfoValue$;\n  }\n\n  get isLoggedIn(): boolean {\n    return this.authInfo != null;\n  }\n\n  login(command: AuthorizeAccountCommand): Observable {\n    return this.http.post(this.path, command).pipe(\n      catchError(_ => {\n        throw new Error('Invalid login or password');\n      }),\n      tap((response: any) => this.handleAuthorizationResponse(response)),\n    );\n  }\n\n  logout(): Observable {\n    return of(void 0).pipe(\n      tap(_ => {\n        this.saveAuthInfo(undefined);\n        localStorage.removeItem(AccountService.localStorageKey);\n      }),\n    );\n  }\n\n  register(command: RegisterAccountCommand): Observable {\n    return this.http.put(this.path, command).pipe(\n      catchError(error => {\n        // tslint:disable-next-line:no-unused-expression\n        if (error && error.value && error.value.status === 409) {\n          throw new Error('That login is taken. Try another.');\n        }\n        throw new Error('Invalid input.');\n      }),\n      tap(response => this.handleAuthorizationResponse(response)),\n    );\n  }\n\n  private handleAuthorizationResponse(response: AuthInfo): void {\n    // tslint:disable-next-line:no-unused-expression\n    if (!response.errorCode) {\n      this.saveAuthInfo(response);\n\n      if (this.route.snapshot.queryParams.returnUrl) {\n        this.router.navigateByUrl(this.route.snapshot.queryParams.returnUrl);\n      } else {\n        this.router.navigateByUrl('/');\n      }\n    }\n  }\n\n  private saveAuthInfo(info: AuthInfo | undefined): void {\n    localStorage.setItem(AccountService.localStorageKey, JSON.stringify(info));\n    this.authInfoValue = info;\n    this.authInfoSubject$.next(info);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app',\n  template: '',\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { CoreModule } from '~/core/core.module';\nimport { MainModule } from '~/main/main.module';\n\nimport { AppComponent } from './app.component';\n\nconst bootstrap = [AppComponent];\n\nconst declarations = [AppComponent];\n\nconst imports = [BrowserAnimationsModule, BrowserModule, CoreModule, HttpClientModule, LayoutModule, MainModule];\n\n@NgModule({\n  bootstrap,\n  declarations,\n  imports,\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getParagraphText(): Promise {\n    const selector = 'mat-toolbar-row > span';\n\n    return element(by.css(selector)).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/main/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/guards/auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/guards/auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '~/core/services/account.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private readonly accountService: AccountService, private readonly router: Router) {}\n\n  canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.accountService.isLoggedIn) {\n      return true;\n    }\n\n    this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url } });\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInfo.html":{"url":"classes/AuthInfo.html","title":"class - AuthInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/auth-info.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            HttpError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authToken\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(info?: AuthInfo)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interfaces/auth-info.dto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        AuthInfo\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/auth-info.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/auth-info.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/auth-info.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/auth-info.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountDto } from './account.dto';\nimport { HttpError } from './http-error.dto';\n\nexport class AuthInfo implements HttpError {\n  authToken: string;\n  user: AccountDto;\n  errorCode: number;\n  message: string;\n\n  constructor(info?: AuthInfo) {\n    if (info) {\n      this.authToken = info.authToken;\n      this.user = info.user;\n      this.errorCode = info.errorCode;\n      this.message = info.message;\n    } else {\n      this.authToken = '';\n      this.user = new AccountDto();\n      this.errorCode = 0;\n      this.message = '';\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, errorHandler: ErrorHandler)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/auth.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, delay, retryWhen, scan, tap } from 'rxjs/operators';\n\nimport { AccountService } from './account.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private readonly accountService: AccountService, private readonly errorHandler: ErrorHandler) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const authorizationHeader = {};\n    if (this.accountService.isLoggedIn) {\n      // @ts-ignore\n      const authToken = this.accountService.authInfo.authToken;\n      // @ts-ignore\n      authorizationHeader['Authorization'] = `Bearer ${authToken}`;\n    }\n\n    const newRequest = request.clone({\n      setHeaders: {\n        ...authorizationHeader,\n      },\n    });\n\n    return next.handle(newRequest).pipe(\n      retryWhen((err: any) =>\n        err.pipe(\n          tap((error: any) => {\n            if (error.status !== 503) {\n              throw error;\n            }\n          }),\n          scan((retryCount: any) => {\n            if (retryCount  {\n            this.errorHandler.handleError(error);\n            throw of(error);\n          }),\n        ),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorizeAccountCommand.html":{"url":"interfaces/AuthorizeAccountCommand.html","title":"interface - AuthorizeAccountCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthorizeAccountCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/authorize-account-command.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        login\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthorizeAccountCommand {\n  login: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheContent.html":{"url":"interfaces/CacheContent.html","title":"interface - CacheContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cache.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiry\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiry\n                                    \n                                \n                                \n                                    \n                                        expiry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, Subject, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\ninterface CacheContent {\n  expiry: number;\n  value: T;\n}\n\n// Non-injectable.\n// Do not provide this service to modules.\nexport class CacheService {\n  /* tslint:disable:no-any */\n  private readonly cache = new Map>();\n  private readonly inFlightObservables = new Map>();\n  /* tslint:enable:no-any */\n  public static readonly cacheTime = 300000;\n  private static instanceValue: CacheService;\n\n  public static get instance(): CacheService {\n    return CacheService.instanceValue || (CacheService.instanceValue = new CacheService());\n  }\n\n  public get(key: string, fallback?: Observable, cacheTime: number = CacheService.cacheTime): Observable {\n    if (this.hasValidCachedValue(key)) {\n      return of(this.cache.get(key).value) as Observable;\n    }\n\n    if (this.inFlightObservables.has(key)) {\n      return this.inFlightObservables.get(key) as Observable;\n    }\n\n    if (fallback && fallback instanceof Observable) {\n      this.inFlightObservables.set(key, new Subject());\n\n      return fallback.pipe(tap(value => this.set(key, value, cacheTime)));\n    }\n\n    return throwError('Requested key is not available in Cache');\n  }\n\n  public has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  private set(key: string, value: T, maxAge: number = CacheService.cacheTime): void {\n    this.cache.set(key, { expiry: Date.now() + maxAge, value });\n    this.notifyInFlightObservers(key, value);\n  }\n\n  private notifyInFlightObservers(key: string, value: T): void {\n    if (this.inFlightObservables.has(key)) {\n      const inFlight = this.inFlightObservables.get(key);\n      const observersCount = inFlight.observers.length;\n\n      if (observersCount) {\n        inFlight.next(value);\n      }\n\n      inFlight.complete();\n      this.inFlightObservables.delete(key);\n    }\n  }\n\n  private hasValidCachedValue(key: string): boolean {\n    if (this.cache.has(key)) {\n      if (this.cache.get(key).expiry  {\n    const descriptor = propertyDescriptor || Object.getOwnPropertyDescriptor(target, methodName);\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function newMethod(): any {\n      const args = Array.from(arguments);\n      const key = `${target.constructor.name}.${methodName}:${args.join(',')}`;\n      const result = originalMethod.apply(this, args);\n\n      return CacheService.instance.get(key, result, cacheTime);\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheService.html":{"url":"classes/CacheService.html","title":"class - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cache\n                            \n                            \n                                    Static\n                                    Readonly\n                                cacheTime\n                            \n                            \n                                    Private\n                                    Readonly\n                                inFlightObservables\n                            \n                            \n                                    Private\n                                    Static\n                                instanceValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                has\n                            \n                            \n                                    Private\n                                hasValidCachedValue\n                            \n                            \n                                    Private\n                                notifyInFlightObservers\n                            \n                            \n                                    Private\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    instance\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            cacheTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cache.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            inFlightObservables\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            instanceValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CacheService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cache.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string, fallback?: Observable, cacheTime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fallback\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    cacheTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        CacheService.cacheTime\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            has\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    has(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hasValidCachedValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasValidCachedValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            notifyInFlightObservers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyInFlightObservers(key: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:50\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: string, value: T, maxAge: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    maxAge\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        CacheService.cacheTime\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        instance\n                    \n                \n\n                \n                    \n                        getinstance()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/cache.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable, of, Subject, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\ninterface CacheContent {\n  expiry: number;\n  value: T;\n}\n\n// Non-injectable.\n// Do not provide this service to modules.\nexport class CacheService {\n  /* tslint:disable:no-any */\n  private readonly cache = new Map>();\n  private readonly inFlightObservables = new Map>();\n  /* tslint:enable:no-any */\n  public static readonly cacheTime = 300000;\n  private static instanceValue: CacheService;\n\n  public static get instance(): CacheService {\n    return CacheService.instanceValue || (CacheService.instanceValue = new CacheService());\n  }\n\n  public get(key: string, fallback?: Observable, cacheTime: number = CacheService.cacheTime): Observable {\n    if (this.hasValidCachedValue(key)) {\n      return of(this.cache.get(key).value) as Observable;\n    }\n\n    if (this.inFlightObservables.has(key)) {\n      return this.inFlightObservables.get(key) as Observable;\n    }\n\n    if (fallback && fallback instanceof Observable) {\n      this.inFlightObservables.set(key, new Subject());\n\n      return fallback.pipe(tap(value => this.set(key, value, cacheTime)));\n    }\n\n    return throwError('Requested key is not available in Cache');\n  }\n\n  public has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  private set(key: string, value: T, maxAge: number = CacheService.cacheTime): void {\n    this.cache.set(key, { expiry: Date.now() + maxAge, value });\n    this.notifyInFlightObservers(key, value);\n  }\n\n  private notifyInFlightObservers(key: string, value: T): void {\n    if (this.inFlightObservables.has(key)) {\n      const inFlight = this.inFlightObservables.get(key);\n      const observersCount = inFlight.observers.length;\n\n      if (observersCount) {\n        inFlight.next(value);\n      }\n\n      inFlight.complete();\n      this.inFlightObservables.delete(key);\n    }\n  }\n\n  private hasValidCachedValue(key: string): boolean {\n    if (this.cache.has(key)) {\n      if (this.cache.get(key).expiry  {\n    const descriptor = propertyDescriptor || Object.getOwnPropertyDescriptor(target, methodName);\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function newMethod(): any {\n      const args = Array.from(arguments);\n      const key = `${target.constructor.name}.${methodName}:${args.join(',')}`;\n      const result = originalMethod.apply(this, args);\n\n      return CacheService.instance.get(key, result, cacheTime);\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAccountService\n\nAccountService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAccountService->CoreModule\n\n\n\n\n\nErrorsLogger\n\nErrorsLogger\n\nCoreModule -->\n\nErrorsLogger->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                        \n                            ErrorsLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\n\nimport { AccountService } from './services/account.service';\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { ErrorsHandler } from './services/errors-handler.service';\nimport { ErrorsLogger } from './services/errors-logger.service';\n\nconst authInterceptor = {\n  multi: true,\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n};\n\nconst errorsHandler = {\n  provide: ErrorHandler,\n  useClass: ErrorsHandler,\n};\n\nconst providers = [AccountService, authInterceptor, errorsHandler, ErrorsLogger];\n\n@NgModule({\n  providers,\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomValidators.html":{"url":"classes/CustomValidators.html","title":"class - CustomValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/custom-validators.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                matchPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            matchPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchPassword(form: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/custom-validators.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     null | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class CustomValidators {\n  public static matchPassword(form: AbstractControl): null | undefined {\n    const password = form.get('password')!.value;\n    const passwordRepeat = form.get('passwordRepeat')!.value;\n\n    if (password !== passwordRepeat) {\n      form.get('passwordRepeat')!.setErrors({ matchPassword: true });\n    } else {\n      return null;\n    }\n\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorWithContext.html":{"url":"interfaces/ErrorWithContext.html","title":"interface - ErrorWithContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorWithContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/errors-logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appId\n                                \n                                \n                                        status\n                                \n                                \n                                        url\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         AccountDto | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountDto | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\n\nimport { catchError } from 'rxjs/operators';\nimport { AccountDto } from '~/core/interfaces/account.dto';\nimport { AccountService } from '~/core/services/account.service';\nimport { environment } from '~/env/environment';\n\nexport interface ErrorWithContext extends Error {\n  appId: string;\n  status: number | null;\n  url: string;\n  user: AccountDto | undefined;\n}\n\n@Injectable()\nexport class ErrorsLogger {\n  constructor(\n    private readonly accountService: AccountService,\n    private readonly http: HttpClient,\n    private readonly locationStrategy: LocationStrategy,\n  ) {}\n\n  logError(error: Error): Observable {\n    const errorWithContext = this.addContextInfo(error);\n    if (!environment.production) {\n      console.error({ error, errorWithContext });\n    }\n\n    return this.http.post(`${environment.apiUrl}exception`, errorWithContext).pipe(\n      catchError(err => {\n        console.error('Can not log error!', err);\n\n        return EMPTY;\n      }),\n    );\n  }\n\n  private addContextInfo(error: Error): ErrorWithContext {\n    const result: ErrorWithContext = error as ErrorWithContext;\n    const location = this.locationStrategy;\n\n    result.appId = environment.clientId;\n    result.message = error.message || error.toString();\n    result.url = location instanceof PathLocationStrategy ? location.path() : '';\n    result.user = this.accountService.authInfo && this.accountService.authInfo.user;\n    result.stack = error.stack;\n    result.status = (error as HttpErrorResponse).status || null;\n\n    return result;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsHandler.html":{"url":"injectables/ErrorsHandler.html","title":"injectable - ErrorsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/errors-handler.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                    Private\n                                handleHttpError\n                            \n                            \n                                    Private\n                                logError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/errors-handler.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-handler.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                Error | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-handler.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-handler.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable, Injector, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nimport { environment } from '~/env/environment';\n\nimport { ErrorsLogger } from './errors-logger.service';\n\n@Injectable()\nexport class ErrorsHandler implements ErrorHandler {\n  // Because the ErrorsHandler is created before the providers,\n  // We’ll have to use the Injector to get them.\n  constructor(private readonly injector: Injector) {}\n\n  handleError(error: Error | HttpErrorResponse): void {\n    const zone = this.injector.get(NgZone);\n    zone.run(() => {\n      if (error instanceof HttpErrorResponse) {\n        this.handleHttpError(error);\n      } else {\n        this.logError(error);\n      }\n    });\n  }\n\n  private handleHttpError(error: HttpErrorResponse): void {\n    if (error.status === 401) {\n      localStorage.removeItem('auth');\n      const router = this.injector.get(Router);\n      const returnUrl = window.location.pathname + window.location.search;\n      router.navigateByUrl('/account/login', { queryParams: { returnUrl } });\n    } else if (error.status === 403 || error.status >= 500) {\n      this.logError(error);\n    }\n  }\n\n  private logError(error: Error): void {\n    const logger = this.injector.get(ErrorsLogger);\n    logger\n      .logError(error)\n      .pipe(\n        tap(_ => {\n          setTimeout(() => document.body.click(), 0);\n          if (environment.production) {\n            const router = this.injector.get(Router);\n            router.navigateByUrl('/error');\n          }\n        }),\n      )\n      .toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsLogger.html":{"url":"injectables/ErrorsLogger.html","title":"injectable - ErrorsLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/errors-logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addContextInfo\n                            \n                            \n                                logError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, http: HttpClient, locationStrategy: LocationStrategy)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/errors-logger.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locationStrategy\n                                                  \n                                                        \n                                                                        LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addContextInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addContextInfo(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-logger.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorWithContext\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \nlogError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-logger.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\n\nimport { catchError } from 'rxjs/operators';\nimport { AccountDto } from '~/core/interfaces/account.dto';\nimport { AccountService } from '~/core/services/account.service';\nimport { environment } from '~/env/environment';\n\nexport interface ErrorWithContext extends Error {\n  appId: string;\n  status: number | null;\n  url: string;\n  user: AccountDto | undefined;\n}\n\n@Injectable()\nexport class ErrorsLogger {\n  constructor(\n    private readonly accountService: AccountService,\n    private readonly http: HttpClient,\n    private readonly locationStrategy: LocationStrategy,\n  ) {}\n\n  logError(error: Error): Observable {\n    const errorWithContext = this.addContextInfo(error);\n    if (!environment.production) {\n      console.error({ error, errorWithContext });\n    }\n\n    return this.http.post(`${environment.apiUrl}exception`, errorWithContext).pipe(\n      catchError(err => {\n        console.error('Can not log error!', err);\n\n        return EMPTY;\n      }),\n    );\n  }\n\n  private addContextInfo(error: Error): ErrorWithContext {\n    const result: ErrorWithContext = error as ErrorWithContext;\n    const location = this.locationStrategy;\n\n    result.appId = environment.clientId;\n    result.message = error.message || error.toString();\n    result.url = location instanceof PathLocationStrategy ? location.path() : '';\n    result.user = this.accountService.authInfo && this.accountService.authInfo.user;\n    result.stack = error.stack;\n    result.status = (error as HttpErrorResponse).status || null;\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormControlError.html":{"url":"interfaces/FormControlError.html","title":"interface - FormControlError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormControlError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        matchPassword\n                                \n                                \n                                            Optional\n                                        maxlength\n                                \n                                \n                                            Optional\n                                        minlength\n                                \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        matchPassword\n                                    \n                                \n                                \n                                    \n                                        matchPassword:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxlength\n                                    \n                                \n                                \n                                    \n                                        maxlength:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minlength\n                                    \n                                \n                                \n                                    \n                                        minlength:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, ElementRef, Input } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\ninterface FormControlError {\n  matchPassword?: boolean;\n  minlength?: { requiredLength: number };\n  maxlength?: { requiredLength: number };\n  pattern?: { requiredPattern: string };\n  required?: {};\n}\n\n@Directive({\n  selector: '[MpgpFormControlError]',\n})\nexport class MpgpFormControlErrorDirective {\n  constructor(private readonly el: ElementRef) {}\n\n  @Input()\n  set MpgpFormControlError(errors: ValidationErrors | FormControlError | null) {\n    if (!errors) {\n      return;\n    }\n\n    this.el.nativeElement.textContent = this.getErrorMessage(errors);\n  }\n\n  private getErrorMessage(errors: FormControlError): string {\n    if (errors.required) {\n      return 'Is Required';\n    } else if (errors.minlength) {\n      return `Minimum Length is ${errors.minlength.requiredLength}`;\n    } else if (errors.maxlength) {\n      return `Maximum Length is ${errors.maxlength.requiredLength}`;\n    } else if (errors.pattern) {\n      return `Pattern must be ${errors.pattern.requiredPattern}`;\n    } else if (errors.matchPassword) {\n      return 'Password did not match';\n    } else {\n      return 'Invalid value';\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneralModule.html":{"url":"modules/GeneralModule.html","title":"module - GeneralModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneralModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneralModule\n\n\n\ncluster_GeneralModule_declarations\n\n\n\ncluster_GeneralModule_imports\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nGeneralModule\n\nGeneralModule\n\nGeneralModule -->\n\nMainErrorComponent->GeneralModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nGeneralModule -->\n\nMainRootComponent->GeneralModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nGeneralModule -->\n\nMainScrollToTopComponent->GeneralModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nGeneralModule -->\n\nMainToolbarAvatarComponent->GeneralModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nGeneralModule -->\n\nMainToolbarMailComponent->GeneralModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nGeneralModule -->\n\nMainToolbarNotificationsComponent->GeneralModule\n\n\n\n\n\nGeneralRoutingModule\n\nGeneralRoutingModule\n\nGeneralModule -->\n\nGeneralRoutingModule->GeneralModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/general/general.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneralRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { components } from './components';\nimport { containers } from './containers';\nimport { GeneralRoutingModule } from './general-routing.module';\nimport { pages } from './pages';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatCardModule];\n\nconst imports = [GeneralRoutingModule, ...vendorImports];\n\n@NgModule({\n  declarations,\n  imports,\n})\nexport class GeneralModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeneralRootComponent.html":{"url":"components/GeneralRootComponent.html","title":"component - GeneralRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeneralRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/general/pages/general-root/general-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                general-root\n            \n\n\n\n\n            \n                templateUrl\n                ./general-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'general-root',\n  templateUrl: './general-root.component.html',\n})\nexport class GeneralRootComponent {}\n\n    \n\n    \n        \n  \n    Multiplayer Game Platform\n    Welcome\n  \n  \n    Welcome to MPGP BrowserClient!\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Multiplayer Game Platform    Welcome        Welcome to MPGP BrowserClient!  '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'GeneralRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneralRoutingModule.html":{"url":"modules/GeneralRoutingModule.html","title":"module - GeneralRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneralRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/general/general-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { GeneralRootComponent } from './pages';\n\nconst routes: Routes = [{ path: '', component: GeneralRootComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class GeneralRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpError.html":{"url":"interfaces/HttpError.html","title":"interface - HttpError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/http-error.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errorCode\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                    \n                                \n                                \n                                    \n                                        errorCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpError {\n  errorCode: number;\n  message: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEnvironment.html":{"url":"interfaces/IEnvironment.html","title":"interface - IEnvironment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/environment.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiUrl\n                                \n                                \n                                        clientId\n                                \n                                \n                                        imageUrl\n                                \n                                \n                                        production\n                                \n                                \n                                        websocketPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        websocketPath\n                                    \n                                \n                                \n                                    \n                                        websocketPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IEnvironment {\n  apiUrl: string;\n  clientId: string;\n  imageUrl: string;\n  production: boolean;\n  websocketPath: string;\n}\n\nexport const environment: IEnvironment = {\n  apiUrl: 'http://localhost:5000/api/',\n  clientId: 'mpgpclient',\n  imageUrl: 'http://localhost:5000/images/avatars/',\n  production: false,\n  websocketPath: 'ws://localhost:5000/elite-crew',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n/*  import 'zone.js/dist/zone-error';  // Included with Angular CLI. */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LogoutGuard.html":{"url":"guards/LogoutGuard.html","title":"guard - LogoutGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LogoutGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/features/account/guards/logout.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/guards/logout.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(_: ActivatedRouteSnapshot, __: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/guards/logout.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    __\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '~/core/services/account.service';\n\n@Injectable()\nexport class LogoutGuard implements CanActivate {\n  constructor(private readonly accountService: AccountService, private readonly router: Router) {}\n\n  canActivate(_: ActivatedRouteSnapshot, __: RouterStateSnapshot): boolean {\n    if (this.accountService.isLoggedIn) {\n      this.accountService.logout().toPromise();\n    }\n\n    this.router.navigateByUrl('/').then(() => location.reload());\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainErrorComponent.html":{"url":"components/MainErrorComponent.html","title":"component - MainErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/pages/main-error/main-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-error\n            \n\n            \n                styleUrls\n                ./main-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-error',\n  styleUrls: ['./main-error.component.scss'],\n  templateUrl: './main-error.component.html',\n})\nexport class MainErrorComponent {}\n\n    \n\n    \n        \n  Oops!\n  Sorry Something Went Wrong!\n  \n    home Go To Home\n  \n  \n    mail Contact Support\n  \n\n    \n\n    \n                \n                    ./main-error.component.scss\n                \n                .main-error {\n  text-align: center;\n\n  .mat-raised-button {\n    margin: 0 4px 0 8px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Oops!  Sorry Something Went Wrong!      home Go To Home        mail Contact Support  '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_exports\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainErrorComponent->MainModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nMainModule -->\n\nMainRootComponent->MainModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nMainModule -->\n\nMainScrollToTopComponent->MainModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nMainModule -->\n\nMainToolbarAvatarComponent->MainModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nMainModule -->\n\nMainToolbarMailComponent->MainModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nMainModule -->\n\nMainToolbarNotificationsComponent->MainModule\n\n\n\n\n\nMainRootComponent \n\nMainRootComponent \n\nMainRootComponent  -->\n\nMainModule->MainRootComponent \n\n\n\n\n\nMainRoutingModule\n\nMainRoutingModule\n\nMainModule -->\n\nMainRoutingModule->MainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/main/main.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainRootComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { components } from './components';\nimport { containers } from './containers';\nimport { AuthGuard } from './guards/auth.guard';\nimport { MainRoutingModule } from './main-routing.module';\nimport { MainRootComponent, pages } from './pages';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatBadgeModule, MatButtonModule, MatIconModule, MatListModule, MatMenuModule, MatToolbarModule];\n\nconst imports = [CommonModule, MainRoutingModule, ...vendorImports];\n\nconst exports = [MainRootComponent];\n\nconst providers = [AuthGuard];\n\n@NgModule({\n  declarations,\n  imports,\n  providers,\n  exports,\n})\nexport class MainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainRootComponent.html":{"url":"components/MainRootComponent.html","title":"component - MainRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/pages/main-root/main-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-root\n            \n\n            \n                styleUrls\n                ./main-root.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accountService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/pages/main-root/main-root.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accountService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main/pages/main-root/main-root.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { AccountService } from '~/core/services/account.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-root',\n  styleUrls: ['./main-root.component.scss'],\n  templateUrl: './main-root.component.html',\n})\nexport class MainRootComponent {\n  constructor(public accountService: AccountService) {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    MPGP\n    \n    \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./main-root.component.scss\n                \n                .toolbar {\n  &-button {\n    color: #fff;\n    display: inline-block;\n    margin: 5px 0 0;\n    padding: 0 14px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  &-spacer {\n    flex: 1 1 auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    MPGP                                '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainRoutingModule.html":{"url":"modules/MainRoutingModule.html","title":"module - MainRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MainRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/main/main-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { MainErrorComponent } from './pages';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', pathMatch: 'full', redirectTo: 'general' },\n      { path: 'general', loadChildren: () => \"import('../features/general/general.module').then(m => m.GeneralModule)\" },\n      { path: 'profile/:id', loadChildren: () => \"import('../features/profile/profile.module').then(m => m.ProfileModule)\" },\n      { path: 'settings', loadChildren: () => \"import('../features/settings/settings.module').then(m => m.SettingsModule)\" },\n    ],\n  },\n  { path: 'error', component: MainErrorComponent },\n  { path: 'account', loadChildren: () => \"import('../features/account/account.module').then(m => m.AccountModule)\" },\n  { path: '**', redirectTo: 'error' },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n})\nexport class MainRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainScrollToTopComponent.html":{"url":"components/MainScrollToTopComponent.html","title":"component - MainScrollToTopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainScrollToTopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-scroll-to-top\n            \n\n            \n                styleUrls\n                ./main-scroll-to-top.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-scroll-to-top.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToTop\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts:14\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollToTop\n                        \n                        \n                    \n                \n            \n            \n                \nscrollToTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showScroll\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostListener, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-scroll-to-top',\n  styleUrls: ['./main-scroll-to-top.component.scss'],\n  templateUrl: './main-scroll-to-top.component.html',\n})\nexport class MainScrollToTopComponent {\n  showScroll = false;\n\n  @HostListener('window:scroll', [])\n  onWindowScroll(): void {\n    if (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop > 100) {\n      this.showScroll = true;\n    } else if (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop  0) {\n        window.requestAnimationFrame(smoothscroll);\n        window.scrollTo(0, currentScroll - currentScroll / 5);\n      }\n    })();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./main-scroll-to-top.component.scss\n                \n                .scroll-to-top {\n  background-color: #ccc;\n  border-radius: 10px;\n  bottom: 0;\n  cursor: pointer;\n  height: 45px;\n  opacity: 0;\n  position: fixed;\n  right: 0;\n  transition: opacity 0.5s ease-in-out, opacity 0.2s ease-in-out, bottom 0.2s ease-in-out;\n  width: 45px;\n  z-index: 300;\n\n  &:hover {\n    background-color: #999;\n  }\n\n  &.show-scroll {\n    bottom: 15px;\n    opacity: 1;\n    right: 15px;\n  }\n\n  &__icon {\n    fill: #fff;\n    height: 16px;\n    left: 15px;\n    position: absolute;\n    top: 15px;\n    width: 16px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainScrollToTopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarAvatarComponent.html":{"url":"components/MainToolbarAvatarComponent.html","title":"component - MainToolbarAvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarAvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-toolbar-avatar\n            \n\n            \n                styleUrls\n                ./main-toolbar-avatar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-toolbar-avatar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userAvatar$\n                                \n                                \n                                    userId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userAvatar$\n                    \n                \n\n                \n                    \n                        getuserAvatar$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AccountService } from '~/core/services/account.service';\nimport { environment } from '~/env/environment';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-toolbar-avatar',\n  styleUrls: ['./main-toolbar-avatar.component.scss'],\n  templateUrl: './main-toolbar-avatar.component.html',\n})\nexport class MainToolbarAvatarComponent {\n  constructor(private readonly accountService: AccountService) { }\n\n  get userAvatar$(): Observable {\n    return this.accountService.authInfo$.pipe(\n      filter((x: any) => !!x),\n      map((x: any) => environment.imageUrl + x.user.avatar),\n    );\n  }\n\n  get userId(): number {\n    // @ts-ignore\n    return this.accountService.authInfo.user.id;\n  }\n}\n\n    \n\n    \n        \n  \n  arrow_drop_down\n\n\n  My Profile\n  Settings\n  Logout\n\n    \n\n    \n                \n                    ./main-toolbar-avatar.component.scss\n                \n                .toolbar-avatar {\n  border-radius: 25px;\n  height: 25px;\n  width: 25px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    arrow_drop_down  My Profile  Settings  Logout'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarAvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarMailComponent.html":{"url":"components/MainToolbarMailComponent.html","title":"component - MainToolbarMailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarMailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/containers/main-toolbar-mail/main-toolbar-mail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-toolbar-mail\n            \n\n\n\n\n            \n                templateUrl\n                ./main-toolbar-mail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-toolbar-mail',\n  templateUrl: './main-toolbar-mail.component.html',\n})\nexport class MainToolbarMailComponent {}\n\n    \n\n    \n        \n  mail\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  mail'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarMailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarNotificationsComponent.html":{"url":"components/MainToolbarNotificationsComponent.html","title":"component - MainToolbarNotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarNotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/containers/main-toolbar-notifications/main-toolbar-notifications.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-toolbar-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./main-toolbar-notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-toolbar-notifications',\n  templateUrl: './main-toolbar-notifications.component.html',\n})\nexport class MainToolbarNotificationsComponent {}\n\n    \n\n    \n        \n  notifications\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  notifications'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarNotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManageService.html":{"url":"injectables/ManageService.html","title":"injectable - ManageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ManageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/settings/services/manage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateAccount\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/services/manage.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAccount(command: UpdateAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/services/manage.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePassword\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePassword(command: UpdatePasswordCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/services/manage.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdatePasswordCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}manage`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/services/manage.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { UpdateAccountCommand } from '~/core/interfaces/update-account-command';\nimport { UpdatePasswordCommand } from '~/core/interfaces/update-password-command';\nimport { environment } from '~/env/environment';\n\n@Injectable()\nexport class ManageService {\n  private readonly path = `${environment.apiUrl}manage`;\n\n  constructor(private readonly http: HttpClient) {}\n\n  updateAccount(command: UpdateAccountCommand): Observable {\n    return this.http.patch(this.path, command).pipe(\n      catchError(_ => {\n        throw new Error('Invalid data');\n      }),\n    );\n  }\n\n  updatePassword(command: UpdatePasswordCommand): Observable {\n    return this.http.patch(`${this.path}/password`, command).pipe(\n      catchError(_ => {\n        console.error(_);\n        throw new Error('Invalid data');\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MpgpFormControlErrorDirective.html":{"url":"directives/MpgpFormControlErrorDirective.html","title":"directive - MpgpFormControlErrorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MpgpFormControlErrorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [MpgpFormControlError]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getErrorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                MpgpFormControlError\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    MpgpFormControlError\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        MpgpFormControlError\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrorMessage(errors: FormControlError)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                FormControlError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        MpgpFormControlError\n                    \n                \n\n\n                \n                    \n                        setMpgpFormControlError(errors)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            errors\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\ninterface FormControlError {\n  matchPassword?: boolean;\n  minlength?: { requiredLength: number };\n  maxlength?: { requiredLength: number };\n  pattern?: { requiredPattern: string };\n  required?: {};\n}\n\n@Directive({\n  selector: '[MpgpFormControlError]',\n})\nexport class MpgpFormControlErrorDirective {\n  constructor(private readonly el: ElementRef) {}\n\n  @Input()\n  set MpgpFormControlError(errors: ValidationErrors | FormControlError | null) {\n    if (!errors) {\n      return;\n    }\n\n    this.el.nativeElement.textContent = this.getErrorMessage(errors);\n  }\n\n  private getErrorMessage(errors: FormControlError): string {\n    if (errors.required) {\n      return 'Is Required';\n    } else if (errors.minlength) {\n      return `Minimum Length is ${errors.minlength.requiredLength}`;\n    } else if (errors.maxlength) {\n      return `Maximum Length is ${errors.maxlength.requiredLength}`;\n    } else if (errors.pattern) {\n      return `Pattern must be ${errors.pattern.requiredPattern}`;\n    } else if (errors.matchPassword) {\n      return 'Password did not match';\n    } else {\n      return 'Invalid value';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MpgpFormControlErrorModule.html":{"url":"modules/MpgpFormControlErrorModule.html","title":"module - MpgpFormControlErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    MpgpFormControlErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MpgpFormControlErrorModule\n\n\n\ncluster_MpgpFormControlErrorModule_exports\n\n\n\ncluster_MpgpFormControlErrorModule_declarations\n\n\n\n\nMpgpFormControlErrorDirective\n\nMpgpFormControlErrorDirective\n\n\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule -->\n\nMpgpFormControlErrorDirective->MpgpFormControlErrorModule\n\n\n\n\n\nMpgpFormControlErrorDirective \n\nMpgpFormControlErrorDirective \n\nMpgpFormControlErrorDirective  -->\n\nMpgpFormControlErrorModule->MpgpFormControlErrorDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/directives/mpgp-formcontrol-error/index.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MpgpFormControlErrorDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MpgpFormControlErrorDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MpgpFormControlErrorDirective } from './mpgp-formcontrol-error.directive';\n\n@NgModule({\n  declarations: [MpgpFormControlErrorDirective],\n  exports: [MpgpFormControlErrorDirective],\n  imports: [CommonModule],\n})\nexport class MpgpFormControlErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileCardComponent.html":{"url":"components/ProfileCardComponent.html","title":"component - ProfileCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/components/profile-card/profile-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-card\n            \n\n            \n                styleUrls\n                ./profile-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addedFriend\n                            \n                            \n                                openedDialog\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userAvatar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addedFriend\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedDialog\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFriend\n                        \n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userAvatar\n                    \n                \n\n                \n                    \n                        getuserAvatar()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { AccountDto } from '~/core/interfaces/account.dto';\nimport { environment } from '~/env/environment';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'profile-card',\n  styleUrls: ['./profile-card.component.scss'],\n  templateUrl: './profile-card.component.html',\n})\nexport class ProfileCardComponent {\n  @Input() account!: AccountDto;\n  @Output() addedFriend: EventEmitter = new EventEmitter();\n  @Output() openedDialog: EventEmitter = new EventEmitter();\n\n  get userAvatar(): string {\n    return environment.imageUrl + this.account.avatar;\n  }\n\n  addFriend(): void {\n    this.addedFriend.emit(this.account.id);\n  }\n\n  openDialog(): void {\n    this.openedDialog.emit(this.account.id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{account.nickname}}\n    {{account.languages}}\n  \n  \n  \n    {{account.statusInfo}}\n  \n  \n    Add to friends\n    Write message\n  \n\n    \n\n    \n                \n                    ./profile-card.component.scss\n                \n                .profile {\n  &-avatar {\n    border-radius: 50%;\n    height: 100%;\n    width: 100%;\n  }\n\n  &-card {\n    max-width: 400px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{account.nickname}}    {{account.languages}}          {{account.statusInfo}}        Add to friends    Write message  '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileCardContainerComponent.html":{"url":"components/ProfileCardContainerComponent.html","title":"component - ProfileCardContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileCardContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-card-container\n            \n\n\n\n\n            \n                templateUrl\n                ./profile-card-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    account\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFriend\n                        \n                        \n                    \n                \n            \n            \n                \naddFriend(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n\n                \n                    \n                        getaccount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { AccountDto } from '~/core/interfaces/account.dto';\nimport { AccountService } from '~/core/services/account.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'profile-card-container',\n  templateUrl: './profile-card-container.component.html',\n})\nexport class ProfileCardContainerComponent {\n  constructor(private readonly accountService: AccountService) { }\n\n  get account(): AccountDto {\n    return this.accountService.authInfo!.user;\n  }\n\n  addFriend(id: number): void {\n    console.error('TODO: ', id);\n  }\n\n  openDialog(id: number): void {\n    console.error('TODO: ', id);\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileCardContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nMainErrorComponent->ProfileModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nProfileModule -->\n\nMainRootComponent->ProfileModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nProfileModule -->\n\nMainScrollToTopComponent->ProfileModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nProfileModule -->\n\nMainToolbarAvatarComponent->ProfileModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nProfileModule -->\n\nMainToolbarMailComponent->ProfileModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nProfileModule -->\n\nMainToolbarNotificationsComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { components } from './components';\nimport { containers } from './containers';\nimport { pages } from './pages';\nimport { ProfileRoutingModule } from './profile-routing.module';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatButtonModule, MatCardModule];\n\nconst imports = [CommonModule, ProfileRoutingModule, ...vendorImports];\n\n@NgModule({\n  declarations,\n  imports,\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileRootComponent.html":{"url":"components/ProfileRootComponent.html","title":"component - ProfileRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/pages/profile-root/profile-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-root\n            \n\n\n\n\n            \n                templateUrl\n                ./profile-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'profile-root',\n  templateUrl: './profile-root.component.html',\n})\nexport class ProfileRootComponent {}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileRoutingModule.html":{"url":"modules/ProfileRoutingModule.html","title":"module - ProfileRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/profile/profile-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ProfileRootComponent } from './pages';\n\nconst routes: Routes = [{ path: '', component: ProfileRootComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class ProfileRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileWallContainerComponent.html":{"url":"components/ProfileWallContainerComponent.html","title":"component - ProfileWallContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileWallContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/containers/profile-wall-container/profile-wall-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-wall-container\n            \n\n\n\n\n            \n                templateUrl\n                ./profile-wall-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'profile-wall-container',\n  templateUrl: './profile-wall-container.component.html',\n})\nexport class ProfileWallContainerComponent {\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileWallContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterAccountCommand.html":{"url":"interfaces/RegisterAccountCommand.html","title":"interface - RegisterAccountCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterAccountCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/register-account-command.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        avatar\n                                \n                                \n                                        languages\n                                \n                                \n                                        login\n                                \n                                \n                                        nickname\n                                \n                                \n                                        password\n                                \n                                \n                                        passwordRepeat\n                                \n                                \n                                        statusInfo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languages\n                                    \n                                \n                                \n                                    \n                                        languages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordRepeat\n                                    \n                                \n                                \n                                    \n                                        passwordRepeat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusInfo\n                                    \n                                \n                                \n                                    \n                                        statusInfo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterAccountCommand {\n  avatar: string;\n  languages: string;\n  login: string;\n  nickname: string;\n  password: string;\n  passwordRepeat: string;\n  statusInfo: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountContainerComponent.html":{"url":"components/SettingsAccountContainerComponent.html","title":"component - SettingsAccountContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsAccountContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-account-container\n            \n\n\n\n\n            \n                templateUrl\n                ./settings-account-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountErorr$\n                            \n                            \n                                passwordErorr$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateAccount\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(manageService: ManageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manageService\n                                                  \n                                                        \n                                                                        ManageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAccount(command: UpdateAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePassword\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePassword(command: UpdatePasswordCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdatePasswordCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountErorr$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordErorr$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { UpdateAccountCommand } from '~/core/interfaces/update-account-command';\nimport { UpdatePasswordCommand } from '~/core/interfaces/update-password-command';\n\nimport { ManageService } from '../../services';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'settings-account-container',\n  templateUrl: './settings-account-container.component.html',\n})\nexport class SettingsAccountContainerComponent {\n  accountErorr$ = new Subject();\n  passwordErorr$ = new Subject();\n\n  constructor(private readonly manageService: ManageService) {}\n\n  updateAccount(command: UpdateAccountCommand): void {\n    this.accountErorr$.next('');\n    this.manageService\n      .updateAccount(command)\n      .pipe(\n        catchError(error => {\n          this.accountErorr$.next(error.toString());\n\n          return EMPTY;\n        }),\n      )\n      .toPromise();\n  }\n\n  updatePassword(command: UpdatePasswordCommand): void {\n    this.passwordErorr$.next('');\n    this.manageService\n      .updatePassword(command)\n      .pipe(\n        catchError(error => {\n          this.passwordErorr$.next(error.toString());\n\n          return EMPTY;\n        }),\n      )\n      .toPromise();\n  }\n}\n\n    \n\n    \n        Profile Information\n{{accountErorr}}\n\n\nChange Password\n{{passwordErorr}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Profile Information{{accountErorr}}Change Password{{passwordErorr}}'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountDataFormComponent.html":{"url":"components/SettingsAccountDataFormComponent.html","title":"component - SettingsAccountDataFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsAccountDataFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-account-data-form\n            \n\n            \n                styleUrls\n                ./settings-account-data-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account-data-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateAccount\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateAccount\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { RegisterAccountCommand } from '~/core/interfaces/register-account-command';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'settings-account-data-form',\n  styleUrls: ['./settings-account-data-form.component.scss'],\n  templateUrl: './settings-account-data-form.component.html',\n})\nexport class SettingsAccountDataFormComponent implements OnInit {\n  form!: FormGroup;\n\n  @Output() updateAccount = new EventEmitter();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.fb.group({\n      avatar: ['', [Validators.required, Validators.maxLength(249)]],\n      languages: ['', [Validators.required, Validators.maxLength(249)]],\n      nickname: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[^\\s].{1,18}[^\\s]$/)]],\n      statusInfo: ['', [Validators.required, Validators.maxLength(249)]],\n    });\n  }\n\n  onSubmit(event: Event): void {\n    event.stopPropagation();\n    this.updateAccount.emit(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n          Your user name\n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n          For example: English, Deutsch\n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        Submit\n      \n    \n  \n\n    \n\n    \n                \n                    ./settings-account-data-form.component.scss\n                \n                .demo-full-width {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Your user name                                                                                                                          For example: English, Deutsch                                                                                            Submit            '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountDataFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountPasswordFormComponent.html":{"url":"components/SettingsAccountPasswordFormComponent.html","title":"component - SettingsAccountPasswordFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsAccountPasswordFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-account-password-form\n            \n\n            \n                styleUrls\n                ./settings-account-password-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account-password-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { UpdatePasswordCommand } from '~/core/interfaces/update-password-command';\nimport { CustomValidators } from '~/shared/custom-validators';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'settings-account-password-form',\n  styleUrls: ['./settings-account-password-form.component.scss'],\n  templateUrl: './settings-account-password-form.component.html',\n})\nexport class SettingsAccountPasswordFormComponent implements OnInit {\n  form!: FormGroup;\n\n  @Output() update = new EventEmitter();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n        passwordRepeat: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n      },\n      { validator: CustomValidators.matchPassword },\n    );\n  }\n\n  onSubmit(event: Event): void {\n    event.stopPropagation();\n    this.update.emit(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        Submit\n      \n    \n  \n\n    \n\n    \n                \n                    ./settings-account-password-form.component.scss\n                \n                .demo-full-width {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                            Submit            '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountPasswordFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainErrorComponent->SettingsModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nSettingsModule -->\n\nMainRootComponent->SettingsModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nSettingsModule -->\n\nMainScrollToTopComponent->SettingsModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nSettingsModule -->\n\nMainToolbarAvatarComponent->SettingsModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nSettingsModule -->\n\nMainToolbarMailComponent->SettingsModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nSettingsModule -->\n\nMainToolbarNotificationsComponent->SettingsModule\n\n\n\n\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule\n\nSettingsModule -->\n\nMpgpFormControlErrorModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nManageService\n\nManageService\n\nSettingsModule -->\n\nManageService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ManageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MpgpFormControlErrorModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { MpgpFormControlErrorModule } from '~/shared/directives';\n\nimport { components } from './components';\nimport { containers } from './containers';\nimport { pages } from './pages';\nimport { services } from './services/';\nimport { SettingsRoutingModule } from './settings-routing.module';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatButtonModule, MatFormFieldModule, MatInputModule, MatTabsModule];\n\nconst imports = [CommonModule, FormsModule, MpgpFormControlErrorModule, ReactiveFormsModule, SettingsRoutingModule, ...vendorImports];\n\nconst providers = [...services];\n\n@NgModule({\n  declarations,\n  imports,\n  providers,\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsRootComponent.html":{"url":"components/SettingsRootComponent.html","title":"component - SettingsRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/pages/settings-root/settings-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-root\n            \n\n\n\n\n            \n                templateUrl\n                ./settings-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'settings-root',\n  templateUrl: './settings-root.component.html',\n})\nexport class SettingsRootComponent {}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      So soon...\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              So soon...      '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SettingsRootComponent } from './pages';\n\nconst routes: Routes = [{ path: '', component: SettingsRootComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class SettingsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthorizedGuard.html":{"url":"guards/UnauthorizedGuard.html","title":"guard - UnauthorizedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthorizedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/features/account/guards/unauthorized.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/guards/unauthorized.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(_: ActivatedRouteSnapshot, __: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/guards/unauthorized.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    __\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '~/core/services/account.service';\n\n@Injectable()\nexport class UnauthorizedGuard implements CanActivate {\n  constructor(private readonly accountService: AccountService, private readonly router: Router) {}\n\n  canActivate(_: ActivatedRouteSnapshot, __: RouterStateSnapshot): boolean {\n    if (!this.accountService.isLoggedIn) {\n      return true;\n    }\n\n    this.router.navigateByUrl('/');\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateAccountCommand.html":{"url":"interfaces/UpdateAccountCommand.html","title":"interface - UpdateAccountCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateAccountCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/update-account-command.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        avatar\n                                \n                                \n                                        languages\n                                \n                                \n                                        login\n                                \n                                \n                                        nickname\n                                \n                                \n                                        statusInfo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languages\n                                    \n                                \n                                \n                                    \n                                        languages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusInfo\n                                    \n                                \n                                \n                                    \n                                        statusInfo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateAccountCommand {\n  avatar: string;\n  languages: string;\n  login: string;\n  nickname: string;\n  statusInfo: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdatePasswordCommand.html":{"url":"interfaces/UpdatePasswordCommand.html","title":"interface - UpdatePasswordCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdatePasswordCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/update-password-command.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        oldPassword\n                                \n                                \n                                        password\n                                \n                                \n                                        passwordRepeat\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        oldPassword\n                                    \n                                \n                                \n                                    \n                                        oldPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordRepeat\n                                    \n                                \n                                \n                                    \n                                        passwordRepeat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdatePasswordCommand {\n  oldPassword: string;\n  password: string;\n  passwordRepeat: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n1.2.3 (2020-10-30)\nBug Fixes\n\nci (da2bfce)\n\n1.2.2 (2020-10-30)\nBug Fixes\n\nci (6089ca9)\nci (e20b1cc)\nci (82ab05e)\nmigrate from ng8 to ng10 (4dc560d)\naccount: linting account.service (f3dcfcc)\n\n1.2.1 (2019-07-06)\nBug Fixes\n\nmany changes (fe62a3f)\n\n1.2.0 (2018-07-30)\nFeatures\n\naccount: add account module (76f936e)\ncore: add auth interceptor (e04326c)\ncore: handle and log errors (1bb74e1)\nprofile: add profile module (a6fda0a)\nsettings: add settings module (3bae2ff)\nshared: add custom control validators (0a06e52)\nshared: add formControlError directive (6355a61)\n\n1.1.0 (2018-06-23)\nFeatures\n\nadd stylelint (82da58a)\n\n1.0.0 (2018-06-17)\nFeatures\n\ninitial commit (51d26ba)\n\nBREAKING CHANGES\n\nmigrate from React to Angular\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            variable\n            errorsHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/account.dto.ts\n            \n            class\n            AccountDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/auth-info.dto.ts\n            \n            class\n            AuthInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/authorize-account-command.ts\n            \n            interface\n            AuthorizeAccountCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/http-error.dto.ts\n            \n            interface\n            HttpError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/register-account-command.ts\n            \n            interface\n            RegisterAccountCommand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/update-account-command.ts\n            \n            interface\n            UpdateAccountCommand\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/update-password-command.ts\n            \n            interface\n            UpdatePasswordCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/cache.service.ts\n            \n            class\n            CacheService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/cache.service.ts\n            \n            interface\n            CacheContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/cache.service.ts\n            \n            function\n            Cacheable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/errors-handler.service.ts\n            \n            injectable\n            ErrorsHandler\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/errors-logger.service.ts\n            \n            injectable\n            ErrorsLogger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/errors-logger.service.ts\n            \n            interface\n            ErrorWithContext\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/account/account.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/account.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/account.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/account.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/components/account-login-form/account-login-form.component.ts\n            \n            component\n            AccountLoginFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/account/components/account-register-form/account-register-form.component.ts\n            \n            component\n            AccountRegisterFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/account/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/guards/logout.guard.ts\n            \n            guard\n            LogoutGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/account/guards/unauthorized.guard.ts\n            \n            guard\n            UnauthorizedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/account/pages/account-login-root/account-login-root.component.ts\n            \n            component\n            AccountLoginRootComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/account/pages/account-register-root/account-register-root.component.ts\n            \n            component\n            AccountRegisterRootComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/account/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/general.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/general.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/general.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/pages/general-root/general-root.component.ts\n            \n            component\n            GeneralRootComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/components/profile-card/profile-card.component.ts\n            \n            component\n            ProfileCardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/profile/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts\n            \n            component\n            ProfileCardContainerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/profile/containers/profile-wall-container/profile-wall-container.component.ts\n            \n            component\n            ProfileWallContainerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/pages/profile-root/profile-root.component.ts\n            \n            component\n            ProfileRootComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts\n            \n            component\n            SettingsAccountDataFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts\n            \n            component\n            SettingsAccountPasswordFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/settings/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts\n            \n            component\n            SettingsAccountContainerComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/settings/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/pages/settings-root/settings-root.component.ts\n            \n            component\n            SettingsRootComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/services/index.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/services/manage.service.ts\n            \n            injectable\n            ManageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts\n            \n            component\n            MainScrollToTopComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts\n            \n            component\n            MainToolbarAvatarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/main/containers/main-toolbar-mail/main-toolbar-mail.component.ts\n            \n            component\n            MainToolbarMailComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/containers/main-toolbar-notifications/main-toolbar-notifications.component.ts\n            \n            component\n            MainToolbarNotificationsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            exports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/pages/main-error/main-error.component.ts\n            \n            component\n            MainErrorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/pages/main-root/main-root.component.ts\n            \n            component\n            MainRootComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/custom-validators.ts\n            \n            class\n            CustomValidators\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts\n            \n            directive\n            MpgpFormControlErrorDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts\n            \n            interface\n            FormControlError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            interface\n            IEnvironment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 10.2.1\n        \n            @angular/cdk : 10.2.6\n        \n            @angular/common : 10.2.1\n        \n            @angular/compiler : 10.2.1\n        \n            @angular/core : 10.2.1\n        \n            @angular/flex-layout : 10.0.0-beta.32\n        \n            @angular/forms : 10.2.1\n        \n            @angular/http : 7.2.16\n        \n            @angular/material : 10.2.6\n        \n            @angular/platform-browser : 10.2.1\n        \n            @angular/platform-browser-dynamic : 10.2.1\n        \n            @angular/router : 10.2.1\n        \n            core-js : 3.6.5\n        \n            rxjs : 6.6.3\n        \n            rxjs-compat : 6.6.3\n        \n            stylelint : 13.7.2\n        \n            stylelint-order : 4.1.0\n        \n            zone.js : 0.11.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Cacheable   (src/.../cache.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/cache.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Cacheable\n                        \n                        \n                    \n                \n            \n            \n                \nCacheable(cacheTime)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cacheTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrowserClient\nhttps://mpgp.github.io/BrowserClient\n\nThis project was generated with Angular CLI version 6.\n\n\n\n\n\n\n\n\n \nPull docker image\ndocker pull mpgp129/mpgpclient\nRun docker container\ndocker run --rm --hostname localhost -p 8080:8080  --name mpgpclient mpgp129/mpgpclient:latest\n\nInstall packages\nyarn install\nyarn global add @angular/cli --prefix /usr/local\nDevelopment server\nRun yarn run start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun yarn run build to build the project. The build artifacts will be stored in the dist directory.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause \"Simplified\" License\nCopyright (c) 2018, MPGP\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneralModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneralRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MpgpFormControlErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_GeneralModule\n\n\n\ncluster_GeneralModule_imports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_MainModule_exports\n\n\n\ncluster_MpgpFormControlErrorModule\n\n\n\ncluster_MpgpFormControlErrorModule_declarations\n\n\n\ncluster_MpgpFormControlErrorModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nMainErrorComponent->AccountModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainErrorComponent->MainModule\n\n\n\n\n\nGeneralModule\n\nGeneralModule\n\nGeneralModule -->\n\nMainErrorComponent->GeneralModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nMainErrorComponent->ProfileModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainErrorComponent->SettingsModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nAccountModule -->\n\nMainRootComponent->AccountModule\n\n\n\nMainModule -->\n\nMainRootComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainRootComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainRootComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainRootComponent->SettingsModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nAccountModule -->\n\nMainScrollToTopComponent->AccountModule\n\n\n\nMainModule -->\n\nMainScrollToTopComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainScrollToTopComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainScrollToTopComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainScrollToTopComponent->SettingsModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nAccountModule -->\n\nMainToolbarAvatarComponent->AccountModule\n\n\n\nMainModule -->\n\nMainToolbarAvatarComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainToolbarAvatarComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainToolbarAvatarComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainToolbarAvatarComponent->SettingsModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nAccountModule -->\n\nMainToolbarMailComponent->AccountModule\n\n\n\nMainModule -->\n\nMainToolbarMailComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainToolbarMailComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainToolbarMailComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainToolbarMailComponent->SettingsModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nAccountModule -->\n\nMainToolbarNotificationsComponent->AccountModule\n\n\n\nMainModule -->\n\nMainToolbarNotificationsComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainToolbarNotificationsComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainToolbarNotificationsComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainToolbarNotificationsComponent->SettingsModule\n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule\n\nAccountModule -->\n\nMpgpFormControlErrorModule->AccountModule\n\n\n\n\n\nMpgpFormControlErrorDirective \n\nMpgpFormControlErrorDirective \n\nMpgpFormControlErrorDirective  -->\n\nMpgpFormControlErrorModule->MpgpFormControlErrorDirective \n\n\n\nSettingsModule -->\n\nMpgpFormControlErrorModule->SettingsModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nMainRootComponent \n\nMainRootComponent \n\nMainRootComponent  -->\n\nMainModule->MainRootComponent \n\n\n\n\n\nAccountService\n\nAccountService\n\nCoreModule -->\n\nAccountService->CoreModule\n\n\n\n\n\nErrorsLogger\n\nErrorsLogger\n\nCoreModule -->\n\nErrorsLogger->CoreModule\n\n\n\n\n\nGeneralRoutingModule\n\nGeneralRoutingModule\n\nGeneralModule -->\n\nGeneralRoutingModule->GeneralModule\n\n\n\n\n\nMainRoutingModule\n\nMainRoutingModule\n\nMainModule -->\n\nMainRoutingModule->MainModule\n\n\n\n\n\nMpgpFormControlErrorDirective\n\nMpgpFormControlErrorDirective\n\nMpgpFormControlErrorModule -->\n\nMpgpFormControlErrorDirective->MpgpFormControlErrorModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nManageService\n\nManageService\n\nSettingsModule -->\n\nManageService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authInterceptor   (src/.../core.module.ts)\n                        \n                        \n                            bootstrap   (src/.../app.module.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            declarations   (src/.../app.module.ts)\n                        \n                        \n                            declarations   (src/.../main.module.ts)\n                        \n                        \n                            declarations   (src/.../account.module.ts)\n                        \n                        \n                            declarations   (src/.../general.module.ts)\n                        \n                        \n                            declarations   (src/.../profile.module.ts)\n                        \n                        \n                            declarations   (src/.../settings.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errorsHandler   (src/.../core.module.ts)\n                        \n                        \n                            exports   (src/.../main.module.ts)\n                        \n                        \n                            imports   (src/.../app.module.ts)\n                        \n                        \n                            imports   (src/.../main.module.ts)\n                        \n                        \n                            imports   (src/.../account.module.ts)\n                        \n                        \n                            imports   (src/.../general.module.ts)\n                        \n                        \n                            imports   (src/.../profile.module.ts)\n                        \n                        \n                            imports   (src/.../settings.module.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            providers   (src/.../core.module.ts)\n                        \n                        \n                            providers   (src/.../main.module.ts)\n                        \n                        \n                            providers   (src/.../account.module.ts)\n                        \n                        \n                            providers   (src/.../settings.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../index.ts)\n                        \n                        \n                            vendorImports   (src/.../main.module.ts)\n                        \n                        \n                            vendorImports   (src/.../account.module.ts)\n                        \n                        \n                            vendorImports   (src/.../general.module.ts)\n                        \n                        \n                            vendorImports   (src/.../profile.module.ts)\n                        \n                        \n                            vendorImports   (src/.../settings.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/core.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authInterceptor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  multi: true,\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorsHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: ErrorHandler,\n  useClass: ErrorsHandler,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountService, authInterceptor, errorsHandler, ErrorsLogger]\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bootstrap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AppComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AppComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [BrowserAnimationsModule, BrowserModule, CoreModule, HttpClientModule, LayoutModule, MainModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/main/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/features/account/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountLoginFormComponent, AccountRegisterFormComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/general/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/features/profile/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ProfileCardComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SettingsAccountDataFormComponent, SettingsAccountPasswordFormComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/main/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MainScrollToTopComponent,\n  MainToolbarAvatarComponent,\n  MainToolbarMailComponent,\n  MainToolbarNotificationsComponent,\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/account/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/features/general/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/features/profile/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ProfileCardContainerComponent, ProfileWallContainerComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SettingsAccountContainerComponent]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/main/main.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MainRootComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule, MainRoutingModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AuthGuard]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatBadgeModule, MatButtonModule, MatIconModule, MatListModule, MatMenuModule, MatToolbarModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/account/account.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountRoutingModule, CommonModule, FormsModule, MpgpFormControlErrorModule, ReactiveFormsModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [LogoutGuard, UnauthorizedGuard]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatButtonModule, MatCardModule, MatFormFieldModule, MatInputModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/general/general.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [GeneralRoutingModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatCardModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/profile/profile.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule, ProfileRoutingModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatButtonModule, MatCardModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/settings.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule, FormsModule, MpgpFormControlErrorModule, ReactiveFormsModule, SettingsRoutingModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...services]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatButtonModule, MatFormFieldModule, MatInputModule, MatTabsModule]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiUrl: 'http://localhost:5000/api/',\n  clientId: 'mpgpclient',\n  imageUrl: 'http://localhost:5000/images/avatars/',\n  production: true,\n  websocketPath: 'ws://localhost:5000/elite-crew',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironment\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiUrl: 'http://localhost:5000/api/',\n  clientId: 'mpgpclient',\n  imageUrl: 'http://localhost:5000/images/avatars/',\n  production: false,\n  websocketPath: 'ws://localhost:5000/elite-crew',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/main/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MainErrorComponent, MainRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/account/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountLoginRootComponent, AccountRegisterRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/general/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [GeneralRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/profile/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ProfileRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SettingsRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/services/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ManageService]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
